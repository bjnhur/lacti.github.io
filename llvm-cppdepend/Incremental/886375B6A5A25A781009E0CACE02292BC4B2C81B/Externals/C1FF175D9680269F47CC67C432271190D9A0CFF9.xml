<Externals>
<cr namespace="std" access="none" depth="1" kind="struct" name="char_traits" id="dc6a030260fdce02a4552ddbd0ff2ec9_bf3447e13ccfc57e5fa847f5d78e7639" file="2" linestart="260" lineend="263">
<base access="public">
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_0e14667e7fa909cae787013e4a665cda"/>
<template_arguments>
<ttp/>
<bt name="long"/>
</template_arguments>
</tss>
</base>
</cr>
<cts Spec="&lt;char&gt;" namespace="std" access="none" depth="0" pod="true" kind="struct" name="char_traits" id="dc6a030260fdce02a4552ddbd0ff2ec9_76e43d9fa50c2ce16dafa9452550a098" file="2" linestart="504" lineend="607"/>
<tm namespace="std" access="none" kind="class" name="allocator" id="dc6a030260fdce02a4552ddbd0ff2ec9_07566aa809aee0bdf1c0fac16e19fa85" file="2" linestart="610" lineend="611">
<template_parameters>
<ttp name="_Ty" id="dc6a030260fdce02a4552ddbd0ff2ec9_5dabb8add95e1f50264087371ebe1436" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" kind="class" name="allocator" id="dc6a030260fdce02a4552ddbd0ff2ec9_07566aa809aee0bdf1c0fac16e19fa85" file="2" linestart="611" lineend="611"/>
</tm>
<cr namespace="std" access="none" depth="1" kind="class" name="allocator" id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_07566aa809aee0bdf1c0fac16e19fa85" file="3" linestart="507" lineend="614" previous="dc6a030260fdce02a4552ddbd0ff2ec9_07566aa809aee0bdf1c0fac16e19fa85">
<base access="public">
<tss>
<templatebase id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_88cdcaf24b75beed0de34443253840d2"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</base>
<tm parent="e709ea4c3e9ceb4cc0600c1bf8d29ceb_07566aa809aee0bdf1c0fac16e19fa85" access="none" depth="0" pod="true" kind="struct" name="rebind" id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_38c2be5a786a253bb82af3c54854f921" file="3" linestart="536" lineend="540">
<template_parameters>
<ttp name="_Other" id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_5cb4d687f09ee7cb5b3575605cef20a8" depth="" index="" proto="type-parameter-1-0"/>
</template_parameters>
</tm>
</cr>
<tm namespace="std" access="none" depth="3" kind="class" name="basic_string" id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb" file="4" linestart="689" lineend="2297" previous="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb">
<template_parameters>
<ttp name="_Elem" id="f2e96efeaba09e7d8921632d675962d4_97d2655bc427b0bca0bf3fd72608091f" depth="" index="" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="f2e96efeaba09e7d8921632d675962d4_88cafbb8af4cbe00477f4d0dc5b6f62c" depth="" index="" proto="type-parameter-0-1"/>
<ttp name="_Alloc" id="f2e96efeaba09e7d8921632d675962d4_636b2981289c18feee5282669fe62e0a" depth="" index="" proto="type-parameter-0-2"/>
</template_parameters>
<cr namespace="std" access="none" depth="3" kind="class" name="basic_string" id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb" file="4" linestart="692" lineend="2297" previous="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb">
<base access="public">
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_fd6b90577893febf1782c3472e44b788"/>
<template_arguments>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_15e8cc19f33496752ccbe61f65b7379c"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</base>
<cr access="public" kind="class" name="basic_string" id="f2e96efeaba09e7d8921632d675962d4_7808f3d3e2ddb7f603f560a243578200" file="4" linestart="692" lineend="692"/>
<c name="basic_string&lt;_Elem, _Traits, _Ax&gt;" id="f2e96efeaba09e7d8921632d675962d4_27c29e5ae4008e8e02d1117a50805d4f" file="4" linestart="778" lineend="783" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="_Ptr" proto="const _Elem *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
</c>
<c name="basic_string&lt;_Elem, _Traits, _Ax&gt;" id="f2e96efeaba09e7d8921632d675962d4_e3eb16c4c3462a2d9004e988dec04a31" file="4" linestart="885" lineend="890" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
<exception_specifiers nothrow="true"/>
</fpt>
<p name="_Right" proto="_Myt &amp;&amp;" isRef="true" access2="none">
<rrf>
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</rrf>
</p>
</c>
<m name="c_str" id="f2e96efeaba09e7d8921632d675962d4_65d516408dbbf5d49be55f4917fbb4c6" file="4" linestart="1737" lineend="1740" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const _Elem *">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
<exception_specifiers nothrow="true"/>
</fpt>
</m>
</cr>
</tm>
<cr namespace="llvm" access="none" depth="0" kind="class" name="StringRef" id="6f9d54688deb2fea7e6a760a21186275_1025e290e4030296f4991e57e4952f33" file="5" linestart="40" lineend="521" previous="6f9d54688deb2fea7e6a760a21186275_1025e290e4030296f4991e57e4952f33">
<c name="StringRef" id="6f9d54688deb2fea7e6a760a21186275_a684699547c70f5902c9a02f2a7e9149" file="5" linestart="75" lineend="79" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="Str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<initlist id="6f9d54688deb2fea7e6a760a21186275_743d9d6267ce311d3bc4f27153ffcd76"/>
</c>
<c name="StringRef" id="6f9d54688deb2fea7e6a760a21186275_f65542d9c3508bbd2236074d105cb699" file="5" linestart="89" lineend="90" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="Str" proto="const std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<bt name="char"/>
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_bf3447e13ccfc57e5fa847f5d78e7639"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
<tss>
<templatebase id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_07566aa809aee0bdf1c0fac16e19fa85"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
<initlist id="6f9d54688deb2fea7e6a760a21186275_743d9d6267ce311d3bc4f27153ffcd76"/>
<initlist id="6f9d54688deb2fea7e6a760a21186275_db2d7f79de4ee02080e29595edee6c00"/>
</c>
<c name="StringRef" id="6f9d54688deb2fea7e6a760a21186275_1cde07128879fdd147febaf099861744" file="5" linestart="40" lineend="40" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="llvm::StringRef &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="6f9d54688deb2fea7e6a760a21186275_1025e290e4030296f4991e57e4952f33"/>
</rt>
</rrf>
</p>
</c>
</cr>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="ScopedTrace" id="361592d094a324447c0b12d8c282c7d5_6922d5a7497b944e35c2eeadce785b02" file="6" linestart="199" lineend="213" previous="361592d094a324447c0b12d8c282c7d5_6922d5a7497b944e35c2eeadce785b02">
<c name="ScopedTrace" id="361592d094a324447c0b12d8c282c7d5_3f453d0f86555a252d06fb824a2c7e13" file="6" linestart="203" lineend="203" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="file" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="line" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="message" proto="const testing::Message &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="d6da877cd43d9ea62976e055cbb7a3f4_a57271b22cdb2fdb3d50588243bf5562"/>
</rt>
</QualType>
</lrf>
</p>
</c>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="Message" id="d6da877cd43d9ea62976e055cbb7a3f4_a57271b22cdb2fdb3d50588243bf5562" file="7" linestart="82" lineend="221" previous="361592d094a324447c0b12d8c282c7d5_a57271b22cdb2fdb3d50588243bf5562">
<c name="Message" id="d6da877cd43d9ea62976e055cbb7a3f4_21a3d36d55284f1d8751ec8cddd8c404" file="7" linestart="94" lineend="98" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<initlist id="d6da877cd43d9ea62976e055cbb7a3f4_b337e99236191cea06ced5fb66037052"/>
</c>
<ft name="operator&lt;&lt;" id="d6da877cd43d9ea62976e055cbb7a3f4_763fb98e0dd7720ad8e74ed68b95460c" file="7" linestart="119" lineend="123">
<template_parameters>
<ttp name="T" id="d6da877cd43d9ea62976e055cbb7a3f4_e0dbeb6f0634b8dd5ecb4e7fddeb5947" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<m name="operator&lt;&lt;" id="d6da877cd43d9ea62976e055cbb7a3f4_14a926ad8446b77cb10233f85430f517" file="7" linestart="120" lineend="123" operator="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt proto="testing::Message &amp;">
<lrf>
<rt>
<cr id="d6da877cd43d9ea62976e055cbb7a3f4_a57271b22cdb2fdb3d50588243bf5562"/>
</rt>
</lrf>
</fpt>
<p name="val" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</m>
</ft>
</cr>
<e parent="562ee964b610e766d302b8dfed46fd41_5f4fb82d9196d416897f8942199b65f3" access="public" name="Type" id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1" file="8" linestart="51" lineend="55" fixed="true">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
<ec name="kNonFatalFailure" id="562ee964b610e766d302b8dfed46fd41_383aae76b62cf18ba08225968ae6e7a3" file="8" linestart="53" lineend="53">
<et>
<e id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1"/>
</et>
</ec>
</e>
<cr namespace="testing" access="none" depth="0" kind="class" name="AssertionResult" id="0dc4cd8d4d61c13ddce2ee0effc89eca_1b0b5edb5a536c8577b46f6e0d5d791d" file="9" linestart="265" lineend="321" previous="361592d094a324447c0b12d8c282c7d5_1b0b5edb5a536c8577b46f6e0d5d791d">
<c name="AssertionResult" id="0dc4cd8d4d61c13ddce2ee0effc89eca_90376d02aab3f76734cce9b29267f2af" file="9" linestart="269" lineend="269" copyconst="true" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="other" proto="const testing::AssertionResult &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_1b0b5edb5a536c8577b46f6e0d5d791d"/>
</rt>
</QualType>
</lrf>
</p>
</c>
<cv name="operator bool" id="0dc4cd8d4d61c13ddce2ee0effc89eca_c2f20ab10b1a1c248f08973b7014d633" file="9" linestart="274" lineend="274" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</cv>
<m name="failure_message" id="0dc4cd8d4d61c13ddce2ee0effc89eca_50b6fa066d3e0d41ee32ad34528c8103" file="9" linestart="288" lineend="288" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="Test" id="0dc4cd8d4d61c13ddce2ee0effc89eca_964ac3d325bf97cf954384b45d20b6e8" file="9" linestart="356" lineend="463" previous="0dc4cd8d4d61c13ddce2ee0effc89eca_964ac3d325bf97cf954384b45d20b6e8">
<m name="SetUpTestCase" id="0dc4cd8d4d61c13ddce2ee0effc89eca_9a9dc2bca30077fcc6a89530f92e1339" file="9" linestart="374" lineend="374" access="public" storage="static" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="TearDownTestCase" id="0dc4cd8d4d61c13ddce2ee0effc89eca_d2e5bc6dcdf9b44bb09113afda19cad7" file="9" linestart="382" lineend="382" access="public" storage="static" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<c name="Test" id="0dc4cd8d4d61c13ddce2ee0effc89eca_84d92362fbd4a41dfcdd762261a24cf5" file="9" linestart="411" lineend="411" access="protected">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="TestInfo" id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e" file="9" linestart="625" lineend="735" previous="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
<tm namespace="testing.internal" access="none" depth="0" pod="true" kind="class" name="EqHelper" id="0dc4cd8d4d61c13ddce2ee0effc89eca_350bece42c7c2286ac893ed2f9905d9f" file="9" linestart="1346" lineend="1372">
<template_parameters/>
<cr namespace="testing.internal" access="none" depth="0" pod="true" kind="class" name="EqHelper" id="0dc4cd8d4d61c13ddce2ee0effc89eca_9f03c6b4788c855604a1b39f6bd8c43f" file="9" linestart="1347" lineend="1372">
<cr access="public" kind="class" name="EqHelper" id="0dc4cd8d4d61c13ddce2ee0effc89eca_07febb784a13e0e5d35719b4531e86a5" file="9" linestart="1347" lineend="1347"/>
<ft name="Compare" id="0dc4cd8d4d61c13ddce2ee0effc89eca_54323f0a38144261d59641f516370cec" file="9" linestart="1350" lineend="1357">
<template_parameters>
<ttp name="T1" id="0dc4cd8d4d61c13ddce2ee0effc89eca_81567f84e62214361ffb26585bf6df11" depth="" index="" proto="type-parameter-1-0"/>
<ttp name="T2" id="0dc4cd8d4d61c13ddce2ee0effc89eca_2230f6b110d39b1dbbe144486c06d097" depth="" index="" proto="type-parameter-1-1"/>
</template_parameters>
<m name="Compare" id="0dc4cd8d4d61c13ddce2ee0effc89eca_032d369924e43a9a8eb727d96d7cd8b0" file="9" linestart="1351" lineend="1357" access="public" storage="static" hasbody="true" isdef="true">
<fpt proto="testing::AssertionResult">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_1b0b5edb5a536c8577b46f6e0d5d791d"/>
</rt>
</fpt>
<p name="expected_expression" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="actual_expression" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="expected" proto="const T1 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="actual" proto="const T2 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</m>
</ft>
</cr>
</tm>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="AssertHelper" id="0dc4cd8d4d61c13ddce2ee0effc89eca_7260371f7d6759cab9d4e4b45f795755" file="9" linestart="1594" lineend="1631" previous="0dc4cd8d4d61c13ddce2ee0effc89eca_7260371f7d6759cab9d4e4b45f795755">
<c name="AssertHelper" id="0dc4cd8d4d61c13ddce2ee0effc89eca_5f3bae04f063d84394fe9d50198f2c6a" file="9" linestart="1597" lineend="1600" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="type" proto="TestPartResult::Type" isLiteral="true" access2="none">
<ety>
<et>
<e id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1"/>
</et>
</ety>
</p>
<p name="file" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="line" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="message" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</c>
<m name="operator=" id="0dc4cd8d4d61c13ddce2ee0effc89eca_7c7803b0e3e57d066468d0bec8cde703" file="9" linestart="1605" lineend="1605" operator="true" access="public">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="message" proto="const testing::Message &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="d6da877cd43d9ea62976e055cbb7a3f4_a57271b22cdb2fdb3d50588243bf5562"/>
</rt>
</QualType>
</lrf>
</p>
</m>
</cr>
<cr namespace="llvm" access="none" depth="0" kind="class" name="FoldingSetNodeID" id="b018b98d9f7820f7985f3b3fc7c3ebbf_bdc57d80e99b268f3b6eb383e5352df2" file="10" linestart="296" lineend="348" previous="b018b98d9f7820f7985f3b3fc7c3ebbf_bdc57d80e99b268f3b6eb383e5352df2">
<c name="FoldingSetNodeID" id="b018b98d9f7820f7985f3b3fc7c3ebbf_5a23b119594a1dd3514f851fd4803c0f" file="10" linestart="302" lineend="302" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
<m name="AddString" id="b018b98d9f7820f7985f3b3fc7c3ebbf_c4eccf9752a0e0328d152357e4232d17" file="10" linestart="317" lineend="317" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="String" proto="llvm::StringRef" access2="none">
<rt>
<cr id="6f9d54688deb2fea7e6a760a21186275_1025e290e4030296f4991e57e4952f33"/>
</rt>
</p>
</m>
<m name="ComputeHash" id="b018b98d9f7820f7985f3b3fc7c3ebbf_b04e65722081e039c1671d4da28d0f3f" file="10" linestart="329" lineend="329" access="public">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
</m>
</cr>
<f namespace="std" name="operator+" id="f2e96efeaba09e7d8921632d675962d4_60b632f244187b4cc4dddd9d2b09c7b6" file="4" linestart="2334" lineend="2344" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="basic_string&lt;_Elem, _Traits, _Alloc&gt;">
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="_Left" proto="const _Elem *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="_Right" proto="const basic_string&lt;_Elem, _Traits, _Alloc&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
</f>
<ft name="operator+" id="f2e96efeaba09e7d8921632d675962d4_7ba2f4a7b438046b66e55d748a951b5c" file="4" linestart="2332" lineend="2344">
<template_parameters>
<ttp name="_Elem" id="f2e96efeaba09e7d8921632d675962d4_da1281c88709bd0921b7252b163cc05a" depth="" index="" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="f2e96efeaba09e7d8921632d675962d4_9c02f991a57a3b78c5e333e95cde9aeb" depth="" index="" proto="type-parameter-0-1"/>
<ttp name="_Alloc" id="f2e96efeaba09e7d8921632d675962d4_bf12b6b49a80980256be776f329dbeea" depth="" index="" proto="type-parameter-0-2"/>
</template_parameters>
<f namespace="std" name="operator+" id="f2e96efeaba09e7d8921632d675962d4_60b632f244187b4cc4dddd9d2b09c7b6" file="4" linestart="2334" lineend="2344" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="basic_string&lt;_Elem, _Traits, _Alloc&gt;">
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="_Left" proto="const _Elem *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="_Right" proto="const basic_string&lt;_Elem, _Traits, _Alloc&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
</f>
</ft>
<f namespace="testing.internal" name="GetTestTypeId" id="361592d094a324447c0b12d8c282c7d5_e8ecc4c7ff1c3d40cce55780474106a4" file="6" linestart="534" lineend="534" access="none">
<fpt proto="TypeId">
<Tdef>
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</Tdef>
</fpt>
</f>
<f namespace="testing.internal" name="MakeAndRegisterTestInfo" id="361592d094a324447c0b12d8c282c7d5_c94e15073fa33c9f81254abdf66926e3" file="6" linestart="595" lineend="602" access="none">
<fpt proto="testing::TestInfo *">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
</rt>
</pt>
</fpt>
<p name="test_case_name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="type_param" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value_param" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="fixture_class_id" proto="TypeId" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</Tdef>
</p>
<p name="set_up_tc" proto="SetUpTestCaseFunc" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<Paren/>
</pt>
</Tdef>
</p>
<p name="tear_down_tc" proto="TearDownTestCaseFunc" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<Paren/>
</pt>
</Tdef>
</p>
<p name="factory" proto="testing::internal::TestFactoryBase *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="361592d094a324447c0b12d8c282c7d5_ebebd0ac8a5c6834880cc16f32b5b90a"/>
</rt>
</pt>
</p>
</f>
</Externals>
