<Root>
<Comments>
<c f="1" b="1" e="1"/>
<c f="1" b="2" e="2"/>
<c f="1" b="3" e="3"/>
<c f="1" b="4" e="4"/>
<c f="1" b="5" e="5"/>
<c f="1" b="6" e="6"/>
<c f="1" b="7" e="7"/>
<c f="1" b="8" e="8"/>
<c f="1" b="9" e="9"/>
<c f="1" b="10" e="10"/>
<c f="1" b="11" e="11"/>
<c f="1" b="12" e="12"/>
<c f="1" b="13" e="13"/>
<c f="1" b="14" e="14"/>
<c f="1" b="16" e="14"/>
<c f="1" b="30" e="30"/>
<c f="1" b="31" e="30"/>
<c f="1" b="43" e="43"/>
<c f="1" b="44" e="43"/>
<c f="1" b="49" e="49"/>
<c f="1" b="50" e="49"/>
<c f="1" b="55" e="55"/>
<c f="1" b="56" e="55"/>
<c f="1" b="62" e="62"/>
<c f="1" b="63" e="62"/>
<c f="1" b="67" e="67"/>
<c f="1" b="68" e="67"/>
<c f="1" b="72" e="72"/>
<c f="1" b="73" e="72"/>
<c f="1" b="78" e="78"/>
<c f="1" b="79" e="78"/>
<c f="1" b="86" e="86"/>
<c f="1" b="87" e="86"/>
<c f="1" b="128" e="128"/>
<c f="1" b="129" e="129"/>
<c f="1" b="130" e="129"/>
<c f="1" b="177" e="177"/>
<c f="1" b="178" e="177"/>
<c f="1" b="185" e="185"/>
<c f="1" b="186" e="185"/>
<c f="1" b="191" e="191"/>
<c f="1" b="192" e="191"/>
<c f="1" b="199" e="199"/>
<c f="1" b="200" e="199"/>
<c f="1" b="206" e="206"/>
<c f="1" b="207" e="206"/>
<c f="1" b="214" e="214"/>
<c f="1" b="215" e="214"/>
<c f="1" b="227" e="227"/>
<c f="1" b="228" e="228"/>
<c f="1" b="229" e="229"/>
<c f="1" b="230" e="229"/>
<c f="1" b="236" e="236"/>
<c f="1" b="237" e="236"/>
<c f="1" b="241" e="241"/>
<c f="1" b="242" e="241"/>
<c f="1" b="245" e="245"/>
<c f="1" b="246" e="245"/>
<c f="1" b="252" e="252"/>
<c f="1" b="253" e="252"/>
<c f="1" b="258" e="258"/>
<c f="1" b="259" e="258"/>
<c f="1" b="263" e="263"/>
<c f="1" b="264" e="263"/>
<c f="1" b="269" e="269"/>
<c f="1" b="270" e="269"/>
<c f="1" b="320" e="320"/>
<c f="1" b="321" e="320"/>
<c f="1" b="341" e="341"/>
<c f="1" b="342" e="342"/>
<c f="1" b="343" e="343"/>
<c f="1" b="344" e="343"/>
</Comments>
<Macros>
<m f="1" bl="112" bc="3" el="112" ec="37"/>
<m f="1" bl="121" bc="3" el="121" ec="37"/>
<m f="1" bl="225" bc="3" el="226" ec="64"/>
<m f="1" bl="274" bc="40" el="274" ec="40"/>
<m f="1" bl="278" bc="40" el="278" ec="40"/>
<m f="1" bl="321" bc="3" el="321" ec="36"/>
</Macros>
<Comments>
<c f="2" b="1" e="1"/>
<c f="2" b="2" e="2"/>
<c f="2" b="3" e="3"/>
<c f="2" b="4" e="4"/>
<c f="2" b="5" e="5"/>
<c f="2" b="6" e="6"/>
<c f="2" b="7" e="7"/>
<c f="2" b="8" e="8"/>
<c f="2" b="9" e="9"/>
<c f="2" b="10" e="10"/>
<c f="2" b="11" e="11"/>
<c f="2" b="12" e="12"/>
<c f="2" b="13" e="13"/>
<c f="2" b="14" e="14"/>
<c f="2" b="16" e="14"/>
<c f="2" b="1" e="1"/>
<c f="2" b="2" e="2"/>
<c f="2" b="3" e="3"/>
<c f="2" b="4" e="4"/>
<c f="2" b="5" e="5"/>
<c f="2" b="6" e="6"/>
<c f="2" b="7" e="7"/>
<c f="2" b="8" e="8"/>
<c f="2" b="9" e="9"/>
<c f="2" b="10" e="10"/>
<c f="2" b="11" e="11"/>
<c f="2" b="12" e="12"/>
<c f="2" b="13" e="13"/>
<c f="2" b="14" e="14"/>
<c f="2" b="16" e="14"/>
<c f="2" b="104" e="104"/>
<c f="2" b="105" e="105"/>
<c f="2" b="106" e="105"/>
<c f="2" b="108" e="108"/>
<c f="2" b="109" e="109"/>
<c f="2" b="110" e="109"/>
<c f="2" b="142" e="142"/>
<c f="2" b="143" e="142"/>
<c f="2" b="146" e="146"/>
<c f="2" b="147" e="147"/>
<c f="2" b="148" e="148"/>
<c f="2" b="150" e="148"/>
<c f="2" b="152" e="152"/>
<c f="2" b="153" e="153"/>
<c f="2" b="154" e="154"/>
<c f="2" b="155" e="155"/>
<c f="2" b="156" e="156"/>
<c f="2" b="157" e="157"/>
<c f="2" b="158" e="158"/>
<c f="2" b="159" e="158"/>
<c f="2" b="162" e="162"/>
<c f="2" b="163" e="163"/>
<c f="2" b="164" e="163"/>
<c f="2" b="166" e="166"/>
<c f="2" b="167" e="167"/>
<c f="2" b="168" e="168"/>
<c f="2" b="169" e="168"/>
<c f="2" b="174" e="174"/>
<c f="2" b="175" e="175"/>
<c f="2" b="176" e="176"/>
<c f="2" b="177" e="176"/>
<c f="2" b="182" e="182"/>
<c f="2" b="183" e="182"/>
<c f="2" b="187" e="187"/>
<c f="2" b="188" e="188"/>
<c f="2" b="189" e="188"/>
<c f="2" b="195" e="195"/>
<c f="2" b="197" e="195"/>
<c f="2" b="197" e="197"/>
<c f="2" b="199" e="197"/>
<c f="2" b="104" e="104"/>
<c f="2" b="105" e="105"/>
<c f="2" b="106" e="105"/>
<c f="2" b="108" e="108"/>
<c f="2" b="109" e="109"/>
<c f="2" b="110" e="109"/>
<c f="2" b="142" e="142"/>
<c f="2" b="143" e="142"/>
<c f="2" b="146" e="146"/>
<c f="2" b="147" e="147"/>
<c f="2" b="148" e="148"/>
<c f="2" b="150" e="148"/>
<c f="2" b="152" e="152"/>
<c f="2" b="153" e="153"/>
<c f="2" b="154" e="154"/>
<c f="2" b="155" e="155"/>
<c f="2" b="156" e="156"/>
<c f="2" b="157" e="157"/>
<c f="2" b="158" e="158"/>
<c f="2" b="159" e="158"/>
<c f="2" b="162" e="162"/>
<c f="2" b="163" e="163"/>
<c f="2" b="164" e="163"/>
<c f="2" b="166" e="166"/>
<c f="2" b="167" e="167"/>
<c f="2" b="168" e="168"/>
<c f="2" b="169" e="168"/>
<c f="2" b="174" e="174"/>
<c f="2" b="175" e="175"/>
<c f="2" b="176" e="176"/>
<c f="2" b="177" e="176"/>
<c f="2" b="182" e="182"/>
<c f="2" b="183" e="182"/>
<c f="2" b="187" e="187"/>
<c f="2" b="188" e="188"/>
<c f="2" b="189" e="188"/>
<c f="2" b="195" e="195"/>
<c f="2" b="197" e="195"/>
<c f="2" b="197" e="197"/>
<c f="2" b="199" e="197"/>
</Comments>
<Macros/>
<tun>
<ns name="llvm" id="94021f4eb3db4bb5e433d342e7530945_544dadc8774ac7e8cdf9804c9bca3e1f" file="2" linestart="34" lineend="197" original="">
<cr namespace="llvm" access="none" kind="class" name="AMDGPUSubtarget" id="94021f4eb3db4bb5e433d342e7530945_ccee921ff17fb86771cc7950ec66d7db" file="2" linestart="36" lineend="36" previous="7ebe28b077af0dc3580f965a9216fd3f_ccee921ff17fb86771cc7950ec66d7db"/>
<cr namespace="llvm" access="none" kind="class" name="MachineFunction" id="94021f4eb3db4bb5e433d342e7530945_7a76e175133a980deee19d81d954fcc0" file="2" linestart="37" lineend="37" previous="895a66b41661e915ba6854da2359580f_7a76e175133a980deee19d81d954fcc0"/>
<cr namespace="llvm" access="none" kind="class" name="MachineInstr" id="94021f4eb3db4bb5e433d342e7530945_6044ca844a7ec5fb9a6c63d2c45cb3c4" file="2" linestart="38" lineend="38" previous="6ecae7625e66dd1485e4236d350ee2d0_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
<cr namespace="llvm" access="none" kind="class" name="MachineInstrBuilder" id="94021f4eb3db4bb5e433d342e7530945_1438597d7eaf2dd7c745676415aeb79c" file="2" linestart="39" lineend="39"/>
<cr namespace="llvm" access="none" depth="0" kind="class" name="AMDGPUInstrInfo" id="94021f4eb3db4bb5e433d342e7530945_042d8f4bdaebce19fa1c25343be9bd28" file="2" linestart="41" lineend="191">
<cr access="public" kind="class" name="AMDGPUInstrInfo" id="94021f4eb3db4bb5e433d342e7530945_c54fa143626af6128bed28d307deab05" file="2" linestart="41" lineend="41"/>
<Decl access="private"/>
<fl name="RI" id="94021f4eb3db4bb5e433d342e7530945_38ae95bda0c45da36e38d10422dafd2c" file="2" linestart="43" lineend="43" const="true" access="private" proto="const llvm::AMDGPURegisterInfo">
<QualType const="true">
<rt>
<cr id="7ebe28b077af0dc3580f965a9216fd3f_e0372a749c66eaa3f4c2fdb005c00025"/>
</rt>
</QualType>
</fl>
<m name="getNextBranchInstr" id="94021f4eb3db4bb5e433d342e7530945_c1e541be0b60fab2d7c93a28b3446fb4" file="2" linestart="44" lineend="45" access="private" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="iter" proto="MachineBasicBlock::iterator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="anchor" id="94021f4eb3db4bb5e433d342e7530945_0e3fcad09d5eb95255697c46587eec96" file="2" linestart="46" lineend="46" virtual="true" access="private" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<Decl access="protected"/>
<fl name="ST" id="94021f4eb3db4bb5e433d342e7530945_5a3b1bc0c1fb82b5f20a2c69532bd0df" file="2" linestart="48" lineend="48" isLiteral="true" isRef="true" access="protected" proto="const llvm::AMDGPUSubtarget &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="1fa1199557e4f7988cadb59401364979_ccee921ff17fb86771cc7950ec66d7db"/>
</rt>
</QualType>
</lrf>
</fl>
<Decl access="public"/>
<c name="AMDGPUInstrInfo" id="94021f4eb3db4bb5e433d342e7530945_1a823a4428edbd3d446e742b7952c4ef" file="2" linestart="50" lineend="50" explicit="true" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="st" proto="const llvm::AMDGPUSubtarget &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="1fa1199557e4f7988cadb59401364979_ccee921ff17fb86771cc7950ec66d7db"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</c>
<m name="getRegisterInfo" id="94021f4eb3db4bb5e433d342e7530945_29213c32028865acaedd9f0ce14bc7a5" file="2" linestart="52" lineend="52" pure="true" virtual="true" access="public" hasbody="true">
<fpt const="true" proto="const llvm::AMDGPURegisterInfo &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="7ebe28b077af0dc3580f965a9216fd3f_e0372a749c66eaa3f4c2fdb005c00025"/>
</rt>
</QualType>
</lrf>
</fpt>
</m>
<m name="isCoalescableExtInstr" id="94021f4eb3db4bb5e433d342e7530945_d4c635ba8ccb633bacb36c1bd3f71d4c" file="2" linestart="54" lineend="55" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="SrcReg" proto="unsigned int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="unsigned int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="DstReg" proto="unsigned int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="unsigned int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="SubIdx" proto="unsigned int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="unsigned int"/>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="isLoadFromStackSlot" id="94021f4eb3db4bb5e433d342e7530945_a7e09f7431f2b44d15868a2bc2b7cd80" file="2" linestart="57" lineend="58" access="public" hasbody="true">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="isLoadFromStackSlotPostFE" id="94021f4eb3db4bb5e433d342e7530945_5f24757bbcbcf51ce8f2ae3b3877d5b2" file="2" linestart="59" lineend="60" access="public" hasbody="true">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="hasLoadFromStackSlot" id="94021f4eb3db4bb5e433d342e7530945_e2e18ae3bc58a9d63af68e4a53088da4" file="2" linestart="61" lineend="63" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="MMO" proto="const llvm::MachineMemOperand *&amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<pt>
<QualType const="true">
<rt>
<cr id="365e40649a6358896d82d795b1389064_23b023a6f010a76d0665a045d8701626"/>
</rt>
</QualType>
</pt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="isStoreFromStackSlot" id="94021f4eb3db4bb5e433d342e7530945_8a7c808b11312bcda1b57309a58dd1fc" file="2" linestart="64" lineend="64" access="public" hasbody="true">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="isStoreFromStackSlotPostFE" id="94021f4eb3db4bb5e433d342e7530945_d0d0cafb764184954d2b9ce4cbaaf12a" file="2" linestart="65" lineend="66" access="public" hasbody="true">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="hasStoreFromStackSlot" id="94021f4eb3db4bb5e433d342e7530945_1167da076e1190cefb2cb0962ff86550" file="2" linestart="67" lineend="69" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="MMO" proto="const llvm::MachineMemOperand *&amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<pt>
<QualType const="true">
<rt>
<cr id="365e40649a6358896d82d795b1389064_23b023a6f010a76d0665a045d8701626"/>
</rt>
</QualType>
</pt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="convertToThreeAddress" id="94021f4eb3db4bb5e433d342e7530945_a1613fae2f639e905ddf6d01cd5eecb5" file="2" linestart="71" lineend="74" access="public" hasbody="true">
<fpt const="true" proto="llvm::MachineInstr *">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
</fpt>
<p name="MFI" proto="MachineFunction::iterator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<ety>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</ety>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MBBI" proto="MachineBasicBlock::iterator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="LV" proto="llvm::LiveVariables *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="35dcc986b9fc41c6f521acfc055f8d35_21200ebcc17540790537704d977d96a1"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="copyPhysReg" id="94021f4eb3db4bb5e433d342e7530945_ac97086a129754f0412b6074c3b44e86" file="2" linestart="77" lineend="80" pure="true" virtual="true" access="public">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MI" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="DL" proto="llvm::DebugLoc" access2="none">
<rt>
<cr id="6ca53e77501a21bf88631b761a2f74a6_fe60359165b1d6b25b6efa2b3701b70d"/>
</rt>
<Stmt>

</Stmt>
</p>
<p name="DestReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="SrcReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="KillSrc" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="expandPostRAPseudo" id="94021f4eb3db4bb5e433d342e7530945_a97aec0fd350d2ce863abeb831f5c3dd" file="2" linestart="82" lineend="82" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
</m>
<m name="storeRegToStackSlot" id="94021f4eb3db4bb5e433d342e7530945_5d65794a06f18c28f531a31ddd8545c7" file="2" linestart="84" lineend="88" access="public" hasbody="true">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MI" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="SrcReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="isKill" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<p name="RC" proto="const llvm::TargetRegisterClass *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_e5ad748063c898b7dab27775bba1a499"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="TRI" proto="const llvm::TargetRegisterInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_2fd18b2e9f937d163d967e6f778ba659"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="loadRegFromStackSlot" id="94021f4eb3db4bb5e433d342e7530945_9b4cad2fa532fbc08456332be2f5c532" file="2" linestart="89" lineend="93" access="public" hasbody="true">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MI" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="DestReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<p name="RC" proto="const llvm::TargetRegisterClass *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_e5ad748063c898b7dab27775bba1a499"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="TRI" proto="const llvm::TargetRegisterInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_2fd18b2e9f937d163d967e6f778ba659"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<Decl access="protected"/>
<m name="foldMemoryOperandImpl" id="94021f4eb3db4bb5e433d342e7530945_5f297513f7b1bfb01d92aea3b2dead7c" file="2" linestart="96" lineend="99" access="protected" hasbody="true">
<fpt const="true" proto="llvm::MachineInstr *">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
</fpt>
<p name="MF" proto="llvm::MachineFunction &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="895a66b41661e915ba6854da2359580f_7a76e175133a980deee19d81d954fcc0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MI" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Ops" proto="const SmallVectorImpl&lt;unsigned int&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="35dcc986b9fc41c6f521acfc055f8d35_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<bt name="unsigned int"/>
</template_arguments>
</tss>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="foldMemoryOperandImpl" id="94021f4eb3db4bb5e433d342e7530945_9419b81c33d7ad8d842009d2d3abd89f" file="2" linestart="100" lineend="103" access="protected" hasbody="true">
<fpt const="true" proto="llvm::MachineInstr *">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
</fpt>
<p name="MF" proto="llvm::MachineFunction &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="895a66b41661e915ba6854da2359580f_7a76e175133a980deee19d81d954fcc0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MI" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Ops" proto="const SmallVectorImpl&lt;unsigned int&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="35dcc986b9fc41c6f521acfc055f8d35_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<bt name="unsigned int"/>
</template_arguments>
</tss>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="LoadMI" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="getIndirectIndexBegin" id="94021f4eb3db4bb5e433d342e7530945_d65e0ab8d43b0d5d1b6055fefdf4d12c" file="2" linestart="106" lineend="106" access="protected" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
<p name="MF" proto="const llvm::MachineFunction &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="895a66b41661e915ba6854da2359580f_7a76e175133a980deee19d81d954fcc0"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="getIndirectIndexEnd" id="94021f4eb3db4bb5e433d342e7530945_c370b47dc513a8b21919e8486d515552" file="2" linestart="110" lineend="110" access="protected" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
<p name="MF" proto="const llvm::MachineFunction &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="895a66b41661e915ba6854da2359580f_7a76e175133a980deee19d81d954fcc0"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<Decl access="public"/>
<m name="canFoldMemoryOperand" id="94021f4eb3db4bb5e433d342e7530945_7ba61f84ea29b7476c4138e4129396db" file="2" linestart="113" lineend="114" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Ops" proto="const SmallVectorImpl&lt;unsigned int&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="35dcc986b9fc41c6f521acfc055f8d35_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<bt name="unsigned int"/>
</template_arguments>
</tss>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="unfoldMemoryOperand" id="94021f4eb3db4bb5e433d342e7530945_31cdb51abb2c48032e926363dc4c4b00" file="2" linestart="115" lineend="117" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MF" proto="llvm::MachineFunction &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="895a66b41661e915ba6854da2359580f_7a76e175133a980deee19d81d954fcc0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MI" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Reg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="UnfoldLoad" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
<p name="UnfoldStore" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
<p name="NewMIs" proto="SmallVectorImpl&lt;llvm::MachineInstr *&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<tss>
<templatebase id="35dcc986b9fc41c6f521acfc055f8d35_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
</template_arguments>
</tss>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="unfoldMemoryOperand" id="94021f4eb3db4bb5e433d342e7530945_28c129d23986641b638215fd81476b4d" file="2" linestart="118" lineend="119" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="DAG" proto="llvm::SelectionDAG &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="35dcc986b9fc41c6f521acfc055f8d35_31cb548337e3cbfc72b6576d86e80fa8"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="N" proto="llvm::SDNode *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="e657d4590d4ae2f19e9fcd6accd93c66_3759b9bd1ce1cac3724a4522e9a171a5"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="NewNodes" proto="SmallVectorImpl&lt;llvm::SDNode *&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<tss>
<templatebase id="35dcc986b9fc41c6f521acfc055f8d35_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<pt>
<rt>
<cr id="e657d4590d4ae2f19e9fcd6accd93c66_3759b9bd1ce1cac3724a4522e9a171a5"/>
</rt>
</pt>
</template_arguments>
</tss>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="getOpcodeAfterMemoryUnfold" id="94021f4eb3db4bb5e433d342e7530945_aeef72e9c8e06228c251b1425c60bca9" file="2" linestart="120" lineend="122" access="public" hasbody="true">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="Opc" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="UnfoldLoad" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
<p name="UnfoldStore" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
<p name="LoadRegIndex" proto="unsigned int *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<bt name="unsigned int"/>
</pt>
<Stmt>
<n32 lb="122" cb="57">
<n16 lb="122" cb="57">
<exp pvirg="true"/>
</n16>
</n32>

</Stmt>
</p>
</m>
<m name="enableClusterLoads" id="94021f4eb3db4bb5e433d342e7530945_c6503ad3927496a635335adae35e251c" file="2" linestart="124" lineend="124" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="shouldScheduleLoadsNear" id="94021f4eb3db4bb5e433d342e7530945_e9b35b5822aa0d8a96d455c4a7aef44b" file="2" linestart="126" lineend="128" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="Load1" proto="llvm::SDNode *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="e657d4590d4ae2f19e9fcd6accd93c66_3759b9bd1ce1cac3724a4522e9a171a5"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Load2" proto="llvm::SDNode *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="e657d4590d4ae2f19e9fcd6accd93c66_3759b9bd1ce1cac3724a4522e9a171a5"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Offset1" proto="int64_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="long long"/>
</Tdef>
<Stmt>

</Stmt>
</p>
<p name="Offset2" proto="int64_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="long long"/>
</Tdef>
<Stmt>

</Stmt>
</p>
<p name="NumLoads" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="ReverseBranchCondition" id="94021f4eb3db4bb5e433d342e7530945_dd56ba1a100ec35d3b28ab72c1026bc6" file="2" linestart="130" lineend="131" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="Cond" proto="SmallVectorImpl&lt;llvm::MachineOperand&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<tss>
<templatebase id="35dcc986b9fc41c6f521acfc055f8d35_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<rt>
<cr id="84c010a1a9c2223bad1481218c714125_82ecc2b64168756ea82cc9516656b279"/>
</rt>
</template_arguments>
</tss>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="insertNoop" id="94021f4eb3db4bb5e433d342e7530945_2a2539924bab2fdaaecff58202b25188" file="2" linestart="132" lineend="133" access="public" hasbody="true">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MI" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
</m>
<m name="isPredicated" id="94021f4eb3db4bb5e433d342e7530945_b8e286aebce8489236c89740ccbe7f8e" file="2" linestart="134" lineend="134" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="SubsumesPredicate" id="94021f4eb3db4bb5e433d342e7530945_c50e03eb7998949eacf5c68cb1b384e9" file="2" linestart="135" lineend="136" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="Pred1" proto="const SmallVectorImpl&lt;llvm::MachineOperand&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="35dcc986b9fc41c6f521acfc055f8d35_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<rt>
<cr id="84c010a1a9c2223bad1481218c714125_82ecc2b64168756ea82cc9516656b279"/>
</rt>
</template_arguments>
</tss>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="Pred2" proto="const SmallVectorImpl&lt;llvm::MachineOperand&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="35dcc986b9fc41c6f521acfc055f8d35_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<rt>
<cr id="84c010a1a9c2223bad1481218c714125_82ecc2b64168756ea82cc9516656b279"/>
</rt>
</template_arguments>
</tss>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="DefinesPredicate" id="94021f4eb3db4bb5e433d342e7530945_22ffda95bb41ed9367bb6d37ce5c90d2" file="2" linestart="137" lineend="138" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Pred" proto="std::vector&lt;MachineOperand&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<rt>
<cr id="84c010a1a9c2223bad1481218c714125_82ecc2b64168756ea82cc9516656b279"/>
</rt>
</template_arguments>
</tss>
</ety>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="isPredicable" id="94021f4eb3db4bb5e433d342e7530945_803f4fbd65a7fd5276932511ae65e3cf" file="2" linestart="139" lineend="139" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="isSafeToMoveRegClassDefs" id="94021f4eb3db4bb5e433d342e7530945_1be4d406ef0b0d5315388748632af6db" file="2" linestart="140" lineend="140" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="RC" proto="const llvm::TargetRegisterClass *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_e5ad748063c898b7dab27775bba1a499"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="isRegisterStore" id="94021f4eb3db4bb5e433d342e7530945_fc41a70ecff3726e64abb597d33153c6" file="2" linestart="143" lineend="143" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="isRegisterLoad" id="94021f4eb3db4bb5e433d342e7530945_810c35f4172e68b27622d47988be1115" file="2" linestart="144" lineend="144" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="isMov" id="94021f4eb3db4bb5e433d342e7530945_8983baf1db802f068c04d86408918585" file="2" linestart="150" lineend="150" pure="true" virtual="true" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="opcode" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="calculateIndirectAddress" id="94021f4eb3db4bb5e433d342e7530945_a80ec51368029b8157a8b6558924305b" file="2" linestart="159" lineend="160" pure="true" virtual="true" access="public">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="RegIndex" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="Channel" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="getIndirectAddrRegClass" id="94021f4eb3db4bb5e433d342e7530945_8af63dc792d42c9857178aba67148cd0" file="2" linestart="164" lineend="164" pure="true" virtual="true" access="public">
<fpt const="true" proto="const llvm::TargetRegisterClass *">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_e5ad748063c898b7dab27775bba1a499"/>
</rt>
</QualType>
</pt>
</fpt>
</m>
<m name="buildIndirectWrite" id="94021f4eb3db4bb5e433d342e7530945_5a30680590c8ce43e03f818110149324" file="2" linestart="169" lineend="172" pure="true" virtual="true" access="public">
<fpt const="true" proto="llvm::MachineInstrBuilder">
<rt>
<cr id="32975a63c2ff844fe8824398e471d60a_1438597d7eaf2dd7c745676415aeb79c"/>
</rt>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="I" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="ValueReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="Address" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="OffsetReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="buildIndirectRead" id="94021f4eb3db4bb5e433d342e7530945_2de7d136ca673265f23a1430a0107d48" file="2" linestart="177" lineend="180" pure="true" virtual="true" access="public">
<fpt const="true" proto="llvm::MachineInstrBuilder">
<rt>
<cr id="32975a63c2ff844fe8824398e471d60a_1438597d7eaf2dd7c745676415aeb79c"/>
</rt>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="I" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="ValueReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="Address" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="OffsetReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="buildMovInstr" id="94021f4eb3db4bb5e433d342e7530945_7225d96b593480821598862b765932dd" file="2" linestart="183" lineend="185" pure="true" virtual="true" access="public">
<fpt const="true" proto="llvm::MachineInstr *">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="I" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="DstReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="SrcReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="getMaskedMIMGOp" id="94021f4eb3db4bb5e433d342e7530945_11d84100e475292aa62057d7f29d0a92" file="2" linestart="189" lineend="189" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
<p name="Opcode" proto="uint16_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned short"/>
</Tdef>
<Stmt>

</Stmt>
</p>
<p name="Channels" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="operator=" id="94021f4eb3db4bb5e433d342e7530945_7f2b327c7d896d21667e5ecc30aeef55" file="2" linestart="41" implicit="true" operator="true" access="public" inline="true" isdef="true">
<fpt proto="llvm::AMDGPUInstrInfo &amp;">
<lrf>
<rt>
<cr id="94021f4eb3db4bb5e433d342e7530945_042d8f4bdaebce19fa1c25343be9bd28"/>
</rt>
</lrf>
</fpt>
<p name="" proto="const llvm::AMDGPUInstrInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="94021f4eb3db4bb5e433d342e7530945_042d8f4bdaebce19fa1c25343be9bd28"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<d name="~AMDGPUInstrInfo" id="94021f4eb3db4bb5e433d342e7530945_3b335290bb217238881cf2fad2b83e6b" file="2" linestart="41" lineend="41" implicit="true" access="public" inline="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</d>
<c name="AMDGPUInstrInfo" id="94021f4eb3db4bb5e433d342e7530945_0d391e56a11eeb3e7393824e5d30967b" file="2" linestart="41" lineend="41" copyconst="true" implicit="true" access="public" inline="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="const llvm::AMDGPUInstrInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="94021f4eb3db4bb5e433d342e7530945_042d8f4bdaebce19fa1c25343be9bd28"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</c>
<c name="AMDGPUInstrInfo" id="94021f4eb3db4bb5e433d342e7530945_0976e1fba2fefe0db176118254209ec4" file="2" linestart="41" lineend="41" implicit="true" access="public" inline="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="llvm::AMDGPUInstrInfo &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="94021f4eb3db4bb5e433d342e7530945_042d8f4bdaebce19fa1c25343be9bd28"/>
</rt>
</rrf>
<Stmt>

</Stmt>
</p>
</c>
</cr>
<ns name="AMDGPU" id="94021f4eb3db4bb5e433d342e7530945_2098f21df04119f029e13a7d4e87a797" file="2" linestart="193" lineend="195">
<f namespace="llvm.AMDGPU" name="getNamedOperandIdx" id="94021f4eb3db4bb5e433d342e7530945_d51003d58bf7b6fcc36536da4fd8271e" file="2" linestart="194" lineend="194" access="none">
<fpt proto="int16_t">
<Tdef>
<bt name="short"/>
</Tdef>
</fpt>
<p name="Opcode" proto="uint16_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned short"/>
</Tdef>
<Stmt>

</Stmt>
</p>
<p name="NamedIndex" proto="uint16_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned short"/>
</Tdef>
<Stmt>

</Stmt>
</p>
</f>
</ns>
</ns>
<NamedDecl name="&lt;using-directive&gt;" id="e320e5ad52e0b51792eb07be7f4d23d7_6728b6b0f829183eb7bbd3d3d987c87d" file="1" linestart="23" lineend="23"/>
<m name="anchor" id="e320e5ad52e0b51792eb07be7f4d23d7_0e3fcad09d5eb95255697c46587eec96" file="1" linestart="31" lineend="31" previous="94021f4eb3db4bb5e433d342e7530945_0e3fcad09d5eb95255697c46587eec96" access="private" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<Stmt>
<u lb="31" cb="32" le="31" ce="33"/>

</Stmt>
</m>
<c name="AMDGPUInstrInfo" id="e320e5ad52e0b51792eb07be7f4d23d7_1a823a4428edbd3d446e742b7952c4ef" file="1" linestart="33" lineend="34" previous="94021f4eb3db4bb5e433d342e7530945_1a823a4428edbd3d446e742b7952c4ef" explicit="true" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="st" proto="const llvm::AMDGPUSubtarget &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="1fa1199557e4f7988cadb59401364979_ccee921ff17fb86771cc7950ec66d7db"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<initlist id="94021f4eb3db4bb5e433d342e7530945_38ae95bda0c45da36e38d10422dafd2c">
<Stmt>
<n10 lb="34" cb="32" le="34" ce="37">
<typeptr id="7ebe28b077af0dc3580f965a9216fd3f_f6fcb04eb8e9b3aedbffc258291a177a"/>
<temp/>
<drx lb="34" cb="35" kind="lvalue" nm="st"/>
</n10>

</Stmt>
</initlist>
<initlist id="94021f4eb3db4bb5e433d342e7530945_5a3b1bc0c1fb82b5f20a2c69532bd0df">
<Stmt>
<drx lb="34" cb="43" kind="lvalue" nm="st"/>

</Stmt>
</initlist>
<Stmt>
<u lb="34" cb="47" le="34" ce="49"/>

</Stmt>
</c>
<m name="getRegisterInfo" id="e320e5ad52e0b51792eb07be7f4d23d7_29213c32028865acaedd9f0ce14bc7a5" file="1" linestart="36" lineend="38" previous="94021f4eb3db4bb5e433d342e7530945_29213c32028865acaedd9f0ce14bc7a5" pure="true" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const llvm::AMDGPURegisterInfo &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="7ebe28b077af0dc3580f965a9216fd3f_e0372a749c66eaa3f4c2fdb005c00025"/>
</rt>
</QualType>
</lrf>
</fpt>
<Stmt>
<u lb="36" cb="68" le="38" ce="1">
<rx lb="37" cb="3" le="37" ce="10" pvirg="true">
<mex lb="37" cb="10" kind="lvalue" id="94021f4eb3db4bb5e433d342e7530945_38ae95bda0c45da36e38d10422dafd2c" nm="RI" arrow="1">
<n19 lb="37" cb="10"/>
</mex>
</rx>
</u>

</Stmt>
</m>
<m name="isCoalescableExtInstr" id="e320e5ad52e0b51792eb07be7f4d23d7_d4c635ba8ccb633bacb36c1bd3f71d4c" file="1" linestart="40" lineend="45" previous="94021f4eb3db4bb5e433d342e7530945_d4c635ba8ccb633bacb36c1bd3f71d4c" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="SrcReg" proto="unsigned int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="unsigned int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="DstReg" proto="unsigned int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="unsigned int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="SubIdx" proto="unsigned int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="unsigned int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="42" cb="68" le="45" ce="1">
<rx lb="44" cb="3" le="44" ce="10" pvirg="true">
<n9 lb="44" cb="10"/>
</rx>
</u>

</Stmt>
</m>
<m name="isLoadFromStackSlot" id="e320e5ad52e0b51792eb07be7f4d23d7_a7e09f7431f2b44d15868a2bc2b7cd80" file="1" linestart="47" lineend="51" previous="94021f4eb3db4bb5e433d342e7530945_a7e09f7431f2b44d15868a2bc2b7cd80" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="48" cb="69" le="51" ce="1">
<rx lb="50" cb="3" le="50" ce="10" pvirg="true">
<n32 lb="50" cb="10">
<n45 lb="50" cb="10">
<flit/>
</n45>
</n32>
</rx>
</u>

</Stmt>
</m>
<m name="isLoadFromStackSlotPostFE" id="e320e5ad52e0b51792eb07be7f4d23d7_5f24757bbcbcf51ce8f2ae3b3877d5b2" file="1" linestart="53" lineend="57" previous="94021f4eb3db4bb5e433d342e7530945_5f24757bbcbcf51ce8f2ae3b3877d5b2" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="54" cb="75" le="57" ce="1">
<rx lb="56" cb="3" le="56" ce="10" pvirg="true">
<n32 lb="56" cb="10">
<n45 lb="56" cb="10">
<flit/>
</n45>
</n32>
</rx>
</u>

</Stmt>
</m>
<m name="hasLoadFromStackSlot" id="e320e5ad52e0b51792eb07be7f4d23d7_e2e18ae3bc58a9d63af68e4a53088da4" file="1" linestart="59" lineend="64" previous="94021f4eb3db4bb5e433d342e7530945_e2e18ae3bc58a9d63af68e4a53088da4" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="MMO" proto="const llvm::MachineMemOperand *&amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<pt>
<QualType const="true">
<rt>
<cr id="365e40649a6358896d82d795b1389064_23b023a6f010a76d0665a045d8701626"/>
</rt>
</QualType>
</pt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="61" cb="66" le="64" ce="1">
<rx lb="63" cb="3" le="63" ce="10" pvirg="true">
<n9 lb="63" cb="10"/>
</rx>
</u>

</Stmt>
</m>
<m name="isStoreFromStackSlot" id="e320e5ad52e0b51792eb07be7f4d23d7_8a7c808b11312bcda1b57309a58dd1fc" file="1" linestart="65" lineend="69" previous="94021f4eb3db4bb5e433d342e7530945_8a7c808b11312bcda1b57309a58dd1fc" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="66" cb="70" le="69" ce="1">
<rx lb="68" cb="3" le="68" ce="10" pvirg="true">
<n32 lb="68" cb="10">
<n45 lb="68" cb="10">
<flit/>
</n45>
</n32>
</rx>
</u>

</Stmt>
</m>
<m name="isStoreFromStackSlotPostFE" id="e320e5ad52e0b51792eb07be7f4d23d7_d0d0cafb764184954d2b9ce4cbaaf12a" file="1" linestart="70" lineend="74" previous="94021f4eb3db4bb5e433d342e7530945_d0d0cafb764184954d2b9ce4cbaaf12a" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="71" cb="76" le="74" ce="1">
<rx lb="73" cb="3" le="73" ce="10" pvirg="true">
<n32 lb="73" cb="10">
<n45 lb="73" cb="10">
<flit/>
</n45>
</n32>
</rx>
</u>

</Stmt>
</m>
<m name="hasStoreFromStackSlot" id="e320e5ad52e0b51792eb07be7f4d23d7_1167da076e1190cefb2cb0962ff86550" file="1" linestart="75" lineend="80" previous="94021f4eb3db4bb5e433d342e7530945_1167da076e1190cefb2cb0962ff86550" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="MMO" proto="const llvm::MachineMemOperand *&amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<pt>
<QualType const="true">
<rt>
<cr id="365e40649a6358896d82d795b1389064_23b023a6f010a76d0665a045d8701626"/>
</rt>
</QualType>
</pt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="77" cb="67" le="80" ce="1">
<rx lb="79" cb="3" le="79" ce="10" pvirg="true">
<n9 lb="79" cb="10"/>
</rx>
</u>

</Stmt>
</m>
<m name="convertToThreeAddress" id="e320e5ad52e0b51792eb07be7f4d23d7_a1613fae2f639e905ddf6d01cd5eecb5" file="1" linestart="82" lineend="88" previous="94021f4eb3db4bb5e433d342e7530945_a1613fae2f639e905ddf6d01cd5eecb5" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="llvm::MachineInstr *">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
</fpt>
<p name="MFI" proto="MachineFunction::iterator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<ety>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</ety>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MBBI" proto="MachineBasicBlock::iterator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="LV" proto="llvm::LiveVariables *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="35dcc986b9fc41c6f521acfc055f8d35_21200ebcc17540790537704d977d96a1"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="85" cb="64" le="88" ce="1">
<rx lb="87" cb="3" le="87" ce="10" pvirg="true">
<n32 lb="87" cb="10">
<n16 lb="87" cb="10">
<exp pvirg="true"/>
</n16>
</n32>
</rx>
</u>

</Stmt>
</m>
<m name="getNextBranchInstr" id="e320e5ad52e0b51792eb07be7f4d23d7_c1e541be0b60fab2d7c93a28b3446fb4" file="1" linestart="89" lineend="103" previous="94021f4eb3db4bb5e433d342e7530945_c1e541be0b60fab2d7c93a28b3446fb4" access="private" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="iter" proto="MachineBasicBlock::iterator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="90" cb="71" le="103" ce="1">
<wy lb="91" cb="3" le="101" ce="3">
<ocx lb="91" cb="10" le="91" ce="26" nbparm="2" id="dc2fe1ce3eab105adc926f5848f1baa6_dca4f45bc293a54836cf9803ebd886b3">
<exp pvirg="true"/>
<n32 lb="91" cb="15">
<drx lb="91" cb="15" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_dca4f45bc293a54836cf9803ebd886b3" nm="operator!="/>
</n32>
<n32 lb="91" cb="10">
<drx lb="91" cb="10" kind="lvalue" nm="iter"/>
</n32>
<mte lb="91" cb="18" le="91" ce="26">
<exp pvirg="true"/>
<n32 lb="91" cb="18" le="91" ce="26">
<mce lb="91" cb="18" le="91" ce="26" nbparm="0" id="dc2fe1ce3eab105adc926f5848f1baa6_0c702456f42428d8ed338d91569d3241">
<exp pvirg="true"/>
<mex lb="91" cb="18" le="91" ce="22" id="dc2fe1ce3eab105adc926f5848f1baa6_0c702456f42428d8ed338d91569d3241" nm="end" point="1">
<drx lb="91" cb="18" kind="lvalue" nm="MBB"/>
</mex>
</mce>
</n32>
</mte>
</ocx>
<u lb="91" cb="29" le="101" ce="3">
<n59 lb="99" cb="6"/>
<ocx lb="100" cb="5" le="100" ce="7" nbparm="1" id="dc2fe1ce3eab105adc926f5848f1baa6_b95e9a20d265b3feef9e4547ff0b7a5c">
<exp pvirg="true"/>
<n32 lb="100" cb="5">
<drx lb="100" cb="5" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_b95e9a20d265b3feef9e4547ff0b7a5c" nm="operator++"/>
</n32>
<drx lb="100" cb="7" kind="lvalue" nm="iter"/>
</ocx>
</u>
</wy>
<rx lb="102" cb="3" le="102" ce="10" pvirg="true">
<n9 lb="102" cb="10"/>
</rx>
</u>

</Stmt>
</m>
<m name="storeRegToStackSlot" id="e320e5ad52e0b51792eb07be7f4d23d7_5d65794a06f18c28f531a31ddd8545c7" file="1" linestart="105" lineend="113" previous="94021f4eb3db4bb5e433d342e7530945_5d65794a06f18c28f531a31ddd8545c7" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MI" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="SrcReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="isKill" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<p name="RC" proto="const llvm::TargetRegisterClass *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_e5ad748063c898b7dab27775bba1a499"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="TRI" proto="const llvm::TargetRegisterInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_2fd18b2e9f937d163d967e6f778ba659"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="111" cb="74" le="113" ce="1">
<ce lb="112" cb="3" le="112" ce="3" nbparm="3" id="4490f7744b0eb140a59a313798e92590_041af46f83dd11078969ec645bc14a67">
<exp pvirg="true"/>
<n32 lb="112" cb="3" le="112" ce="3">
<drx lb="112" cb="3" le="112" ce="3" kind="lvalue" id="4490f7744b0eb140a59a313798e92590_041af46f83dd11078969ec645bc14a67" nm="llvm_unreachable_internal"/>
</n32>
<n32 lb="112" cb="3">
<n52 lb="112" cb="3">
<slit/>
</n52>
</n32>
<n32 lb="112" cb="3">
<n52 lb="112" cb="3">
<slit/>
</n52>
</n32>
<n32 lb="112" cb="3">
<n45 lb="112" cb="3">
<flit/>
</n45>
</n32>
</ce>
</u>

</Stmt>
</m>
<m name="loadRegFromStackSlot" id="e320e5ad52e0b51792eb07be7f4d23d7_9b4cad2fa532fbc08456332be2f5c532" file="1" linestart="115" lineend="122" previous="94021f4eb3db4bb5e433d342e7530945_9b4cad2fa532fbc08456332be2f5c532" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MI" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="DestReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<p name="RC" proto="const llvm::TargetRegisterClass *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_e5ad748063c898b7dab27775bba1a499"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="TRI" proto="const llvm::TargetRegisterInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_2fd18b2e9f937d163d967e6f778ba659"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="120" cb="75" le="122" ce="1">
<ce lb="121" cb="3" le="121" ce="3" nbparm="3" id="4490f7744b0eb140a59a313798e92590_041af46f83dd11078969ec645bc14a67">
<exp pvirg="true"/>
<n32 lb="121" cb="3" le="121" ce="3">
<drx lb="121" cb="3" le="121" ce="3" kind="lvalue" id="4490f7744b0eb140a59a313798e92590_041af46f83dd11078969ec645bc14a67" nm="llvm_unreachable_internal"/>
</n32>
<n32 lb="121" cb="3">
<n52 lb="121" cb="3">
<slit/>
</n52>
</n32>
<n32 lb="121" cb="3">
<n52 lb="121" cb="3">
<slit/>
</n52>
</n32>
<n32 lb="121" cb="3">
<n45 lb="121" cb="3">
<flit/>
</n45>
</n32>
</ce>
</u>

</Stmt>
</m>
<m name="expandPostRAPseudo" id="e320e5ad52e0b51792eb07be7f4d23d7_a97aec0fd350d2ce863abeb831f5c3dd" file="1" linestart="124" lineend="169" previous="94021f4eb3db4bb5e433d342e7530945_a97aec0fd350d2ce863abeb831f5c3dd" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="124" cb="81" le="169" ce="1">
<dst lb="125" cb="3" le="125" ce="43">
<exp pvirg="true"/>
<Var nm="MBB">
<pt>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</pt>
<mce lb="125" cb="28" le="125" ce="42" nbparm="0" id="d038367435b7928d04997491e912d58d_791f27289e8d2d327c65368df68674e1">
<exp pvirg="true"/>
<mex lb="125" cb="28" le="125" ce="32" id="d038367435b7928d04997491e912d58d_791f27289e8d2d327c65368df68674e1" nm="getParent" arrow="1">
<ocx lb="125" cb="28" nbparm="1" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05">
<exp pvirg="true"/>
<n32 lb="125" cb="30">
<drx lb="125" cb="30" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05" nm="operator-&gt;"/>
</n32>
<n32 lb="125" cb="28">
<drx lb="125" cb="28" kind="lvalue" nm="MI"/>
</n32>
</ocx>
</mex>
</mce>
</Var>
</dst>
<dst lb="126" cb="3" le="127" ce="69">
<exp pvirg="true"/>
<Var nm="OffsetOpIdx" value="true">
<bt name="int"/>
</Var>
</dst>
<dst lb="130" cb="3" le="130" ce="33">
<exp pvirg="true"/>
<Var nm="RegOpIdx" value="true">
<bt name="int"/>
<xop lb="130" cb="18" le="130" ce="32" kind="+">
<n32 lb="130" cb="18">
<drx lb="130" cb="18" kind="lvalue" nm="OffsetOpIdx"/>
</n32>
<n45 lb="130" cb="32">
<flit/>
</n45>
</xop>
</Var>
</dst>
<dst lb="131" cb="3" le="132" ce="67">
<exp pvirg="true"/>
<Var nm="ChanOpIdx" value="true">
<bt name="int"/>
</Var>
</dst>
<if lb="133" cb="3" le="165" ce="3" else="true" elselb="147" elsecb="10">
<mce lb="133" cb="7" le="133" ce="25" nbparm="1" id="94021f4eb3db4bb5e433d342e7530945_810c35f4172e68b27622d47988be1115">
<exp pvirg="true"/>
<mex lb="133" cb="7" id="94021f4eb3db4bb5e433d342e7530945_810c35f4172e68b27622d47988be1115" nm="isRegisterLoad" arrow="1">
<n19 lb="133" cb="7"/>
</mex>
<n32 lb="133" cb="22" le="133" ce="23">
<ocx lb="133" cb="22" le="133" ce="23" nbparm="1" id="dc2fe1ce3eab105adc926f5848f1baa6_2731e06b8948faff9b9b5e5bad8dbc89">
<exp pvirg="true"/>
<n32 lb="133" cb="22">
<drx lb="133" cb="22" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_2731e06b8948faff9b9b5e5bad8dbc89" nm="operator*"/>
</n32>
<n32 lb="133" cb="23">
<drx lb="133" cb="23" kind="lvalue" nm="MI"/>
</n32>
</ocx>
</n32>
</mce>
<u lb="133" cb="28" le="147" ce="3">
<dst lb="134" cb="5" le="135" ce="67">
<exp pvirg="true"/>
<Var nm="DstOpIdx" value="true">
<bt name="int"/>
</Var>
</dst>
<dst lb="136" cb="5" le="136" ce="58">
<exp pvirg="true"/>
<Var nm="RegIndex" value="true">
<bt name="unsigned int"/>
<n32 lb="136" cb="25" le="136" ce="57">
<mce lb="136" cb="25" le="136" ce="57" nbparm="0" id="84c010a1a9c2223bad1481218c714125_054472938e7819d3a3b1e6b4a923fd95">
<exp pvirg="true"/>
<mex lb="136" cb="25" le="136" ce="50" id="84c010a1a9c2223bad1481218c714125_054472938e7819d3a3b1e6b4a923fd95" nm="getImm" point="1">
<n32 lb="136" cb="25" le="136" ce="48">
<mce lb="136" cb="25" le="136" ce="48" nbparm="1" id="d038367435b7928d04997491e912d58d_bd4b4f2fddf9289902fadfee175f5292">
<exp pvirg="true"/>
<mex lb="136" cb="25" le="136" ce="29" id="d038367435b7928d04997491e912d58d_bd4b4f2fddf9289902fadfee175f5292" nm="getOperand" arrow="1">
<ocx lb="136" cb="25" nbparm="1" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05">
<exp pvirg="true"/>
<n32 lb="136" cb="27">
<drx lb="136" cb="27" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05" nm="operator-&gt;"/>
</n32>
<n32 lb="136" cb="25">
<drx lb="136" cb="25" kind="lvalue" nm="MI"/>
</n32>
</ocx>
</mex>
<n32 lb="136" cb="40">
<n32 lb="136" cb="40">
<drx lb="136" cb="40" kind="lvalue" nm="RegOpIdx"/>
</n32>
</n32>
</mce>
</n32>
</mex>
</mce>
</n32>
</Var>
</dst>
<dst lb="137" cb="5" le="137" ce="58">
<exp pvirg="true"/>
<Var nm="Channel" value="true">
<bt name="unsigned int"/>
<n32 lb="137" cb="24" le="137" ce="57">
<mce lb="137" cb="24" le="137" ce="57" nbparm="0" id="84c010a1a9c2223bad1481218c714125_054472938e7819d3a3b1e6b4a923fd95">
<exp pvirg="true"/>
<mex lb="137" cb="24" le="137" ce="50" id="84c010a1a9c2223bad1481218c714125_054472938e7819d3a3b1e6b4a923fd95" nm="getImm" point="1">
<n32 lb="137" cb="24" le="137" ce="48">
<mce lb="137" cb="24" le="137" ce="48" nbparm="1" id="d038367435b7928d04997491e912d58d_bd4b4f2fddf9289902fadfee175f5292">
<exp pvirg="true"/>
<mex lb="137" cb="24" le="137" ce="28" id="d038367435b7928d04997491e912d58d_bd4b4f2fddf9289902fadfee175f5292" nm="getOperand" arrow="1">
<ocx lb="137" cb="24" nbparm="1" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05">
<exp pvirg="true"/>
<n32 lb="137" cb="26">
<drx lb="137" cb="26" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05" nm="operator-&gt;"/>
</n32>
<n32 lb="137" cb="24">
<drx lb="137" cb="24" kind="lvalue" nm="MI"/>
</n32>
</ocx>
</mex>
<n32 lb="137" cb="39">
<n32 lb="137" cb="39">
<drx lb="137" cb="39" kind="lvalue" nm="ChanOpIdx"/>
</n32>
</n32>
</mce>
</n32>
</mex>
</mce>
</n32>
</Var>
</dst>
<dst lb="138" cb="5" le="138" ce="67">
<exp pvirg="true"/>
<Var nm="Address" value="true">
<bt name="unsigned int"/>
<mce lb="138" cb="24" le="138" ce="66" nbparm="2" id="94021f4eb3db4bb5e433d342e7530945_a80ec51368029b8157a8b6558924305b">
<exp pvirg="true"/>
<mex lb="138" cb="24" id="94021f4eb3db4bb5e433d342e7530945_a80ec51368029b8157a8b6558924305b" nm="calculateIndirectAddress" arrow="1">
<n19 lb="138" cb="24"/>
</mex>
<n32 lb="138" cb="49">
<drx lb="138" cb="49" kind="lvalue" nm="RegIndex"/>
</n32>
<n32 lb="138" cb="59">
<drx lb="138" cb="59" kind="lvalue" nm="Channel"/>
</n32>
</mce>
</Var>
</dst>
<dst lb="139" cb="5" le="139" ce="62">
<exp pvirg="true"/>
<Var nm="OffsetReg" value="true">
<bt name="unsigned int"/>
<mce lb="139" cb="26" le="139" ce="61" nbparm="0" id="84c010a1a9c2223bad1481218c714125_d0f1ee745a34a97b05890245af9cf303">
<exp pvirg="true"/>
<mex lb="139" cb="26" le="139" ce="54" id="84c010a1a9c2223bad1481218c714125_d0f1ee745a34a97b05890245af9cf303" nm="getReg" point="1">
<n32 lb="139" cb="26" le="139" ce="52">
<mce lb="139" cb="26" le="139" ce="52" nbparm="1" id="d038367435b7928d04997491e912d58d_bd4b4f2fddf9289902fadfee175f5292">
<exp pvirg="true"/>
<mex lb="139" cb="26" le="139" ce="30" id="d038367435b7928d04997491e912d58d_bd4b4f2fddf9289902fadfee175f5292" nm="getOperand" arrow="1">
<ocx lb="139" cb="26" nbparm="1" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05">
<exp pvirg="true"/>
<n32 lb="139" cb="28">
<drx lb="139" cb="28" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05" nm="operator-&gt;"/>
</n32>
<n32 lb="139" cb="26">
<drx lb="139" cb="26" kind="lvalue" nm="MI"/>
</n32>
</ocx>
</mex>
<n32 lb="139" cb="41">
<n32 lb="139" cb="41">
<drx lb="139" cb="41" kind="lvalue" nm="OffsetOpIdx"/>
</n32>
</n32>
</mce>
</n32>
</mex>
</mce>
</Var>
</dst>
</u>
<if lb="147" cb="10" le="165" ce="3" else="true" elselb="163" elsecb="10">
<mce lb="147" cb="14" le="147" ce="33" nbparm="1" id="94021f4eb3db4bb5e433d342e7530945_fc41a70ecff3726e64abb597d33153c6">
<exp pvirg="true"/>
<mex lb="147" cb="14" id="94021f4eb3db4bb5e433d342e7530945_fc41a70ecff3726e64abb597d33153c6" nm="isRegisterStore" arrow="1">
<n19 lb="147" cb="14"/>
</mex>
<n32 lb="147" cb="30" le="147" ce="31">
<ocx lb="147" cb="30" le="147" ce="31" nbparm="1" id="dc2fe1ce3eab105adc926f5848f1baa6_2731e06b8948faff9b9b5e5bad8dbc89">
<exp pvirg="true"/>
<n32 lb="147" cb="30">
<drx lb="147" cb="30" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_2731e06b8948faff9b9b5e5bad8dbc89" nm="operator*"/>
</n32>
<n32 lb="147" cb="31">
<drx lb="147" cb="31" kind="lvalue" nm="MI"/>
</n32>
</ocx>
</n32>
</mce>
<u lb="147" cb="36" le="163" ce="3">
<dst lb="148" cb="5" le="149" ce="67">
<exp pvirg="true"/>
<Var nm="ValOpIdx" value="true">
<bt name="int"/>
</Var>
</dst>
<dst lb="151" cb="5" le="151" ce="58">
<exp pvirg="true"/>
<Var nm="RegIndex" value="true">
<bt name="unsigned int"/>
<n32 lb="151" cb="25" le="151" ce="57">
<mce lb="151" cb="25" le="151" ce="57" nbparm="0" id="84c010a1a9c2223bad1481218c714125_054472938e7819d3a3b1e6b4a923fd95">
<exp pvirg="true"/>
<mex lb="151" cb="25" le="151" ce="50" id="84c010a1a9c2223bad1481218c714125_054472938e7819d3a3b1e6b4a923fd95" nm="getImm" point="1">
<n32 lb="151" cb="25" le="151" ce="48">
<mce lb="151" cb="25" le="151" ce="48" nbparm="1" id="d038367435b7928d04997491e912d58d_bd4b4f2fddf9289902fadfee175f5292">
<exp pvirg="true"/>
<mex lb="151" cb="25" le="151" ce="29" id="d038367435b7928d04997491e912d58d_bd4b4f2fddf9289902fadfee175f5292" nm="getOperand" arrow="1">
<ocx lb="151" cb="25" nbparm="1" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05">
<exp pvirg="true"/>
<n32 lb="151" cb="27">
<drx lb="151" cb="27" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05" nm="operator-&gt;"/>
</n32>
<n32 lb="151" cb="25">
<drx lb="151" cb="25" kind="lvalue" nm="MI"/>
</n32>
</ocx>
</mex>
<n32 lb="151" cb="40">
<n32 lb="151" cb="40">
<drx lb="151" cb="40" kind="lvalue" nm="RegOpIdx"/>
</n32>
</n32>
</mce>
</n32>
</mex>
</mce>
</n32>
</Var>
</dst>
<dst lb="152" cb="5" le="152" ce="58">
<exp pvirg="true"/>
<Var nm="Channel" value="true">
<bt name="unsigned int"/>
<n32 lb="152" cb="24" le="152" ce="57">
<mce lb="152" cb="24" le="152" ce="57" nbparm="0" id="84c010a1a9c2223bad1481218c714125_054472938e7819d3a3b1e6b4a923fd95">
<exp pvirg="true"/>
<mex lb="152" cb="24" le="152" ce="50" id="84c010a1a9c2223bad1481218c714125_054472938e7819d3a3b1e6b4a923fd95" nm="getImm" point="1">
<n32 lb="152" cb="24" le="152" ce="48">
<mce lb="152" cb="24" le="152" ce="48" nbparm="1" id="d038367435b7928d04997491e912d58d_bd4b4f2fddf9289902fadfee175f5292">
<exp pvirg="true"/>
<mex lb="152" cb="24" le="152" ce="28" id="d038367435b7928d04997491e912d58d_bd4b4f2fddf9289902fadfee175f5292" nm="getOperand" arrow="1">
<ocx lb="152" cb="24" nbparm="1" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05">
<exp pvirg="true"/>
<n32 lb="152" cb="26">
<drx lb="152" cb="26" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05" nm="operator-&gt;"/>
</n32>
<n32 lb="152" cb="24">
<drx lb="152" cb="24" kind="lvalue" nm="MI"/>
</n32>
</ocx>
</mex>
<n32 lb="152" cb="39">
<n32 lb="152" cb="39">
<drx lb="152" cb="39" kind="lvalue" nm="ChanOpIdx"/>
</n32>
</n32>
</mce>
</n32>
</mex>
</mce>
</n32>
</Var>
</dst>
<dst lb="153" cb="5" le="153" ce="67">
<exp pvirg="true"/>
<Var nm="Address" value="true">
<bt name="unsigned int"/>
<mce lb="153" cb="24" le="153" ce="66" nbparm="2" id="94021f4eb3db4bb5e433d342e7530945_a80ec51368029b8157a8b6558924305b">
<exp pvirg="true"/>
<mex lb="153" cb="24" id="94021f4eb3db4bb5e433d342e7530945_a80ec51368029b8157a8b6558924305b" nm="calculateIndirectAddress" arrow="1">
<n19 lb="153" cb="24"/>
</mex>
<n32 lb="153" cb="49">
<drx lb="153" cb="49" kind="lvalue" nm="RegIndex"/>
</n32>
<n32 lb="153" cb="59">
<drx lb="153" cb="59" kind="lvalue" nm="Channel"/>
</n32>
</mce>
</Var>
</dst>
<dst lb="154" cb="5" le="154" ce="62">
<exp pvirg="true"/>
<Var nm="OffsetReg" value="true">
<bt name="unsigned int"/>
<mce lb="154" cb="26" le="154" ce="61" nbparm="0" id="84c010a1a9c2223bad1481218c714125_d0f1ee745a34a97b05890245af9cf303">
<exp pvirg="true"/>
<mex lb="154" cb="26" le="154" ce="54" id="84c010a1a9c2223bad1481218c714125_d0f1ee745a34a97b05890245af9cf303" nm="getReg" point="1">
<n32 lb="154" cb="26" le="154" ce="52">
<mce lb="154" cb="26" le="154" ce="52" nbparm="1" id="d038367435b7928d04997491e912d58d_bd4b4f2fddf9289902fadfee175f5292">
<exp pvirg="true"/>
<mex lb="154" cb="26" le="154" ce="30" id="d038367435b7928d04997491e912d58d_bd4b4f2fddf9289902fadfee175f5292" nm="getOperand" arrow="1">
<ocx lb="154" cb="26" nbparm="1" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05">
<exp pvirg="true"/>
<n32 lb="154" cb="28">
<drx lb="154" cb="28" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05" nm="operator-&gt;"/>
</n32>
<n32 lb="154" cb="26">
<drx lb="154" cb="26" kind="lvalue" nm="MI"/>
</n32>
</ocx>
</mex>
<n32 lb="154" cb="41">
<n32 lb="154" cb="41">
<drx lb="154" cb="41" kind="lvalue" nm="OffsetOpIdx"/>
</n32>
</n32>
</mce>
</n32>
</mex>
</mce>
</Var>
</dst>
</u>
<u lb="163" cb="10" le="165" ce="3">
<rx lb="164" cb="5" le="164" ce="12" pvirg="true">
<n9 lb="164" cb="12"/>
</rx>
</u>
</if>
</if>
<mce lb="167" cb="3" le="167" ce="16" nbparm="1" id="dc2fe1ce3eab105adc926f5848f1baa6_e1cd20785fe91b291e48bc81492c9ebe">
<exp pvirg="true"/>
<mex lb="167" cb="3" le="167" ce="8" id="dc2fe1ce3eab105adc926f5848f1baa6_e1cd20785fe91b291e48bc81492c9ebe" nm="erase" arrow="1">
<n32 lb="167" cb="3">
<drx lb="167" cb="3" kind="lvalue" nm="MBB"/>
</n32>
</mex>
<n10 lb="167" cb="14">
<typeptr id="dc2fe1ce3eab105adc926f5848f1baa6_dd1eea613f7664c83f6c41f4f5e691ed">
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<rt>
<cts id="cf80d347400835f00b932d17946e2cd9_d2bacc8281a77e8dba37cb711d99aa30">
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</template_arguments>
</cts>
</rt>
</template_arguments>
</typeptr>
<temp/>
<n32 lb="167" cb="14">
<drx lb="167" cb="14" kind="lvalue" nm="MI"/>
</n32>
</n10>
</mce>
<rx lb="168" cb="3" le="168" ce="10" pvirg="true">
<n9 lb="168" cb="10"/>
</rx>
</u>

</Stmt>
</m>
<m name="foldMemoryOperandImpl" id="e320e5ad52e0b51792eb07be7f4d23d7_5f297513f7b1bfb01d92aea3b2dead7c" file="1" linestart="172" lineend="179" previous="94021f4eb3db4bb5e433d342e7530945_5f297513f7b1bfb01d92aea3b2dead7c" access="protected" hasbody="true" isdef="true">
<fpt const="true" proto="llvm::MachineInstr *">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
</fpt>
<p name="MF" proto="llvm::MachineFunction &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="895a66b41661e915ba6854da2359580f_7a76e175133a980deee19d81d954fcc0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MI" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Ops" proto="const SmallVectorImpl&lt;unsigned int&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="c3586f8905149b2cd0eae331865ec0d6_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<bt name="unsigned int"/>
</template_arguments>
</tss>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="176" cb="61" le="179" ce="1">
<rx lb="178" cb="3" le="178" ce="10" pvirg="true">
<n32 lb="178" cb="10">
<n16 lb="178" cb="10">
<exp pvirg="true"/>
</n16>
</n32>
</rx>
</u>

</Stmt>
</m>
<m name="foldMemoryOperandImpl" id="e320e5ad52e0b51792eb07be7f4d23d7_9419b81c33d7ad8d842009d2d3abd89f" file="1" linestart="180" lineend="187" previous="94021f4eb3db4bb5e433d342e7530945_9419b81c33d7ad8d842009d2d3abd89f" access="protected" hasbody="true" isdef="true">
<fpt const="true" proto="llvm::MachineInstr *">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
</fpt>
<p name="MF" proto="llvm::MachineFunction &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="895a66b41661e915ba6854da2359580f_7a76e175133a980deee19d81d954fcc0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MI" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Ops" proto="const SmallVectorImpl&lt;unsigned int&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="c3586f8905149b2cd0eae331865ec0d6_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<bt name="unsigned int"/>
</template_arguments>
</tss>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="LoadMI" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="184" cb="67" le="187" ce="1">
<rx lb="186" cb="3" le="186" ce="10" pvirg="true">
<n32 lb="186" cb="10">
<n16 lb="186" cb="10">
<exp pvirg="true"/>
</n16>
</n32>
</rx>
</u>

</Stmt>
</m>
<m name="canFoldMemoryOperand" id="e320e5ad52e0b51792eb07be7f4d23d7_7ba61f84ea29b7476c4138e4129396db" file="1" linestart="188" lineend="193" previous="94021f4eb3db4bb5e433d342e7530945_7ba61f84ea29b7476c4138e4129396db" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Ops" proto="const SmallVectorImpl&lt;unsigned int&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="c3586f8905149b2cd0eae331865ec0d6_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<bt name="unsigned int"/>
</template_arguments>
</tss>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="190" cb="82" le="193" ce="1">
<rx lb="192" cb="3" le="192" ce="10" pvirg="true">
<n9 lb="192" cb="10"/>
</rx>
</u>

</Stmt>
</m>
<m name="unfoldMemoryOperand" id="e320e5ad52e0b51792eb07be7f4d23d7_31cdb51abb2c48032e926363dc4c4b00" file="1" linestart="194" lineend="201" previous="94021f4eb3db4bb5e433d342e7530945_31cdb51abb2c48032e926363dc4c4b00" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MF" proto="llvm::MachineFunction &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="895a66b41661e915ba6854da2359580f_7a76e175133a980deee19d81d954fcc0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MI" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Reg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="UnfoldLoad" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
<p name="UnfoldStore" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
<p name="NewMIs" proto="SmallVectorImpl&lt;llvm::MachineInstr *&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<tss>
<templatebase id="c3586f8905149b2cd0eae331865ec0d6_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
</template_arguments>
</tss>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="198" cb="80" le="201" ce="1">
<rx lb="200" cb="3" le="200" ce="10" pvirg="true">
<n9 lb="200" cb="10"/>
</rx>
</u>

</Stmt>
</m>
<m name="unfoldMemoryOperand" id="e320e5ad52e0b51792eb07be7f4d23d7_28c129d23986641b638215fd81476b4d" file="1" linestart="203" lineend="208" previous="94021f4eb3db4bb5e433d342e7530945_28c129d23986641b638215fd81476b4d" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="DAG" proto="llvm::SelectionDAG &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="35dcc986b9fc41c6f521acfc055f8d35_31cb548337e3cbfc72b6576d86e80fa8"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="N" proto="llvm::SDNode *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="e657d4590d4ae2f19e9fcd6accd93c66_3759b9bd1ce1cac3724a4522e9a171a5"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="NewNodes" proto="SmallVectorImpl&lt;llvm::SDNode *&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<tss>
<templatebase id="c3586f8905149b2cd0eae331865ec0d6_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<pt>
<rt>
<cr id="e657d4590d4ae2f19e9fcd6accd93c66_3759b9bd1ce1cac3724a4522e9a171a5"/>
</rt>
</pt>
</template_arguments>
</tss>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="205" cb="79" le="208" ce="1">
<rx lb="207" cb="3" le="207" ce="10" pvirg="true">
<n9 lb="207" cb="10"/>
</rx>
</u>

</Stmt>
</m>
<m name="getOpcodeAfterMemoryUnfold" id="e320e5ad52e0b51792eb07be7f4d23d7_aeef72e9c8e06228c251b1425c60bca9" file="1" linestart="210" lineend="216" previous="94021f4eb3db4bb5e433d342e7530945_aeef72e9c8e06228c251b1425c60bca9" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="Opc" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="UnfoldLoad" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
<p name="UnfoldStore" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
<p name="LoadRegIndex" proto="unsigned int *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<bt name="unsigned int"/>
</pt>
<Stmt>
<n32 lb="122" cb="57">
<n16 lb="122" cb="57">
<exp pvirg="true"/>
</n16>
</n32>

</Stmt>
</p>
<Stmt>
<u lb="213" cb="74" le="216" ce="1">
<rx lb="215" cb="3" le="215" ce="10" pvirg="true">
<n32 lb="215" cb="10">
<n45 lb="215" cb="10">
<flit/>
</n45>
</n32>
</rx>
</u>

</Stmt>
</m>
<m name="enableClusterLoads" id="e320e5ad52e0b51792eb07be7f4d23d7_c6503ad3927496a635335adae35e251c" file="1" linestart="218" lineend="220" previous="94021f4eb3db4bb5e433d342e7530945_c6503ad3927496a635335adae35e251c" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<Stmt>
<u lb="218" cb="50" le="220" ce="1">
<rx lb="219" cb="3" le="219" ce="10" pvirg="true">
<n9 lb="219" cb="10"/>
</rx>
</u>

</Stmt>
</m>
<m name="shouldScheduleLoadsNear" id="e320e5ad52e0b51792eb07be7f4d23d7_e9b35b5822aa0d8a96d455c4a7aef44b" file="1" linestart="222" lineend="231" previous="94021f4eb3db4bb5e433d342e7530945_e9b35b5822aa0d8a96d455c4a7aef44b" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="Load1" proto="llvm::SDNode *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="e657d4590d4ae2f19e9fcd6accd93c66_3759b9bd1ce1cac3724a4522e9a171a5"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Load2" proto="llvm::SDNode *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="e657d4590d4ae2f19e9fcd6accd93c66_3759b9bd1ce1cac3724a4522e9a171a5"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Offset1" proto="int64_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="long long"/>
</Tdef>
<Stmt>

</Stmt>
</p>
<p name="Offset2" proto="int64_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="long long"/>
</Tdef>
<Stmt>

</Stmt>
</p>
<p name="NumLoads" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="224" cb="71" le="231" ce="1">
<ocast lb="225" cb="3" le="225" ce="3">
<bt name="void"/>
<n46 lb="225" cb="3" le="225" ce="3">
<exp pvirg="true"/>
<xop lb="225" cb="3" le="225" ce="3" kind="||">
<n46 lb="225" cb="3" le="225" ce="3">
<exp pvirg="true"/>
<uo lb="225" cb="3" le="225" ce="3" kind="!">
<uo lb="225" cb="3" le="225" ce="3" kind="!">
<n46 lb="225" cb="3" le="225" ce="3">
<exp pvirg="true"/>
<xop lb="225" cb="3" le="225" ce="3" kind="&amp;&amp;">
<xop lb="225" cb="3" le="225" ce="3" kind="&gt;">
<n32 lb="225" cb="3">
<drx lb="225" cb="3" kind="lvalue" nm="Offset2"/>
</n32>
<n32 lb="225" cb="3">
<drx lb="225" cb="3" kind="lvalue" nm="Offset1"/>
</n32>
</xop>
<n32 lb="225" cb="3">
<n32 lb="225" cb="3">
<n52 lb="225" cb="3">
<slit/>
</n52>
</n32>
</n32>
</xop>
</n46>
</uo>
</uo>
</n46>
<n32 lb="225" cb="3" le="225" ce="3">
<n46 lb="225" cb="3" le="225" ce="3">
<exp pvirg="true"/>
<xop lb="225" cb="3" le="225" ce="3" kind=",">
<ce lb="225" cb="3" le="225" ce="3" nbparm="3" id="31c357693d52ae274c14f087014287c4_3e40221a11a600da08b516cdee0dac93">
<exp pvirg="true"/>
<n32 lb="225" cb="3">
<drx lb="225" cb="3" kind="lvalue" id="31c357693d52ae274c14f087014287c4_3e40221a11a600da08b516cdee0dac93" nm="_wassert"/>
</n32>
<n32 lb="225" cb="3">
<n52 lb="225" cb="3">
<slit/>
</n52>
</n32>
<n32 lb="225" cb="3">
<n52 lb="225" cb="3">
<slit/>
</n52>
</n32>
<n32 lb="225" cb="3">
<n45 lb="225" cb="3">
<flit/>
</n45>
</n32>
</ce>
<n45 lb="225" cb="3">
<flit/>
</n45>
</xop>
</n46>
</n32>
</xop>
</n46>
</ocast>
<rx lb="230" cb="3" le="230" ce="52" pvirg="true">
<n46 lb="230" cb="10" le="230" ce="52">
<exp pvirg="true"/>
<xop lb="230" cb="11" le="230" ce="50" kind="&amp;&amp;">
<xop lb="230" cb="11" le="230" ce="22" kind="&lt;">
<n32 lb="230" cb="11">
<drx lb="230" cb="11" kind="lvalue" nm="NumLoads"/>
</n32>
<n32 lb="230" cb="22">
<n45 lb="230" cb="22">
<flit/>
</n45>
</n32>
</xop>
<xop lb="230" cb="28" le="230" ce="50" kind="&lt;">
<n46 lb="230" cb="28" le="230" ce="46">
<exp pvirg="true"/>
<xop lb="230" cb="29" le="230" ce="39" kind="-">
<n32 lb="230" cb="29">
<drx lb="230" cb="29" kind="lvalue" nm="Offset2"/>
</n32>
<n32 lb="230" cb="39">
<drx lb="230" cb="39" kind="lvalue" nm="Offset1"/>
</n32>
</xop>
</n46>
<n32 lb="230" cb="50">
<n45 lb="230" cb="50"/>
</n32>
</xop>
</xop>
</n46>
</rx>
</u>

</Stmt>
</m>
<m name="ReverseBranchCondition" id="e320e5ad52e0b51792eb07be7f4d23d7_dd56ba1a100ec35d3b28ab72c1026bc6" file="1" linestart="233" lineend="238" previous="94021f4eb3db4bb5e433d342e7530945_dd56ba1a100ec35d3b28ab72c1026bc6" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="Cond" proto="SmallVectorImpl&lt;llvm::MachineOperand&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<tss>
<templatebase id="c3586f8905149b2cd0eae331865ec0d6_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<rt>
<cr id="84c010a1a9c2223bad1481218c714125_82ecc2b64168756ea82cc9516656b279"/>
</rt>
</template_arguments>
</tss>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="235" cb="9" le="238" ce="1">
<rx lb="237" cb="3" le="237" ce="10" pvirg="true">
<n9 lb="237" cb="10"/>
</rx>
</u>

</Stmt>
</m>
<m name="insertNoop" id="e320e5ad52e0b51792eb07be7f4d23d7_2a2539924bab2fdaaecff58202b25188" file="1" linestart="239" lineend="242" previous="94021f4eb3db4bb5e433d342e7530945_2a2539924bab2fdaaecff58202b25188" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MI" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="240" cb="71" le="242" ce="1"/>

</Stmt>
</m>
<m name="isPredicated" id="e320e5ad52e0b51792eb07be7f4d23d7_b8e286aebce8489236c89740ccbe7f8e" file="1" linestart="244" lineend="247" previous="94021f4eb3db4bb5e433d342e7530945_b8e286aebce8489236c89740ccbe7f8e" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="244" cb="66" le="247" ce="1">
<rx lb="246" cb="3" le="246" ce="10" pvirg="true">
<n9 lb="246" cb="10"/>
</rx>
</u>

</Stmt>
</m>
<m name="SubsumesPredicate" id="e320e5ad52e0b51792eb07be7f4d23d7_c50e03eb7998949eacf5c68cb1b384e9" file="1" linestart="248" lineend="254" previous="94021f4eb3db4bb5e433d342e7530945_c50e03eb7998949eacf5c68cb1b384e9" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="Pred1" proto="const SmallVectorImpl&lt;llvm::MachineOperand&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="c3586f8905149b2cd0eae331865ec0d6_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<rt>
<cr id="84c010a1a9c2223bad1481218c714125_82ecc2b64168756ea82cc9516656b279"/>
</rt>
</template_arguments>
</tss>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="Pred2" proto="const SmallVectorImpl&lt;llvm::MachineOperand&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="c3586f8905149b2cd0eae331865ec0d6_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<rt>
<cr id="84c010a1a9c2223bad1481218c714125_82ecc2b64168756ea82cc9516656b279"/>
</rt>
</template_arguments>
</tss>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="251" cb="9" le="254" ce="1">
<rx lb="253" cb="3" le="253" ce="10" pvirg="true">
<n9 lb="253" cb="10"/>
</rx>
</u>

</Stmt>
</m>
<m name="DefinesPredicate" id="e320e5ad52e0b51792eb07be7f4d23d7_22ffda95bb41ed9367bb6d37ce5c90d2" file="1" linestart="256" lineend="260" previous="94021f4eb3db4bb5e433d342e7530945_22ffda95bb41ed9367bb6d37ce5c90d2" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Pred" proto="std::vector&lt;MachineOperand&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<rt>
<cr id="84c010a1a9c2223bad1481218c714125_82ecc2b64168756ea82cc9516656b279"/>
</rt>
</template_arguments>
</tss>
</ety>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="257" cb="80" le="260" ce="1">
<rx lb="259" cb="3" le="259" ce="10" pvirg="true">
<n9 lb="259" cb="10"/>
</rx>
</u>

</Stmt>
</m>
<m name="isPredicable" id="e320e5ad52e0b51792eb07be7f4d23d7_803f4fbd65a7fd5276932511ae65e3cf" file="1" linestart="262" lineend="265" previous="94021f4eb3db4bb5e433d342e7530945_803f4fbd65a7fd5276932511ae65e3cf" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="262" cb="60" le="265" ce="1">
<rx lb="264" cb="3" le="264" ce="37" pvirg="true">
<mce lb="264" cb="10" le="264" ce="37" nbparm="0" id="4a2ff077d443c99e1182a35779fbc93e_37a726eca29774ba042f0c0b72643748">
<exp pvirg="true"/>
<mex lb="264" cb="10" le="264" ce="24" id="4a2ff077d443c99e1182a35779fbc93e_37a726eca29774ba042f0c0b72643748" nm="isPredicable" point="1">
<mce lb="264" cb="10" le="264" ce="22" nbparm="0" id="d038367435b7928d04997491e912d58d_5e5eae97b83bcc7b0922c0306d95da9b">
<exp pvirg="true"/>
<mex lb="264" cb="10" le="264" ce="14" id="d038367435b7928d04997491e912d58d_5e5eae97b83bcc7b0922c0306d95da9b" nm="getDesc" arrow="1">
<n32 lb="264" cb="10">
<n32 lb="264" cb="10">
<drx lb="264" cb="10" kind="lvalue" nm="MI"/>
</n32>
</n32>
</mex>
</mce>
</mex>
</mce>
</rx>
</u>

</Stmt>
</m>
<m name="isSafeToMoveRegClassDefs" id="e320e5ad52e0b51792eb07be7f4d23d7_1be4d406ef0b0d5315388748632af6db" file="1" linestart="267" lineend="271" previous="94021f4eb3db4bb5e433d342e7530945_1be4d406ef0b0d5315388748632af6db" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="RC" proto="const llvm::TargetRegisterClass *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_e5ad748063c898b7dab27775bba1a499"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="268" cb="80" le="271" ce="1">
<rx lb="270" cb="3" le="270" ce="10" pvirg="true">
<n9 lb="270" cb="10"/>
</rx>
</u>

</Stmt>
</m>
<m name="isRegisterStore" id="e320e5ad52e0b51792eb07be7f4d23d7_fc41a70ecff3726e64abb597d33153c6" file="1" linestart="273" lineend="275" previous="94021f4eb3db4bb5e433d342e7530945_fc41a70ecff3726e64abb597d33153c6" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="273" cb="69" le="275" ce="1"/>

</Stmt>
</m>
<m name="isRegisterLoad" id="e320e5ad52e0b51792eb07be7f4d23d7_810c35f4172e68b27622d47988be1115" file="1" linestart="277" lineend="279" previous="94021f4eb3db4bb5e433d342e7530945_810c35f4172e68b27622d47988be1115" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="277" cb="68" le="279" ce="1"/>

</Stmt>
</m>
<m name="getIndirectIndexBegin" id="e320e5ad52e0b51792eb07be7f4d23d7_d65e0ab8d43b0d5d1b6055fefdf4d12c" file="1" linestart="281" lineend="314" previous="94021f4eb3db4bb5e433d342e7530945_d65e0ab8d43b0d5d1b6055fefdf4d12c" access="protected" hasbody="true" isdef="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
<p name="MF" proto="const llvm::MachineFunction &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="895a66b41661e915ba6854da2359580f_7a76e175133a980deee19d81d954fcc0"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="281" cb="77" le="314" ce="1">
<dst lb="282" cb="3" le="282" ce="51">
<exp pvirg="true"/>
<Var nm="MRI">
<lrf>
<QualType const="true">
<rt>
<cr id="ee4673395519b9f405c4d99dd06fa84f_a0d7fc88e3b2a6a7c0a857dd0e66c59b"/>
</rt>
</QualType>
</lrf>
<mce lb="282" cb="36" le="282" ce="50" nbparm="0" id="895a66b41661e915ba6854da2359580f_93adddc2764c2b5f8640ab56bfa310cf">
<exp pvirg="true"/>
<mex lb="282" cb="36" le="282" ce="39" id="895a66b41661e915ba6854da2359580f_93adddc2764c2b5f8640ab56bfa310cf" nm="getRegInfo" point="1">
<drx lb="282" cb="36" kind="lvalue" nm="MF"/>
</mex>
</mce>
</Var>
</dst>
<dst lb="283" cb="3" le="283" ce="50">
<exp pvirg="true"/>
<Var nm="MFI">
<pt>
<QualType const="true">
<rt>
<cr id="57744cd473803f8e5c9b2de4877592a5_9ff4d9986e55746edc7a8fdf17bdb023"/>
</rt>
</QualType>
</pt>
<mce lb="283" cb="33" le="283" ce="49" nbparm="0" id="895a66b41661e915ba6854da2359580f_0d0870d0ac2ae440d95c62ec76f20f54">
<exp pvirg="true"/>
<mex lb="283" cb="33" le="283" ce="36" id="895a66b41661e915ba6854da2359580f_0d0870d0ac2ae440d95c62ec76f20f54" nm="getFrameInfo" point="1">
<drx lb="283" cb="33" kind="lvalue" nm="MF"/>
</mex>
</mce>
</Var>
</dst>
<dst lb="284" cb="3" le="284" ce="18">
<exp pvirg="true"/>
<Var nm="Offset" value="true">
<bt name="int"/>
<uo lb="284" cb="16" le="284" ce="17" kind="-">
<n45 lb="284" cb="17">
<flit/>
</n45>
</uo>
</Var>
</dst>
<if lb="286" cb="3" le="288" ce="3">
<xop lb="286" cb="7" le="286" ce="31" kind="==">
<mce lb="286" cb="7" le="286" ce="26" nbparm="0" id="57744cd473803f8e5c9b2de4877592a5_6bd26a61ad56c7469b9f5e8181f88561">
<exp pvirg="true"/>
<mex lb="286" cb="7" le="286" ce="12" id="57744cd473803f8e5c9b2de4877592a5_6bd26a61ad56c7469b9f5e8181f88561" nm="getNumObjects" arrow="1">
<n32 lb="286" cb="7">
<drx lb="286" cb="7" kind="lvalue" nm="MFI"/>
</n32>
</mex>
</mce>
<n32 lb="286" cb="31">
<n45 lb="286" cb="31">
<flit/>
</n45>
</n32>
</xop>
<u lb="286" cb="34" le="288" ce="3">
<rx lb="287" cb="5" le="287" ce="13" pvirg="true">
<uo lb="287" cb="12" le="287" ce="13" kind="-">
<n45 lb="287" cb="13"/>
</uo>
</rx>
</u>
</if>
<if lb="290" cb="3" le="292" ce="3">
<mce lb="290" cb="7" le="290" ce="24" nbparm="0" id="ee4673395519b9f405c4d99dd06fa84f_8d3aff18a1775b3d8138dc9a75534816">
<exp pvirg="true"/>
<mex lb="290" cb="7" le="290" ce="11" id="ee4673395519b9f405c4d99dd06fa84f_8d3aff18a1775b3d8138dc9a75534816" nm="livein_empty" point="1">
<drx lb="290" cb="7" kind="lvalue" nm="MRI"/>
</mex>
</mce>
<u lb="290" cb="27" le="292" ce="3">
<rx lb="291" cb="5" le="291" ce="12" pvirg="true">
<n45 lb="291" cb="12"/>
</rx>
</u>
</if>
<dst lb="294" cb="3" le="294" ce="68">
<exp pvirg="true"/>
<Var nm="IndirectRC">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_e5ad748063c898b7dab27775bba1a499"/>
</rt>
</QualType>
</pt>
<mce lb="294" cb="43" le="294" ce="67" nbparm="0" id="94021f4eb3db4bb5e433d342e7530945_8af63dc792d42c9857178aba67148cd0">
<exp pvirg="true"/>
<mex lb="294" cb="43" id="94021f4eb3db4bb5e433d342e7530945_8af63dc792d42c9857178aba67148cd0" nm="getIndirectAddrRegClass" arrow="1">
<n19 lb="294" cb="43"/>
</mex>
</mce>
</Var>
</dst>
<fx lb="295" cb="3" le="311" ce="3">
<dst lb="295" cb="8" le="296" ce="66">
<exp pvirg="true"/>
<Var nm="LI" value="true">
<ety>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_695a37e33887535b74b2309b71bda977"/>
<template_arguments>
<Tdef>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_2d19cd24e0e0434835874d345df47fd5"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</ety>
<n37 lb="295" cb="50" le="295" ce="67">
<n10 lb="295" cb="50" le="295" ce="67">
<typeptr id="78cb3cbcc032150b6a85b2f30813c812_1ed29df9a7576e1ecbc23c4984a55145">
<template_arguments>
<rt>
<cts id="78cb3cbcc032150b6a85b2f30813c812_2d19cd24e0e0434835874d345df47fd5">
<template_arguments>
<rt>
<cts id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_d16a5f6f5bc0b20f10361aff0d9f12b0">
<template_arguments>
<rt>
<cts id="a32934a7929d7a50ec111aa40bc74d41_588c02fb583a80daabf4c37e3fd82a49">
<template_arguments>
<bt name="unsigned int"/>
<bt name="unsigned int"/>
</template_arguments>
</cts>
</rt>
</template_arguments>
</cts>
</rt>
</template_arguments>
</cts>
</rt>
</template_arguments>
</typeptr>
<temp/>
<mte lb="295" cb="50" le="295" ce="67">
<exp pvirg="true"/>
<n32 lb="295" cb="50" le="295" ce="67">
<n8 lb="295" cb="50" le="295" ce="67" >
<temp/>
<mce lb="295" cb="50" le="295" ce="67" nbparm="0" id="ee4673395519b9f405c4d99dd06fa84f_4cb1b588bb757862167b4b08fb490826">
<exp pvirg="true"/>
<mex lb="295" cb="50" le="295" ce="54" id="ee4673395519b9f405c4d99dd06fa84f_4cb1b588bb757862167b4b08fb490826" nm="livein_begin" point="1">
<drx lb="295" cb="50" kind="lvalue" nm="MRI"/>
</mex>
</mce>
</n8>
</n32>
</mte>
</n10>
</n37>
</Var>
<Var nm="LE" value="true" virg="true">
<ety>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_695a37e33887535b74b2309b71bda977"/>
<template_arguments>
<Tdef>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_2d19cd24e0e0434835874d345df47fd5"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</ety>
<n37 lb="296" cb="50" le="296" ce="65">
<n10 lb="296" cb="50" le="296" ce="65">
<typeptr id="78cb3cbcc032150b6a85b2f30813c812_1ed29df9a7576e1ecbc23c4984a55145">
<template_arguments>
<rt>
<cts id="78cb3cbcc032150b6a85b2f30813c812_2d19cd24e0e0434835874d345df47fd5">
<template_arguments>
<rt>
<cts id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_d16a5f6f5bc0b20f10361aff0d9f12b0">
<template_arguments>
<rt>
<cts id="a32934a7929d7a50ec111aa40bc74d41_588c02fb583a80daabf4c37e3fd82a49">
<template_arguments>
<bt name="unsigned int"/>
<bt name="unsigned int"/>
</template_arguments>
</cts>
</rt>
</template_arguments>
</cts>
</rt>
</template_arguments>
</cts>
</rt>
</template_arguments>
</typeptr>
<temp/>
<mte lb="296" cb="50" le="296" ce="65">
<exp pvirg="true"/>
<n32 lb="296" cb="50" le="296" ce="65">
<n8 lb="296" cb="50" le="296" ce="65" >
<temp/>
<mce lb="296" cb="50" le="296" ce="65" nbparm="0" id="ee4673395519b9f405c4d99dd06fa84f_9f8edb49f9b5f74c8668a01c9deb2e9f">
<exp pvirg="true"/>
<mex lb="296" cb="50" le="296" ce="54" id="ee4673395519b9f405c4d99dd06fa84f_9f8edb49f9b5f74c8668a01c9deb2e9f" nm="livein_end" point="1">
<drx lb="296" cb="50" kind="lvalue" nm="MRI"/>
</mex>
</mce>
</n8>
</n32>
</mte>
</n10>
</n37>
</Var>
</dst>
<ocx lb="297" cb="45" le="297" ce="51" nbparm="2" id="78cb3cbcc032150b6a85b2f30813c812_25125e062a987bdcc3dcfa86eb960b5b">
<exp pvirg="true"/>
<n32 lb="297" cb="48">
<drx lb="297" cb="48" kind="lvalue" id="78cb3cbcc032150b6a85b2f30813c812_25125e062a987bdcc3dcfa86eb960b5b" nm="operator!="/>
</n32>
<n32 lb="297" cb="45">
<drx lb="297" cb="45" kind="lvalue" nm="LI"/>
</n32>
<n32 lb="297" cb="51">
<drx lb="297" cb="51" kind="lvalue" nm="LE"/>
</n32>
</ocx>
<ocx lb="297" cb="55" le="297" ce="57" nbparm="1" id="78cb3cbcc032150b6a85b2f30813c812_5d725cdcecac8b0c1c2447c2de411303">
<exp pvirg="true"/>
<n32 lb="297" cb="55">
<drx lb="297" cb="55" kind="lvalue" id="78cb3cbcc032150b6a85b2f30813c812_5d725cdcecac8b0c1c2447c2de411303" nm="operator++"/>
</n32>
<drx lb="297" cb="57" kind="lvalue" nm="LI"/>
</ocx>
<u lb="297" cb="61" le="311" ce="3">
<dst lb="298" cb="5" le="298" ce="29">
<exp pvirg="true"/>
<Var nm="Reg" value="true">
<bt name="unsigned int"/>
<n32 lb="298" cb="20" le="298" ce="24">
<mex lb="298" cb="20" le="298" ce="24" kind="lvalue" id="a32934a7929d7a50ec111aa40bc74d41_52eed6144d5d94579972d7cd79d06416" nm="first" arrow="1">
<ocx lb="298" cb="20" nbparm="1" id="78cb3cbcc032150b6a85b2f30813c812_b9d951ff4e64a6e1b903e932906f4202">
<exp pvirg="true"/>
<n32 lb="298" cb="22">
<drx lb="298" cb="22" kind="lvalue" id="78cb3cbcc032150b6a85b2f30813c812_b9d951ff4e64a6e1b903e932906f4202" nm="operator-&gt;"/>
</n32>
<n32 lb="298" cb="20">
<drx lb="298" cb="20" kind="lvalue" nm="LI"/>
</n32>
</ocx>
</mex>
</n32>
</Var>
</dst>
<if lb="299" cb="5" le="301" ce="7">
<xop lb="299" cb="9" le="300" ce="34" kind="||">
<ce lb="299" cb="9" le="299" ce="50" nbparm="1" id="59642fb74cf5b58f433a7bdcb6c661d2_40b276e742e92e5fa3888e0cd7c9252e">
<exp pvirg="true"/>
<n32 lb="299" cb="9" le="299" ce="29">
<drx lb="299" cb="9" le="299" ce="29" kind="lvalue" id="59642fb74cf5b58f433a7bdcb6c661d2_40b276e742e92e5fa3888e0cd7c9252e" nm="isVirtualRegister"/>
</n32>
<n32 lb="299" cb="47">
<drx lb="299" cb="47" kind="lvalue" nm="Reg"/>
</n32>
</ce>
<uo lb="300" cb="9" le="300" ce="34" kind="!">
<mce lb="300" cb="10" le="300" ce="34" nbparm="1" id="59642fb74cf5b58f433a7bdcb6c661d2_9a2a9f2949cc50ef72bf0532135fcb1a">
<exp pvirg="true"/>
<mex lb="300" cb="10" le="300" ce="22" id="59642fb74cf5b58f433a7bdcb6c661d2_9a2a9f2949cc50ef72bf0532135fcb1a" nm="contains" arrow="1">
<n32 lb="300" cb="10">
<drx lb="300" cb="10" kind="lvalue" nm="IndirectRC"/>
</n32>
</mex>
<n32 lb="300" cb="31">
<drx lb="300" cb="31" kind="lvalue" nm="Reg"/>
</n32>
</mce>
</uo>
</xop>
<cns lb="301" cb="7"/>
</if>
<dst lb="303" cb="5" le="303" ce="22">
<exp pvirg="true"/>
<Var nm="RegIndex" value="true">
<bt name="unsigned int"/>
</Var>
</dst>
<dst lb="304" cb="5" le="304" ce="20">
<exp pvirg="true"/>
<Var nm="RegEnd" value="true">
<bt name="unsigned int"/>
</Var>
</dst>
<fx lb="305" cb="5" le="309" ce="5">
<xop lb="305" cb="10" le="305" ce="56" kind=",">
<xop lb="305" cb="10" le="305" ce="21" kind="=">
<drx lb="305" cb="10" kind="lvalue" nm="RegIndex"/>
<n32 lb="305" cb="21">
<n45 lb="305" cb="21"/>
</n32>
</xop>
<xop lb="305" cb="24" le="305" ce="56" kind="=">
<drx lb="305" cb="24" kind="lvalue" nm="RegEnd"/>
<mce lb="305" cb="33" le="305" ce="56" nbparm="0" id="59642fb74cf5b58f433a7bdcb6c661d2_82327d44d993f8c66f7c796393e315b5">
<exp pvirg="true"/>
<mex lb="305" cb="33" le="305" ce="45" id="59642fb74cf5b58f433a7bdcb6c661d2_82327d44d993f8c66f7c796393e315b5" nm="getNumRegs" arrow="1">
<n32 lb="305" cb="33">
<drx lb="305" cb="33" kind="lvalue" nm="IndirectRC"/>
</n32>
</mex>
</mce>
</xop>
</xop>
<xop lb="305" cb="59" le="305" ce="71" kind="!=">
<n32 lb="305" cb="59">
<drx lb="305" cb="59" kind="lvalue" nm="RegIndex"/>
</n32>
<n32 lb="305" cb="71">
<drx lb="305" cb="71" kind="lvalue" nm="RegEnd"/>
</n32>
</xop>
<uo lb="306" cb="59" le="306" ce="61" kind="++">
<drx lb="306" cb="61" kind="lvalue" nm="RegIndex"/>
</uo>
<u lb="306" cb="71" le="309" ce="5">
<if lb="307" cb="7" le="308" ce="9">
<xop lb="307" cb="11" le="307" ce="48" kind="==">
<mce lb="307" cb="11" le="307" ce="43" nbparm="1" id="59642fb74cf5b58f433a7bdcb6c661d2_7656dc3ba0bb1b5724af300559ba7110">
<exp pvirg="true"/>
<mex lb="307" cb="11" le="307" ce="23" id="59642fb74cf5b58f433a7bdcb6c661d2_7656dc3ba0bb1b5724af300559ba7110" nm="getRegister" arrow="1">
<n32 lb="307" cb="11">
<drx lb="307" cb="11" kind="lvalue" nm="IndirectRC"/>
</n32>
</mex>
<n32 lb="307" cb="35">
<drx lb="307" cb="35" kind="lvalue" nm="RegIndex"/>
</n32>
</mce>
<n32 lb="307" cb="48">
<drx lb="307" cb="48" kind="lvalue" nm="Reg"/>
</n32>
</xop>
<bks lb="308" cb="9"/>
</if>
</u>
</fx>
<xop lb="310" cb="5" le="310" ce="44" kind="=">
<drx lb="310" cb="5" kind="lvalue" nm="Offset"/>
<n32 lb="310" cb="14" le="310" ce="44">
<ce lb="310" cb="14" le="310" ce="44" nbparm="2" id="94a7e75d7a66258cfa0b786887370f56_dbc0139521b1f1d8eb69fae6a41c0686">
<exp pvirg="true"/>
<n32 lb="310" cb="14" le="310" ce="19">
<drx lb="310" cb="14" le="310" ce="19" kind="lvalue" id="94a7e75d7a66258cfa0b786887370f56_dbc0139521b1f1d8eb69fae6a41c0686" nm="max">
<template_arguments>
<bt name="int"/>
</template_arguments>
</drx>
</n32>
<n32 lb="310" cb="23">
<drx lb="310" cb="23" kind="lvalue" nm="Offset"/>
</n32>
<mte lb="310" cb="31" le="310" ce="36">
<exp pvirg="true"/>
<ocast lb="310" cb="31" le="310" ce="36">
<bt name="int"/>
<n32 lb="310" cb="36">
<n32 lb="310" cb="36">
<drx lb="310" cb="36" kind="lvalue" nm="RegIndex"/>
</n32>
</n32>
</ocast>
</mte>
</ce>
</n32>
</xop>
</u>
</fx>
<rx lb="313" cb="3" le="313" ce="19" pvirg="true">
<xop lb="313" cb="10" le="313" ce="19" kind="+">
<n32 lb="313" cb="10">
<drx lb="313" cb="10" kind="lvalue" nm="Offset"/>
</n32>
<n45 lb="313" cb="19"/>
</xop>
</rx>
</u>

</Stmt>
</m>
<m name="getIndirectIndexEnd" id="e320e5ad52e0b51792eb07be7f4d23d7_c370b47dc513a8b21919e8486d515552" file="1" linestart="316" lineend="330" previous="94021f4eb3db4bb5e433d342e7530945_c370b47dc513a8b21919e8486d515552" access="protected" hasbody="true" isdef="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
<p name="MF" proto="const llvm::MachineFunction &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="895a66b41661e915ba6854da2359580f_7a76e175133a980deee19d81d954fcc0"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="316" cb="75" le="330" ce="1">
<dst lb="317" cb="3" le="317" ce="17">
<exp pvirg="true"/>
<Var nm="Offset" value="true">
<bt name="int"/>
<n45 lb="317" cb="16">
<flit/>
</n45>
</Var>
</dst>
<dst lb="318" cb="3" le="318" ce="50">
<exp pvirg="true"/>
<Var nm="MFI">
<pt>
<QualType const="true">
<rt>
<cr id="57744cd473803f8e5c9b2de4877592a5_9ff4d9986e55746edc7a8fdf17bdb023"/>
</rt>
</QualType>
</pt>
<mce lb="318" cb="33" le="318" ce="49" nbparm="0" id="895a66b41661e915ba6854da2359580f_0d0870d0ac2ae440d95c62ec76f20f54">
<exp pvirg="true"/>
<mex lb="318" cb="33" le="318" ce="36" id="895a66b41661e915ba6854da2359580f_0d0870d0ac2ae440d95c62ec76f20f54" nm="getFrameInfo" point="1">
<drx lb="318" cb="33" kind="lvalue" nm="MF"/>
</mex>
</mce>
</Var>
</dst>
<ocast lb="321" cb="3" le="321" ce="3">
<bt name="void"/>
<n46 lb="321" cb="3" le="321" ce="3">
<exp pvirg="true"/>
<xop lb="321" cb="3" le="321" ce="3" kind="||">
<n46 lb="321" cb="3" le="321" ce="3">
<exp pvirg="true"/>
<uo lb="321" cb="3" le="321" ce="3" kind="!">
<uo lb="321" cb="3" le="321" ce="3" kind="!">
<n46 lb="321" cb="3" le="321" ce="3">
<exp pvirg="true"/>
<uo lb="321" cb="3" le="321" ce="3" kind="!">
<mce lb="321" cb="3" le="321" ce="3" nbparm="0" id="57744cd473803f8e5c9b2de4877592a5_ef125f97c69719a01e97152d0829b77d">
<exp pvirg="true"/>
<mex lb="321" cb="3" le="321" ce="3" id="57744cd473803f8e5c9b2de4877592a5_ef125f97c69719a01e97152d0829b77d" nm="hasVarSizedObjects" arrow="1">
<n32 lb="321" cb="3">
<drx lb="321" cb="3" kind="lvalue" nm="MFI"/>
</n32>
</mex>
</mce>
</uo>
</n46>
</uo>
</uo>
</n46>
<n32 lb="321" cb="3" le="321" ce="3">
<n46 lb="321" cb="3" le="321" ce="3">
<exp pvirg="true"/>
<xop lb="321" cb="3" le="321" ce="3" kind=",">
<ce lb="321" cb="3" le="321" ce="3" nbparm="3" id="31c357693d52ae274c14f087014287c4_3e40221a11a600da08b516cdee0dac93">
<exp pvirg="true"/>
<n32 lb="321" cb="3">
<drx lb="321" cb="3" kind="lvalue" id="31c357693d52ae274c14f087014287c4_3e40221a11a600da08b516cdee0dac93" nm="_wassert"/>
</n32>
<n32 lb="321" cb="3">
<n52 lb="321" cb="3">
<slit/>
</n52>
</n32>
<n32 lb="321" cb="3">
<n52 lb="321" cb="3">
<slit/>
</n52>
</n32>
<n32 lb="321" cb="3">
<n45 lb="321" cb="3">
<flit/>
</n45>
</n32>
</ce>
<n45 lb="321" cb="3"/>
</xop>
</n46>
</n32>
</xop>
</n46>
</ocast>
<if lb="323" cb="3" le="325" ce="3">
<xop lb="323" cb="7" le="323" ce="31" kind="==">
<mce lb="323" cb="7" le="323" ce="26" nbparm="0" id="57744cd473803f8e5c9b2de4877592a5_6bd26a61ad56c7469b9f5e8181f88561">
<exp pvirg="true"/>
<mex lb="323" cb="7" le="323" ce="12" id="57744cd473803f8e5c9b2de4877592a5_6bd26a61ad56c7469b9f5e8181f88561" nm="getNumObjects" arrow="1">
<n32 lb="323" cb="7">
<drx lb="323" cb="7" kind="lvalue" nm="MFI"/>
</n32>
</mex>
</mce>
<n32 lb="323" cb="31">
<n45 lb="323" cb="31"/>
</n32>
</xop>
<u lb="323" cb="34" le="325" ce="3">
<rx lb="324" cb="5" le="324" ce="13" pvirg="true">
<uo lb="324" cb="12" le="324" ce="13" kind="-">
<n45 lb="324" cb="13">
<flit/>
</n45>
</uo>
</rx>
</u>
</if>
<xop lb="327" cb="3" le="327" ce="73" kind="=">
<drx lb="327" cb="3" kind="lvalue" nm="Offset"/>
<mce lb="327" cb="12" le="327" ce="73" nbparm="2" id="9ce16da58065b4e32bc19fccd9c585d4_905353def1c7f5f529371d6167d76c9e">
<exp pvirg="true"/>
<mex lb="327" cb="12" le="327" ce="47" id="9ce16da58065b4e32bc19fccd9c585d4_905353def1c7f5f529371d6167d76c9e" nm="getFrameIndexOffset" arrow="1">
<mce lb="327" cb="12" le="327" ce="44" nbparm="0" id="d4e05c6b0f4f04a6e13045c31301b1c4_3f426b1e27224d611d92066fe552bd1e">
<exp pvirg="true"/>
<mex lb="327" cb="12" le="327" ce="27" id="d4e05c6b0f4f04a6e13045c31301b1c4_3f426b1e27224d611d92066fe552bd1e" nm="getFrameLowering" point="1">
<mce lb="327" cb="12" le="327" ce="25" nbparm="0" id="895a66b41661e915ba6854da2359580f_27178af8c222022ec0fa7dfb5c0dc811">
<exp pvirg="true"/>
<mex lb="327" cb="12" le="327" ce="15" id="895a66b41661e915ba6854da2359580f_27178af8c222022ec0fa7dfb5c0dc811" nm="getTarget" point="1">
<drx lb="327" cb="12" kind="lvalue" nm="MF"/>
</mex>
</mce>
</mex>
</mce>
</mex>
<drx lb="327" cb="67" kind="lvalue" nm="MF"/>
<uo lb="327" cb="71" le="327" ce="72" kind="-">
<n45 lb="327" cb="72"/>
</uo>
</mce>
</xop>
<rx lb="329" cb="3" le="329" ce="38" pvirg="true">
<xop lb="329" cb="10" le="329" ce="38" kind="+">
<mce lb="329" cb="10" le="329" ce="34" nbparm="1" id="94021f4eb3db4bb5e433d342e7530945_d65e0ab8d43b0d5d1b6055fefdf4d12c">
<exp pvirg="true"/>
<mex lb="329" cb="10" id="94021f4eb3db4bb5e433d342e7530945_d65e0ab8d43b0d5d1b6055fefdf4d12c" nm="getIndirectIndexBegin" arrow="1">
<n19 lb="329" cb="10"/>
</mex>
<drx lb="329" cb="32" kind="lvalue" nm="MF"/>
</mce>
<n32 lb="329" cb="38">
<drx lb="329" cb="38" kind="lvalue" nm="Offset"/>
</n32>
</xop>
</rx>
</u>

</Stmt>
</m>
<m name="getMaskedMIMGOp" id="e320e5ad52e0b51792eb07be7f4d23d7_11d84100e475292aa62057d7f29d0a92" file="1" linestart="332" lineend="339" previous="94021f4eb3db4bb5e433d342e7530945_11d84100e475292aa62057d7f29d0a92" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
<p name="Opcode" proto="uint16_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned short"/>
</Tdef>
<Stmt>

</Stmt>
</p>
<p name="Channels" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="332" cb="80" le="339" ce="1">
<sy lb="333" cb="3" le="338" ce="3">
<n32 lb="333" cb="11">
<drx lb="333" cb="11" kind="lvalue" nm="Channels"/>
</n32>
<u lb="333" cb="21" le="338" ce="3">
<dx lb="334" cb="3" le="334" ce="19">
<rx lb="334" cb="12" le="334" ce="19" pvirg="true">
<n32 lb="334" cb="19">
<n32 lb="334" cb="19">
<drx lb="334" cb="19" kind="lvalue" nm="Opcode"/>
</n32>
</n32>
</rx>
</dx>
<cax lb="335" cb="3">
<n32 lb="335" cb="8">
<n45 lb="335" cb="8">
<flit/>
</n45>
</n32>
<n59/>
</cax>
<cax lb="336" cb="3">
<n32 lb="336" cb="8">
<n45 lb="336" cb="8">
<flit/>
</n45>
</n32>
<n59/>
</cax>
<cax lb="337" cb="3">
<n32 lb="337" cb="8">
<n45 lb="337" cb="8">
<flit/>
</n45>
</n32>
<n59/>
</cax>
</u>
</sy>
</u>

</Stmt>
</m>
<ns name="llvm" id="e320e5ad52e0b51792eb07be7f4d23d7_544dadc8774ac7e8cdf9804c9bca3e1f" file="1" linestart="344" lineend="350" original="">
<ns name="AMDGPU" id="e320e5ad52e0b51792eb07be7f4d23d7_2098f21df04119f029e13a7d4e87a797" file="1" linestart="345" lineend="349" original="">
<f namespace="llvm.AMDGPU" name="getMCOpcode" id="e320e5ad52e0b51792eb07be7f4d23d7_4604deac01d47afe7927bb9a29264f78" file="1" linestart="346" lineend="348" access="none" hasbody="true" isdef="true">
<fpt proto="int">
<bt name="int"/>
</fpt>
<p name="Opcode" proto="uint16_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned short"/>
</Tdef>
<Stmt>

</Stmt>
</p>
<p name="Gen" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="346" cb="48" le="348" ce="1"/>

</Stmt>
</f>
</ns>
</ns>
</tun>
</Root>
