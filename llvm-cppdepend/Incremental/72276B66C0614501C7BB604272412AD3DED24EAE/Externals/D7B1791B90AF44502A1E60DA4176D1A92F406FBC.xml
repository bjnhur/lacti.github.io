<Externals>
<cr namespace="llvm" access="none" depth="0" kind="class" name="BranchProbability" id="91a1adf0875b1cb73acb2d9240330c2d_8b6d54abed686387aeec232793f7598a" file="2" linestart="25" lineend="81">
<c name="BranchProbability" id="91a1adf0875b1cb73acb2d9240330c2d_605a4ed76549858e2f332186e99c07d2" file="2" linestart="33" lineend="36" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="n" proto="uint32_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</p>
<p name="d" proto="uint32_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</p>
<initlist id="91a1adf0875b1cb73acb2d9240330c2d_f18fe0bf1dca57211beb22a38365cf60"/>
<initlist id="91a1adf0875b1cb73acb2d9240330c2d_7503fb802a545d133292e744789c8e7d"/>
</c>
<m name="getZero" id="91a1adf0875b1cb73acb2d9240330c2d_8bba00fe3a1e57ff803752ac420c64b6" file="2" linestart="38" lineend="38" access="public" storage="static" hasbody="true" isdef="true">
<fpt proto="llvm::BranchProbability">
<rt>
<cr id="91a1adf0875b1cb73acb2d9240330c2d_8b6d54abed686387aeec232793f7598a"/>
</rt>
</fpt>
</m>
<m name="getOne" id="91a1adf0875b1cb73acb2d9240330c2d_12dfd082dfdfaec333f6fcb7edaf2afe" file="2" linestart="39" lineend="39" access="public" storage="static" hasbody="true" isdef="true">
<fpt proto="llvm::BranchProbability">
<rt>
<cr id="91a1adf0875b1cb73acb2d9240330c2d_8b6d54abed686387aeec232793f7598a"/>
</rt>
</fpt>
</m>
<m name="getNumerator" id="91a1adf0875b1cb73acb2d9240330c2d_04e3c6416187e4f9fde42747fbb0dbc0" file="2" linestart="41" lineend="41" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="uint32_t">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</fpt>
</m>
<m name="getDenominator" id="91a1adf0875b1cb73acb2d9240330c2d_4376394d2463a5c4e14cb1b80f957a50" file="2" linestart="42" lineend="42" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="uint32_t">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</fpt>
</m>
<m name="getCompl" id="91a1adf0875b1cb73acb2d9240330c2d_4abae676da41d314150e4882fb0dd8ea" file="2" linestart="45" lineend="47" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="llvm::BranchProbability">
<rt>
<cr id="91a1adf0875b1cb73acb2d9240330c2d_8b6d54abed686387aeec232793f7598a"/>
</rt>
</fpt>
</m>
<m name="scale" id="91a1adf0875b1cb73acb2d9240330c2d_ab27eb6f93c867d3e0c23688c2375979" file="2" linestart="59" lineend="59" access="public">
<fpt const="true" proto="uint64_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="Num" proto="uint64_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
<m name="scaleByInverse" id="91a1adf0875b1cb73acb2d9240330c2d_b98111b9a30c58725a408f8a11149efd" file="2" linestart="67" lineend="67" access="public">
<fpt const="true" proto="uint64_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
<p name="Num" proto="uint64_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</p>
</m>
<m name="operator==" id="91a1adf0875b1cb73acb2d9240330c2d_e929f8a76b47d37f555fd09b7a970ee7" file="2" linestart="69" lineend="71" operator="true" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="RHS" proto="llvm::BranchProbability" access2="none">
<rt>
<cr id="91a1adf0875b1cb73acb2d9240330c2d_8b6d54abed686387aeec232793f7598a"/>
</rt>
</p>
</m>
<m name="operator!=" id="91a1adf0875b1cb73acb2d9240330c2d_0782be9586ae381c72f7365551f38537" file="2" linestart="72" lineend="74" operator="true" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="RHS" proto="llvm::BranchProbability" access2="none">
<rt>
<cr id="91a1adf0875b1cb73acb2d9240330c2d_8b6d54abed686387aeec232793f7598a"/>
</rt>
</p>
</m>
<m name="operator&lt;" id="91a1adf0875b1cb73acb2d9240330c2d_cb889e5c5a1c8570a76d4481e0b76f3d" file="2" linestart="75" lineend="77" operator="true" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="RHS" proto="llvm::BranchProbability" access2="none">
<rt>
<cr id="91a1adf0875b1cb73acb2d9240330c2d_8b6d54abed686387aeec232793f7598a"/>
</rt>
</p>
</m>
<m name="operator&gt;" id="91a1adf0875b1cb73acb2d9240330c2d_fefb86195fea292f7f36ac8c9ff29a86" file="2" linestart="78" lineend="78" operator="true" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="RHS" proto="llvm::BranchProbability" access2="none">
<rt>
<cr id="91a1adf0875b1cb73acb2d9240330c2d_8b6d54abed686387aeec232793f7598a"/>
</rt>
</p>
</m>
<m name="operator&lt;=" id="91a1adf0875b1cb73acb2d9240330c2d_f7d70f52986f0f073dbff86a3ee2f29a" file="2" linestart="79" lineend="79" operator="true" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="RHS" proto="llvm::BranchProbability" access2="none">
<rt>
<cr id="91a1adf0875b1cb73acb2d9240330c2d_8b6d54abed686387aeec232793f7598a"/>
</rt>
</p>
</m>
<m name="operator&gt;=" id="91a1adf0875b1cb73acb2d9240330c2d_40dc798a41f448efad33d49f10da19c6" file="2" linestart="80" lineend="80" operator="true" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="RHS" proto="llvm::BranchProbability" access2="none">
<rt>
<cr id="91a1adf0875b1cb73acb2d9240330c2d_8b6d54abed686387aeec232793f7598a"/>
</rt>
</p>
</m>
<c name="BranchProbability" id="91a1adf0875b1cb73acb2d9240330c2d_ccd2126c181eeb8fd757186c860e38c5" file="2" linestart="25" lineend="25" copyconst="true" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="const llvm::BranchProbability &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="91a1adf0875b1cb73acb2d9240330c2d_8b6d54abed686387aeec232793f7598a"/>
</rt>
</QualType>
</lrf>
</p>
</c>
<c name="BranchProbability" id="91a1adf0875b1cb73acb2d9240330c2d_a5b7ef204960c766d287dca025dbef9e" file="2" linestart="25" lineend="25" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="llvm::BranchProbability &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="91a1adf0875b1cb73acb2d9240330c2d_8b6d54abed686387aeec232793f7598a"/>
</rt>
</rrf>
</p>
</c>
</cr>
<cr namespace="std" access="none" depth="1" kind="struct" name="char_traits" id="dc6a030260fdce02a4552ddbd0ff2ec9_bf3447e13ccfc57e5fa847f5d78e7639" file="3" linestart="260" lineend="263">
<base access="public">
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_0e14667e7fa909cae787013e4a665cda"/>
<template_arguments>
<ttp/>
<bt name="long"/>
</template_arguments>
</tss>
</base>
</cr>
<cts Spec="&lt;char&gt;" namespace="std" access="none" depth="0" pod="true" kind="struct" name="char_traits" id="dc6a030260fdce02a4552ddbd0ff2ec9_76e43d9fa50c2ce16dafa9452550a098" file="3" linestart="504" lineend="607"/>
<cr namespace="std" access="none" kind="class" name="basic_ostream" id="dc6a030260fdce02a4552ddbd0ff2ec9_7df99f34c778205aaa2e1759bec30243" file="3" linestart="630" lineend="630"/>
<tm namespace="std" access="none" depth="3" kind="class" name="basic_ostream" id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243" file="4" linestart="38" lineend="624" previous="dc6a030260fdce02a4552ddbd0ff2ec9_7df99f34c778205aaa2e1759bec30243">
<template_parameters>
<ttp name="_Elem" id="4ca9ed490f2174b025fcd4586581c15c_16f2e94b2b51d2f5dff02392fae903e6" depth="" index="" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="4ca9ed490f2174b025fcd4586581c15c_e2d9f5b99956b4f9c1c67b1b3209c8f9" depth="" index="" proto="type-parameter-0-1"/>
</template_parameters>
<cr namespace="std" access="none" depth="3" kind="class" name="basic_ostream" id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243" file="4" linestart="40" lineend="624" previous="dc6a030260fdce02a4552ddbd0ff2ec9_7df99f34c778205aaa2e1759bec30243">
<base access="public">
<tss>
<templatebase id="479c8965dd9ce6b5b8bbb46e4f52b5bc_0973aa6d290bf2c44e86c2f58971d880"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</base>
<cr access="public" kind="class" name="basic_ostream" id="4ca9ed490f2174b025fcd4586581c15c_5fbde4af169bb278d3e041271eb8fcd4" file="4" linestart="40" lineend="40"/>
<m name="operator&lt;&lt;" id="4ca9ed490f2174b025fcd4586581c15c_9edd3f37c6ea7c68d416a2808aad0962" file="4" linestart="316" lineend="334" operator="true" access="public" hasbody="true" isdef="true">
<fpt proto="_Myt &amp;">
<lrf>
<Tdef>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</lrf>
</fpt>
<p name="_Val" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
</p>
</m>
</cr>
</tm>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="String" id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab" file="5" linestart="81" lineend="312" previous="0c2fb77eb4696cd7e7faa021a7cafdaf_29162408a07bf0ba0270baefa060f9ab">
<m name="c_str" id="062315ef9bdab19c3cabee16a5b6d183_e758dca70b3e639bd69cdff32808e0ba" file="5" linestart="275" lineend="275" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="Message" id="d6da877cd43d9ea62976e055cbb7a3f4_a57271b22cdb2fdb3d50588243bf5562" file="6" linestart="82" lineend="221" previous="361592d094a324447c0b12d8c282c7d5_a57271b22cdb2fdb3d50588243bf5562">
<c name="Message" id="d6da877cd43d9ea62976e055cbb7a3f4_21a3d36d55284f1d8751ec8cddd8c404" file="6" linestart="94" lineend="98" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<initlist id="d6da877cd43d9ea62976e055cbb7a3f4_b337e99236191cea06ced5fb66037052"/>
</c>
</cr>
<e parent="562ee964b610e766d302b8dfed46fd41_5f4fb82d9196d416897f8942199b65f3" access="public" name="Type" id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1" file="7" linestart="51" lineend="55" fixed="true">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
<ec name="kNonFatalFailure" id="562ee964b610e766d302b8dfed46fd41_383aae76b62cf18ba08225968ae6e7a3" file="7" linestart="53" lineend="53">
<et>
<e id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1"/>
</et>
</ec>
</e>
<cr namespace="testing" access="none" depth="0" kind="class" name="AssertionResult" id="0dc4cd8d4d61c13ddce2ee0effc89eca_1b0b5edb5a536c8577b46f6e0d5d791d" file="8" linestart="265" lineend="321" previous="361592d094a324447c0b12d8c282c7d5_1b0b5edb5a536c8577b46f6e0d5d791d">
<c name="AssertionResult" id="0dc4cd8d4d61c13ddce2ee0effc89eca_90376d02aab3f76734cce9b29267f2af" file="8" linestart="269" lineend="269" copyconst="true" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="other" proto="const testing::AssertionResult &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_1b0b5edb5a536c8577b46f6e0d5d791d"/>
</rt>
</QualType>
</lrf>
</p>
</c>
<c name="AssertionResult" id="0dc4cd8d4d61c13ddce2ee0effc89eca_fee14873f9723f27fcfae57f274d270a" file="8" linestart="271" lineend="271" explicit="true" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="success" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
<initlist id="0dc4cd8d4d61c13ddce2ee0effc89eca_8990cdf704a69c8c0203b7ece72cad83"/>
</c>
<cv name="operator bool" id="0dc4cd8d4d61c13ddce2ee0effc89eca_c2f20ab10b1a1c248f08973b7014d633" file="8" linestart="274" lineend="274" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</cv>
<m name="failure_message" id="0dc4cd8d4d61c13ddce2ee0effc89eca_50b6fa066d3e0d41ee32ad34528c8103" file="8" linestart="288" lineend="288" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="Test" id="0dc4cd8d4d61c13ddce2ee0effc89eca_964ac3d325bf97cf954384b45d20b6e8" file="8" linestart="356" lineend="463" previous="0dc4cd8d4d61c13ddce2ee0effc89eca_964ac3d325bf97cf954384b45d20b6e8">
<m name="SetUpTestCase" id="0dc4cd8d4d61c13ddce2ee0effc89eca_9a9dc2bca30077fcc6a89530f92e1339" file="8" linestart="374" lineend="374" access="public" storage="static" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="TearDownTestCase" id="0dc4cd8d4d61c13ddce2ee0effc89eca_d2e5bc6dcdf9b44bb09113afda19cad7" file="8" linestart="382" lineend="382" access="public" storage="static" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<c name="Test" id="0dc4cd8d4d61c13ddce2ee0effc89eca_84d92362fbd4a41dfcdd762261a24cf5" file="8" linestart="411" lineend="411" access="protected">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="TestInfo" id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e" file="8" linestart="625" lineend="735" previous="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
<tm namespace="testing.internal" access="none" depth="0" pod="true" kind="class" name="EqHelper" id="0dc4cd8d4d61c13ddce2ee0effc89eca_350bece42c7c2286ac893ed2f9905d9f" file="8" linestart="1346" lineend="1372">
<template_parameters/>
<cr namespace="testing.internal" access="none" depth="0" pod="true" kind="class" name="EqHelper" id="0dc4cd8d4d61c13ddce2ee0effc89eca_9f03c6b4788c855604a1b39f6bd8c43f" file="8" linestart="1347" lineend="1372">
<cr access="public" kind="class" name="EqHelper" id="0dc4cd8d4d61c13ddce2ee0effc89eca_07febb784a13e0e5d35719b4531e86a5" file="8" linestart="1347" lineend="1347"/>
<ft name="Compare" id="0dc4cd8d4d61c13ddce2ee0effc89eca_54323f0a38144261d59641f516370cec" file="8" linestart="1350" lineend="1357">
<template_parameters>
<ttp name="T1" id="0dc4cd8d4d61c13ddce2ee0effc89eca_81567f84e62214361ffb26585bf6df11" depth="" index="" proto="type-parameter-1-0"/>
<ttp name="T2" id="0dc4cd8d4d61c13ddce2ee0effc89eca_2230f6b110d39b1dbbe144486c06d097" depth="" index="" proto="type-parameter-1-1"/>
</template_parameters>
<m name="Compare" id="0dc4cd8d4d61c13ddce2ee0effc89eca_032d369924e43a9a8eb727d96d7cd8b0" file="8" linestart="1351" lineend="1357" access="public" storage="static" hasbody="true" isdef="true">
<fpt proto="testing::AssertionResult">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_1b0b5edb5a536c8577b46f6e0d5d791d"/>
</rt>
</fpt>
<p name="expected_expression" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="actual_expression" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="expected" proto="const T1 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="actual" proto="const T2 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</m>
</ft>
</cr>
</tm>
<cts Spec="&lt;true&gt;" namespace="testing.internal" access="none" depth="0" pod="true" kind="class" name="EqHelper" id="0dc4cd8d4d61c13ddce2ee0effc89eca_4d7f03a8973ce1f7829c35839e1377ee" file="8" linestart="1376" lineend="1417">
<ft name="Compare" id="0dc4cd8d4d61c13ddce2ee0effc89eca_45553afc752455fd11ef5236e49535ce" file="8" linestart="1383" lineend="1397">
<template_parameters>
<ttp name="T1" id="0dc4cd8d4d61c13ddce2ee0effc89eca_e3d6e2b892bcd3be04a4bc206004c805" depth="" index="" proto="type-parameter-0-0"/>
<ttp name="T2" id="0dc4cd8d4d61c13ddce2ee0effc89eca_719b38c802ab33d64cd777f448b1ca7c" depth="" index="" proto="type-parameter-0-1"/>
</template_parameters>
</ft>
</cts>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="AssertHelper" id="0dc4cd8d4d61c13ddce2ee0effc89eca_7260371f7d6759cab9d4e4b45f795755" file="8" linestart="1594" lineend="1631" previous="0dc4cd8d4d61c13ddce2ee0effc89eca_7260371f7d6759cab9d4e4b45f795755">
<c name="AssertHelper" id="0dc4cd8d4d61c13ddce2ee0effc89eca_5f3bae04f063d84394fe9d50198f2c6a" file="8" linestart="1597" lineend="1600" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="type" proto="TestPartResult::Type" isLiteral="true" access2="none">
<ety>
<et>
<e id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1"/>
</et>
</ety>
</p>
<p name="file" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="line" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="message" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</c>
<m name="operator=" id="0dc4cd8d4d61c13ddce2ee0effc89eca_7c7803b0e3e57d066468d0bec8cde703" file="8" linestart="1605" lineend="1605" operator="true" access="public">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="message" proto="const testing::Message &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="d6da877cd43d9ea62976e055cbb7a3f4_a57271b22cdb2fdb3d50588243bf5562"/>
</rt>
</QualType>
</lrf>
</p>
</m>
</cr>
<f namespace="std" name="operator&lt;&lt;" id="4ca9ed490f2174b025fcd4586581c15c_a8b001da139eef9b7b8dd07e8c06f59d" file="4" linestart="783" lineend="828" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="basic_ostream&lt;char, _Traits&gt; &amp;">
<lrf>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<bt name="char"/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</fpt>
<p name="_Ostr" proto="basic_ostream&lt;char, _Traits&gt; &amp;" isRef="true" access2="none">
<lrf>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<bt name="char"/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</p>
<p name="_Val" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<ft name="operator&lt;&lt;" id="4ca9ed490f2174b025fcd4586581c15c_3298dfe44ddb6b69da98967bbc11dbef" file="4" linestart="783" lineend="828">
<template_parameters>
<ttp name="_Traits" id="4ca9ed490f2174b025fcd4586581c15c_29653cbbe518513f057baf83aeea343a" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="std" name="operator&lt;&lt;" id="4ca9ed490f2174b025fcd4586581c15c_a8b001da139eef9b7b8dd07e8c06f59d" file="4" linestart="783" lineend="828" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="basic_ostream&lt;char, _Traits&gt; &amp;">
<lrf>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<bt name="char"/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</fpt>
<p name="_Ostr" proto="basic_ostream&lt;char, _Traits&gt; &amp;" isRef="true" access2="none">
<lrf>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<bt name="char"/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</p>
<p name="_Val" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
</ft>
<f namespace="testing.internal" name="GetBoolAssertionFailureMessage" id="361592d094a324447c0b12d8c282c7d5_7cde1b8033a9720b7ea4fb7d1438b38c" file="9" linestart="310" lineend="314" access="none">
<fpt proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fpt>
<p name="assertion_result" proto="const testing::AssertionResult &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_1b0b5edb5a536c8577b46f6e0d5d791d"/>
</rt>
</QualType>
</lrf>
</p>
<p name="expression_text" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="actual_predicate_value" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="expected_predicate_value" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f namespace="testing.internal" name="GetTestTypeId" id="361592d094a324447c0b12d8c282c7d5_e8ecc4c7ff1c3d40cce55780474106a4" file="9" linestart="534" lineend="534" access="none">
<fpt proto="TypeId">
<Tdef>
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</Tdef>
</fpt>
</f>
<f namespace="testing.internal" name="MakeAndRegisterTestInfo" id="361592d094a324447c0b12d8c282c7d5_c94e15073fa33c9f81254abdf66926e3" file="9" linestart="595" lineend="602" access="none">
<fpt proto="testing::TestInfo *">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
</rt>
</pt>
</fpt>
<p name="test_case_name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="type_param" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value_param" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="fixture_class_id" proto="TypeId" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</Tdef>
</p>
<p name="set_up_tc" proto="SetUpTestCaseFunc" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<Paren/>
</pt>
</Tdef>
</p>
<p name="tear_down_tc" proto="TearDownTestCaseFunc" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<Paren/>
</pt>
</Tdef>
</p>
<p name="factory" proto="testing::internal::TestFactoryBase *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="361592d094a324447c0b12d8c282c7d5_ebebd0ac8a5c6834880cc16f32b5b90a"/>
</rt>
</pt>
</p>
</f>
</Externals>
