<Externals>
<cr namespace="llvm" access="none" depth="0" kind="class" name="raw_ostream" id="9e05b9b4de196b39d65ee2f40ed8c864_a0739cdc4bf02ac0124031b03f4267a6" file="2" linestart="36" lineend="307">
<e parent="9e05b9b4de196b39d65ee2f40ed8c864_a0739cdc4bf02ac0124031b03f4267a6" access="private" name="BufferKind" id="9e05b9b4de196b39d65ee2f40ed8c864_d14135abd14074ad8990bfb6eb9264fa" file="2" linestart="61" lineend="65" fixed="true">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
<e parent="9e05b9b4de196b39d65ee2f40ed8c864_a0739cdc4bf02ac0124031b03f4267a6" access="public" name="Colors" id="9e05b9b4de196b39d65ee2f40ed8c864_da75c9a3a04c1a30d8d4a49cb44eb31a" file="2" linestart="69" lineend="79" fixed="true">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
<m name="tell" id="9e05b9b4de196b39d65ee2f40ed8c864_1513540c5a5854b514ed07b1f5dcd2a1" file="2" linestart="90" lineend="90" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="uint64_t">
<Tdef>
<bt name="unsigned long long"/>
</Tdef>
</fpt>
</m>
<m name="write" id="9e05b9b4de196b39d65ee2f40ed8c864_9aea9c1028a900926d3e6067ac6f4e6e" file="2" linestart="208" lineend="208" access="public">
<fpt proto="llvm::raw_ostream &amp;">
<lrf>
<rt>
<cr id="9e05b9b4de196b39d65ee2f40ed8c864_a0739cdc4bf02ac0124031b03f4267a6"/>
</rt>
</lrf>
</fpt>
<p name="Ptr" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="Size" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</p>
</m>
</cr>
<cr namespace="llvm" access="none" depth="1" kind="class" name="raw_svector_ostream" id="9e05b9b4de196b39d65ee2f40ed8c864_7f8264d6735487d69d5d4f9914eb9166" file="2" linestart="455" lineend="480">
<base access="public">
<rt>
<cr id="9e05b9b4de196b39d65ee2f40ed8c864_a0739cdc4bf02ac0124031b03f4267a6"/>
</rt>
</base>
<c name="raw_svector_ostream" id="9e05b9b4de196b39d65ee2f40ed8c864_798c2acedf1b0e630cc77fb3b41c8aaf" file="2" linestart="469" lineend="469" explicit="true" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="O" proto="SmallVectorImpl&lt;char&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<tss>
<templatebase id="9e05b9b4de196b39d65ee2f40ed8c864_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</lrf>
</p>
</c>
</cr>
<cr namespace="llvm" access="none" depth="1" kind="class" name="formatted_raw_ostream" id="938c9a8a22d0a522be534d42200ddd9c_f4275ebf583e2aed78ea052205875a7e" file="3" linestart="27" lineend="165">
<base access="public">
<rt>
<cr id="9e05b9b4de196b39d65ee2f40ed8c864_a0739cdc4bf02ac0124031b03f4267a6"/>
</rt>
</base>
<c name="formatted_raw_ostream" id="938c9a8a22d0a522be534d42200ddd9c_52511b28a15dad2cd22ea9245891b6b6" file="3" linestart="87" lineend="90" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="Stream" proto="llvm::raw_ostream &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="9e05b9b4de196b39d65ee2f40ed8c864_a0739cdc4bf02ac0124031b03f4267a6"/>
</rt>
</lrf>
</p>
<p name="Delete" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
</p>
<initlist id="938c9a8a22d0a522be534d42200ddd9c_a1bf13fb273a1e11fa1a9ceeed31b6e0"/>
<initlist id="938c9a8a22d0a522be534d42200ddd9c_4da004a50d11a23fd9d2e7ce1332ef7f"/>
<initlist id="938c9a8a22d0a522be534d42200ddd9c_1719183ec7ce22a27d2e8727f3ea2839"/>
</c>
</cr>
<tm namespace="llvm" access="none" depth="5" kind="class" name="SmallString" id="6ce41074e417303b1650ed17224da591_f75a6071f36c1e2b153f0fa5700aa6e6" file="4" linestart="24" lineend="293">
<template_parameters/>
<cr namespace="llvm" access="none" depth="5" kind="class" name="SmallString" id="6ce41074e417303b1650ed17224da591_58ace65d1e1b91adc642e9d53587ebbd" file="4" linestart="25" lineend="293">
<base access="public">
<tss>
<templatebase id="cc7c47255f6621964b49dbeb63bbaba4_a9311a36de5bf268b7e067c959560d85"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</base>
<cr access="public" kind="class" name="SmallString" id="6ce41074e417303b1650ed17224da591_2e92de08a5114c439b3b03957df3f91d" file="4" linestart="25" lineend="25"/>
<c name="SmallString&lt;InternalLen&gt;" id="6ce41074e417303b1650ed17224da591_c3ceef8bf7fc3feda5f3891f9db5a971" file="4" linestart="28" lineend="28" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
</tm>
<cr namespace="testing" access="none" depth="0" kind="class" name="Message" id="d6da877cd43d9ea62976e055cbb7a3f4_a57271b22cdb2fdb3d50588243bf5562" file="5" linestart="82" lineend="221" previous="361592d094a324447c0b12d8c282c7d5_a57271b22cdb2fdb3d50588243bf5562">
<c name="Message" id="d6da877cd43d9ea62976e055cbb7a3f4_21a3d36d55284f1d8751ec8cddd8c404" file="5" linestart="94" lineend="98" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<initlist id="d6da877cd43d9ea62976e055cbb7a3f4_b337e99236191cea06ced5fb66037052"/>
</c>
</cr>
<e parent="562ee964b610e766d302b8dfed46fd41_5f4fb82d9196d416897f8942199b65f3" access="public" name="Type" id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1" file="6" linestart="51" lineend="55" fixed="true">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
<ec name="kNonFatalFailure" id="562ee964b610e766d302b8dfed46fd41_383aae76b62cf18ba08225968ae6e7a3" file="6" linestart="53" lineend="53">
<et>
<e id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1"/>
</et>
</ec>
</e>
<cr namespace="testing" access="none" depth="0" kind="class" name="AssertionResult" id="0dc4cd8d4d61c13ddce2ee0effc89eca_1b0b5edb5a536c8577b46f6e0d5d791d" file="7" linestart="265" lineend="321" previous="361592d094a324447c0b12d8c282c7d5_1b0b5edb5a536c8577b46f6e0d5d791d">
<c name="AssertionResult" id="0dc4cd8d4d61c13ddce2ee0effc89eca_90376d02aab3f76734cce9b29267f2af" file="7" linestart="269" lineend="269" copyconst="true" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="other" proto="const testing::AssertionResult &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_1b0b5edb5a536c8577b46f6e0d5d791d"/>
</rt>
</QualType>
</lrf>
</p>
</c>
<cv name="operator bool" id="0dc4cd8d4d61c13ddce2ee0effc89eca_c2f20ab10b1a1c248f08973b7014d633" file="7" linestart="274" lineend="274" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</cv>
<m name="failure_message" id="0dc4cd8d4d61c13ddce2ee0effc89eca_50b6fa066d3e0d41ee32ad34528c8103" file="7" linestart="288" lineend="288" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="Test" id="0dc4cd8d4d61c13ddce2ee0effc89eca_964ac3d325bf97cf954384b45d20b6e8" file="7" linestart="356" lineend="463" previous="0dc4cd8d4d61c13ddce2ee0effc89eca_964ac3d325bf97cf954384b45d20b6e8">
<m name="SetUpTestCase" id="0dc4cd8d4d61c13ddce2ee0effc89eca_9a9dc2bca30077fcc6a89530f92e1339" file="7" linestart="374" lineend="374" access="public" storage="static" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="TearDownTestCase" id="0dc4cd8d4d61c13ddce2ee0effc89eca_d2e5bc6dcdf9b44bb09113afda19cad7" file="7" linestart="382" lineend="382" access="public" storage="static" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<c name="Test" id="0dc4cd8d4d61c13ddce2ee0effc89eca_84d92362fbd4a41dfcdd762261a24cf5" file="7" linestart="411" lineend="411" access="protected">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="TestInfo" id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e" file="7" linestart="625" lineend="735" previous="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
<tm namespace="testing.internal" access="none" depth="0" pod="true" kind="class" name="EqHelper" id="0dc4cd8d4d61c13ddce2ee0effc89eca_350bece42c7c2286ac893ed2f9905d9f" file="7" linestart="1346" lineend="1372">
<template_parameters/>
<cr namespace="testing.internal" access="none" depth="0" pod="true" kind="class" name="EqHelper" id="0dc4cd8d4d61c13ddce2ee0effc89eca_9f03c6b4788c855604a1b39f6bd8c43f" file="7" linestart="1347" lineend="1372">
<cr access="public" kind="class" name="EqHelper" id="0dc4cd8d4d61c13ddce2ee0effc89eca_07febb784a13e0e5d35719b4531e86a5" file="7" linestart="1347" lineend="1347"/>
<ft name="Compare" id="0dc4cd8d4d61c13ddce2ee0effc89eca_54323f0a38144261d59641f516370cec" file="7" linestart="1350" lineend="1357">
<template_parameters>
<ttp name="T1" id="0dc4cd8d4d61c13ddce2ee0effc89eca_81567f84e62214361ffb26585bf6df11" depth="" index="" proto="type-parameter-1-0"/>
<ttp name="T2" id="0dc4cd8d4d61c13ddce2ee0effc89eca_2230f6b110d39b1dbbe144486c06d097" depth="" index="" proto="type-parameter-1-1"/>
</template_parameters>
<m name="Compare" id="0dc4cd8d4d61c13ddce2ee0effc89eca_032d369924e43a9a8eb727d96d7cd8b0" file="7" linestart="1351" lineend="1357" access="public" storage="static" hasbody="true" isdef="true">
<fpt proto="testing::AssertionResult">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_1b0b5edb5a536c8577b46f6e0d5d791d"/>
</rt>
</fpt>
<p name="expected_expression" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="actual_expression" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="expected" proto="const T1 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="actual" proto="const T2 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</m>
</ft>
</cr>
</tm>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="AssertHelper" id="0dc4cd8d4d61c13ddce2ee0effc89eca_7260371f7d6759cab9d4e4b45f795755" file="7" linestart="1594" lineend="1631" previous="0dc4cd8d4d61c13ddce2ee0effc89eca_7260371f7d6759cab9d4e4b45f795755">
<c name="AssertHelper" id="0dc4cd8d4d61c13ddce2ee0effc89eca_5f3bae04f063d84394fe9d50198f2c6a" file="7" linestart="1597" lineend="1600" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="type" proto="TestPartResult::Type" isLiteral="true" access2="none">
<ety>
<et>
<e id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1"/>
</et>
</ety>
</p>
<p name="file" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="line" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="message" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</c>
<m name="operator=" id="0dc4cd8d4d61c13ddce2ee0effc89eca_7c7803b0e3e57d066468d0bec8cde703" file="7" linestart="1605" lineend="1605" operator="true" access="public">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="message" proto="const testing::Message &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="d6da877cd43d9ea62976e055cbb7a3f4_a57271b22cdb2fdb3d50588243bf5562"/>
</rt>
</QualType>
</lrf>
</p>
</m>
</cr>
<f namespace="testing.internal" name="GetTestTypeId" id="361592d094a324447c0b12d8c282c7d5_e8ecc4c7ff1c3d40cce55780474106a4" file="8" linestart="534" lineend="534" access="none">
<fpt proto="TypeId">
<Tdef>
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</Tdef>
</fpt>
</f>
<f namespace="testing.internal" name="MakeAndRegisterTestInfo" id="361592d094a324447c0b12d8c282c7d5_c94e15073fa33c9f81254abdf66926e3" file="8" linestart="595" lineend="602" access="none">
<fpt proto="testing::TestInfo *">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
</rt>
</pt>
</fpt>
<p name="test_case_name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="type_param" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value_param" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="fixture_class_id" proto="TypeId" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</Tdef>
</p>
<p name="set_up_tc" proto="SetUpTestCaseFunc" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<Paren/>
</pt>
</Tdef>
</p>
<p name="tear_down_tc" proto="TearDownTestCaseFunc" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<Paren/>
</pt>
</Tdef>
</p>
<p name="factory" proto="testing::internal::TestFactoryBase *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="361592d094a324447c0b12d8c282c7d5_ebebd0ac8a5c6834880cc16f32b5b90a"/>
</rt>
</pt>
</p>
</f>
</Externals>
