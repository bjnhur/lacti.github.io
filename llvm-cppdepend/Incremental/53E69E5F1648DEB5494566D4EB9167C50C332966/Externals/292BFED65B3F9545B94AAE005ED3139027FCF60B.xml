<Externals>
<cr access="none" depth="0" pod="true" kind="struct" name="_stat64i32" id="cdea8aa8302602a6a955aadc09f445e4_0b7cf359f889fb602d2f4fb1e94bb67f" file="9" linestart="547" lineend="559">
<c name="_stat64i32" id="cdea8aa8302602a6a955aadc09f445e4_67f7c6c1c5cfea16291c57d3378dcef0" file="9" linestart="547" lineend="547" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr access="none" depth="0" pod="true" kind="struct" name="_iobuf" id="cdea8aa8302602a6a955aadc09f445e4_9b75e14604360f7936837e5997e12eba" file="9" linestart="55" lineend="64"/>
<tm namespace="std" access="none" depth="1" kind="struct" name="less" id="53bf6af53c2533d21a39fbab7aab80ae_00d97eaa19515dc38fda9027b027e0f6" file="10" linestart="187" lineend="195">
<template_parameters>
<ttp name="_Ty" id="53bf6af53c2533d21a39fbab7aab80ae_7cd06b3c9802bc652e15b1aead7a5dd1" depth="" index="" proto="type-parameter-0-0">
<bt name="void"/>
</ttp>
</template_parameters>
<cr namespace="std" access="none" depth="1" kind="struct" name="less" id="53bf6af53c2533d21a39fbab7aab80ae_00d97eaa19515dc38fda9027b027e0f6" file="10" linestart="188" lineend="195">
<base access="public">
<tss>
<templatebase id="53bf6af53c2533d21a39fbab7aab80ae_15e245fd465deba38bd797dda9715209"/>
<template_arguments>
<ttp/>
<ttp/>
<bt name="bool"/>
</template_arguments>
</tss>
</base>
<cr access="public" kind="struct" name="less" id="53bf6af53c2533d21a39fbab7aab80ae_c827f76c4302f45975615ca0a6098fb7" file="10" linestart="188" lineend="188"/>
</cr>
</tm>
<cts Spec="&lt;wchar_t&gt;" namespace="std" access="none" depth="0" pod="true" kind="struct" name="char_traits" id="dc6a030260fdce02a4552ddbd0ff2ec9_7d637fda5b9c2af11eaf2c7631b154c8" file="11" linestart="286" lineend="390"/>
<cr namespace="std" access="none" depth="1" kind="struct" name="char_traits" id="dc6a030260fdce02a4552ddbd0ff2ec9_bf3447e13ccfc57e5fa847f5d78e7639" file="11" linestart="260" lineend="263">
<base access="public">
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_0e14667e7fa909cae787013e4a665cda"/>
<template_arguments>
<ttp/>
<bt name="long"/>
</template_arguments>
</tss>
</base>
</cr>
<cts Spec="&lt;char&gt;" namespace="std" access="none" depth="0" pod="true" kind="struct" name="char_traits" id="dc6a030260fdce02a4552ddbd0ff2ec9_76e43d9fa50c2ce16dafa9452550a098" file="11" linestart="504" lineend="607"/>
<tm namespace="std" access="none" kind="class" name="allocator" id="dc6a030260fdce02a4552ddbd0ff2ec9_07566aa809aee0bdf1c0fac16e19fa85" file="11" linestart="610" lineend="611">
<template_parameters>
<ttp name="_Ty" id="dc6a030260fdce02a4552ddbd0ff2ec9_5dabb8add95e1f50264087371ebe1436" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" kind="class" name="allocator" id="dc6a030260fdce02a4552ddbd0ff2ec9_07566aa809aee0bdf1c0fac16e19fa85" file="11" linestart="611" lineend="611"/>
</tm>
<cr namespace="std" access="none" kind="class" name="basic_ostream" id="dc6a030260fdce02a4552ddbd0ff2ec9_7df99f34c778205aaa2e1759bec30243" file="11" linestart="630" lineend="630"/>
<cr namespace="std" access="none" kind="class" name="basic_stringstream" id="dc6a030260fdce02a4552ddbd0ff2ec9_aba35b20ea03dd03e503380b9186c293" file="11" linestart="649" lineend="649"/>
<tm namespace="std" access="none" depth="1" kind="class" name="reverse_iterator" id="41b1f1ab5ff3e4379a0c88a111c98396_e7c12c4c55aa410403377716c39045f9" file="12" linestart="1012" lineend="1111">
<template_parameters>
<ttp name="_RanIt" id="41b1f1ab5ff3e4379a0c88a111c98396_6864377422ba87b473ed4b328096a93e" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" depth="1" kind="class" name="reverse_iterator" id="41b1f1ab5ff3e4379a0c88a111c98396_e7c12c4c55aa410403377716c39045f9" file="12" linestart="1013" lineend="1111">
<base access="public">
<tss>
<templatebase id="41b1f1ab5ff3e4379a0c88a111c98396_30e5cb142aded701f5e08baeb9144af3"/>
<template_arguments>
<ttp/>
<tss>
<templatebase id="41b1f1ab5ff3e4379a0c88a111c98396_8e1e21739821c44b37903676a5898bf6"/>
<template_arguments>
<DependentName/>
<DependentName/>
<DependentName/>
<DependentName/>
<DependentName/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</base>
<cr access="public" kind="class" name="reverse_iterator" id="41b1f1ab5ff3e4379a0c88a111c98396_8c32403ca14f89351a41f9ef3072148b" file="12" linestart="1013" lineend="1013"/>
</cr>
</tm>
<tm namespace="std" access="none" depth="0" pod="true" kind="struct" name="_Simple_types" id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_d16a5f6f5bc0b20f10361aff0d9f12b0" file="13" linestart="116" lineend="126">
<template_parameters>
<ttp name="_Value_type" id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_626879621e24d9f9efce904904e1301a" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" depth="0" pod="true" kind="struct" name="_Simple_types" id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_d16a5f6f5bc0b20f10361aff0d9f12b0" file="13" linestart="117" lineend="126">
<cr access="public" kind="struct" name="_Simple_types" id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_38ff670ba6ed0695cb920edab05f4ac5" file="13" linestart="117" lineend="117"/>
</cr>
</tm>
<tm namespace="std" access="none" depth="1" kind="class" name="allocator" id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_07566aa809aee0bdf1c0fac16e19fa85" file="13" linestart="506" lineend="614" previous="dc6a030260fdce02a4552ddbd0ff2ec9_07566aa809aee0bdf1c0fac16e19fa85">
<template_parameters>
<ttp name="_Ty" id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_5dabb8add95e1f50264087371ebe1436" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" depth="1" kind="class" name="allocator" id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_07566aa809aee0bdf1c0fac16e19fa85" file="13" linestart="507" lineend="614" previous="dc6a030260fdce02a4552ddbd0ff2ec9_07566aa809aee0bdf1c0fac16e19fa85">
<base access="public">
<tss>
<templatebase id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_88cdcaf24b75beed0de34443253840d2"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</base>
<cr access="public" kind="class" name="allocator" id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_634dfb1dd5db9fd3e76cd8814f018ced" file="13" linestart="507" lineend="507"/>
<tm parent="e709ea4c3e9ceb4cc0600c1bf8d29ceb_07566aa809aee0bdf1c0fac16e19fa85" access="none" depth="0" pod="true" kind="struct" name="rebind" id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_38c2be5a786a253bb82af3c54854f921" file="13" linestart="536" lineend="540">
<template_parameters>
<ttp name="_Other" id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_5cb4d687f09ee7cb5b3575605cef20a8" depth="" index="" proto="type-parameter-1-0"/>
</template_parameters>
</tm>
</cr>
</tm>
<tm namespace="std" access="none" depth="1" kind="class" name="_String_const_iterator" id="f2e96efeaba09e7d8921632d675962d4_7dbd06bb73142ffb2d0cd210ff854631" file="14" linestart="28" lineend="269">
<template_parameters>
<ttp name="_Mystr" id="f2e96efeaba09e7d8921632d675962d4_fd571114b7cb06575fb584324a4fa04f" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" depth="1" kind="class" name="_String_const_iterator" id="f2e96efeaba09e7d8921632d675962d4_7dbd06bb73142ffb2d0cd210ff854631" file="14" linestart="29" lineend="269">
<base access="public">
<tss>
<templatebase id="41b1f1ab5ff3e4379a0c88a111c98396_c0b0c28e8e12e6f7fc9930d4f8eeafe3"/>
<template_arguments>
<rt>
<cr id="41b1f1ab5ff3e4379a0c88a111c98396_5fc82960e426b897927bac34a5d33096"/>
</rt>
<DependentName/>
<DependentName/>
<DependentName/>
<DependentName/>
<Tdef>
<rt>
<cr id="41b1f1ab5ff3e4379a0c88a111c98396_364abe11913ab4404e30d1d7b02feafd"/>
</rt>
</Tdef>
</template_arguments>
</tss>
</base>
<cr access="public" kind="class" name="_String_const_iterator" id="f2e96efeaba09e7d8921632d675962d4_623cba3fa343830b54a36c7d2aa43b91" file="14" linestart="29" lineend="29"/>
<m name="operator*" id="f2e96efeaba09e7d8921632d675962d4_1e11e0213bf68323da5a4cbd289202d3" file="14" linestart="70" lineend="94" operator="true" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="reference">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
</m>
<m name="operator++" id="f2e96efeaba09e7d8921632d675962d4_2fb8beff18f6d3c3452fe23970e70b14" file="14" linestart="101" lineend="122" operator="true" access="public" hasbody="true" isdef="true">
<fpt proto="_Myiter &amp;">
<lrf>
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_7dbd06bb73142ffb2d0cd210ff854631"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</lrf>
</fpt>
</m>
<m name="operator!=" id="f2e96efeaba09e7d8921632d675962d4_7f8d810a1dc1a97ac65e30b15c4ec849" file="14" linestart="218" lineend="221" operator="true" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="_Right" proto="const _Myiter &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_7dbd06bb73142ffb2d0cd210ff854631"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</QualType>
</lrf>
</p>
</m>
</cr>
</tm>
<tm namespace="std" access="none" depth="1" kind="class" name="_String_val" id="f2e96efeaba09e7d8921632d675962d4_17eb14aacaf78622764ac39ceb8fffa4" file="14" linestart="474" lineend="532">
<template_parameters>
<ttp name="_Val_types" id="f2e96efeaba09e7d8921632d675962d4_a041ad0f127d67518f8295514ea3214b" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" depth="1" kind="class" name="_String_val" id="f2e96efeaba09e7d8921632d675962d4_17eb14aacaf78622764ac39ceb8fffa4" file="14" linestart="475" lineend="532">
<base access="public">
<Tdef>
<rt>
<cr id="41b1f1ab5ff3e4379a0c88a111c98396_ce449a57a371fbc057aa1719d4872f13"/>
</rt>
</Tdef>
</base>
<cr access="public" kind="class" name="_String_val" id="f2e96efeaba09e7d8921632d675962d4_0ce11c39e2d6c5282ba5808725f0ef0c" file="14" linestart="475" lineend="475"/>
<e parent="f2e96efeaba09e7d8921632d675962d4_17eb14aacaf78622764ac39ceb8fffa4" access="public" name="" id="f2e96efeaba09e7d8921632d675962d4_be240353715551983f443009ec88cb0e" file="14" linestart="498" lineend="501" fixed="true">
<promotion_type>
<bt name="&lt;dependent type&gt;"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
<e parent="f2e96efeaba09e7d8921632d675962d4_17eb14aacaf78622764ac39ceb8fffa4" access="public" name="" id="f2e96efeaba09e7d8921632d675962d4_ec3f0f5b3a6e0dd9599811f2b03487be" file="14" linestart="502" lineend="507" fixed="true">
<promotion_type>
<bt name="&lt;dependent type&gt;"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
</cr>
</tm>
<tm namespace="std" access="none" depth="3" kind="class" name="basic_string" id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb" file="14" linestart="689" lineend="2297" previous="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb">
<template_parameters>
<ttp name="_Elem" id="f2e96efeaba09e7d8921632d675962d4_97d2655bc427b0bca0bf3fd72608091f" depth="" index="" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="f2e96efeaba09e7d8921632d675962d4_88cafbb8af4cbe00477f4d0dc5b6f62c" depth="" index="" proto="type-parameter-0-1"/>
<ttp name="_Alloc" id="f2e96efeaba09e7d8921632d675962d4_636b2981289c18feee5282669fe62e0a" depth="" index="" proto="type-parameter-0-2"/>
</template_parameters>
<cr namespace="std" access="none" depth="3" kind="class" name="basic_string" id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb" file="14" linestart="692" lineend="2297" previous="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb">
<base access="public">
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_fd6b90577893febf1782c3472e44b788"/>
<template_arguments>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_15e8cc19f33496752ccbe61f65b7379c"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</base>
<cr access="public" kind="class" name="basic_string" id="f2e96efeaba09e7d8921632d675962d4_7808f3d3e2ddb7f603f560a243578200" file="14" linestart="692" lineend="692"/>
<c name="basic_string&lt;_Elem, _Traits, _Ax&gt;" id="f2e96efeaba09e7d8921632d675962d4_3053f3db86d2b4d3af8b039438cb09cc" file="14" linestart="719" lineend="727" copyconst="true" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="_Right" proto="const _Myt &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</QualType>
</lrf>
</p>
</c>
<c name="basic_string&lt;_Elem, _Traits, _Ax&gt;" id="f2e96efeaba09e7d8921632d675962d4_b4667fc81edf96e2c011b5e331650a40" file="14" linestart="736" lineend="740" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
<c name="basic_string&lt;_Elem, _Traits, _Ax&gt;" id="f2e96efeaba09e7d8921632d675962d4_27c29e5ae4008e8e02d1117a50805d4f" file="14" linestart="778" lineend="783" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="_Ptr" proto="const _Elem *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
</c>
<c name="basic_string&lt;_Elem, _Traits, _Ax&gt;" id="f2e96efeaba09e7d8921632d675962d4_e3eb16c4c3462a2d9004e988dec04a31" file="14" linestart="885" lineend="890" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
<exception_specifiers nothrow="true"/>
</fpt>
<p name="_Right" proto="_Myt &amp;&amp;" isRef="true" access2="none">
<rrf>
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</rrf>
</p>
</c>
<v name="npos" proto="const size_type" const="true" id="f2e96efeaba09e7d8921632d675962d4_147cfe693e311ecb1386f044c8c79590" file="14" linestart="994" lineend="994" storage="static" access2="public">
<QualType const="true">
<Tdef>
<DependentName/>
</Tdef>
</QualType>
</v>
<m name="operator=" id="f2e96efeaba09e7d8921632d675962d4_b6c2592d20ed546095b7f9ce9bd38aee" file="14" linestart="1012" lineend="1015" operator="true" access="public" hasbody="true" isdef="true">
<fpt proto="_Myt &amp;">
<lrf>
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</lrf>
</fpt>
<p name="_Ptr" proto="const _Elem *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
</m>
<m name="operator+=" id="f2e96efeaba09e7d8921632d675962d4_c15a736d32ca0ee52b268dc2a3026c48" file="14" linestart="1022" lineend="1025" operator="true" access="public" hasbody="true" isdef="true">
<fpt proto="_Myt &amp;">
<lrf>
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</lrf>
</fpt>
<p name="_Right" proto="const _Myt &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</QualType>
</lrf>
</p>
</m>
<m name="operator+=" id="f2e96efeaba09e7d8921632d675962d4_a8612e84f1c574dc3478dc0e33820781" file="14" linestart="1027" lineend="1030" operator="true" access="public" hasbody="true" isdef="true">
<fpt proto="_Myt &amp;">
<lrf>
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</lrf>
</fpt>
<p name="_Ptr" proto="const _Elem *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
</m>
<m name="begin" id="f2e96efeaba09e7d8921632d675962d4_274b08ee77e91cf1884343d2c04b2f06" file="14" linestart="1603" lineend="1606" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const_iterator">
<Tdef>
<DependentName/>
</Tdef>
<exception_specifiers nothrow="true"/>
</fpt>
</m>
<m name="end" id="f2e96efeaba09e7d8921632d675962d4_c578bd9a923e9a009412b07fb342cdc4" file="14" linestart="1613" lineend="1616" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const_iterator">
<Tdef>
<DependentName/>
</Tdef>
<exception_specifiers nothrow="true"/>
</fpt>
</m>
<m name="push_back" id="f2e96efeaba09e7d8921632d675962d4_41a2c1e597db9acf640603ff03416fb4" file="14" linestart="1707" lineend="1710" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="_Ch" proto="_Elem" access2="none">
<ttp/>
</p>
</m>
<m name="c_str" id="f2e96efeaba09e7d8921632d675962d4_65d516408dbbf5d49be55f4917fbb4c6" file="14" linestart="1737" lineend="1740" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const _Elem *">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
<exception_specifiers nothrow="true"/>
</fpt>
</m>
<m name="data" id="f2e96efeaba09e7d8921632d675962d4_2eba7c43ed4260a907655e6df1120d76" file="14" linestart="1742" lineend="1745" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const _Elem *">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
<exception_specifiers nothrow="true"/>
</fpt>
</m>
<m name="length" id="f2e96efeaba09e7d8921632d675962d4_5dbeba0b2815ef6f17bf6bb4100ba234" file="14" linestart="1747" lineend="1750" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="size_type">
<Tdef>
<DependentName/>
</Tdef>
<exception_specifiers nothrow="true"/>
</fpt>
</m>
<m name="size" id="f2e96efeaba09e7d8921632d675962d4_40cb65bbc33cc6086019064141e4d13b" file="14" linestart="1752" lineend="1755" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="size_type">
<Tdef>
<DependentName/>
</Tdef>
<exception_specifiers nothrow="true"/>
</fpt>
</m>
<m name="reserve" id="f2e96efeaba09e7d8921632d675962d4_fe9ca0541b764dcfda81b9530c215b17" file="14" linestart="1781" lineend="1789" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="_Newcap" proto="size_type" init="true" access2="none">
<Tdef>
<DependentName/>
</Tdef>
</p>
</m>
<m name="find" id="f2e96efeaba09e7d8921632d675962d4_7c388fcfce4fb9510f3556ab560f41fc" file="14" linestart="1922" lineend="1925" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="size_type">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
<p name="_Ch" proto="_Elem" access2="none">
<ttp/>
</p>
<p name="_Off" proto="size_type" init="true" access2="none">
<Tdef>
<DependentName/>
</Tdef>
</p>
</m>
<m name="substr" id="f2e96efeaba09e7d8921632d675962d4_c2543d5193db80dfb7ab42dc9dce2707" file="14" linestart="2129" lineend="2132" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="_Myt">
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</fpt>
<p name="_Off" proto="size_type" init="true" access2="none">
<Tdef>
<DependentName/>
</Tdef>
</p>
<p name="_Count" proto="size_type" init="true" access2="none">
<Tdef>
<DependentName/>
</Tdef>
</p>
</m>
</cr>
</tm>
<tm namespace="std" access="none" depth="1" kind="class" name="_Vector_const_iterator" id="78cb3cbcc032150b6a85b2f30813c812_695a37e33887535b74b2309b71bda977" file="15" linestart="21" lineend="259">
<template_parameters>
<ttp name="_Myvec" id="78cb3cbcc032150b6a85b2f30813c812_19c48ee2b44c4294a26032e97c800563" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" depth="1" kind="class" name="_Vector_const_iterator" id="78cb3cbcc032150b6a85b2f30813c812_695a37e33887535b74b2309b71bda977" file="15" linestart="22" lineend="259">
<base access="public">
<tss>
<templatebase id="41b1f1ab5ff3e4379a0c88a111c98396_c0b0c28e8e12e6f7fc9930d4f8eeafe3"/>
<template_arguments>
<rt>
<cr id="41b1f1ab5ff3e4379a0c88a111c98396_5fc82960e426b897927bac34a5d33096"/>
</rt>
<DependentName/>
<DependentName/>
<DependentName/>
<DependentName/>
<Tdef>
<rt>
<cr id="41b1f1ab5ff3e4379a0c88a111c98396_364abe11913ab4404e30d1d7b02feafd"/>
</rt>
</Tdef>
</template_arguments>
</tss>
</base>
<cr access="public" kind="class" name="_Vector_const_iterator" id="78cb3cbcc032150b6a85b2f30813c812_0df71e2c1d0fd179a854cfa818ab7d5a" file="15" linestart="22" lineend="22"/>
<m name="operator*" id="78cb3cbcc032150b6a85b2f30813c812_de5276c9d2499e6417f19db1206a1103" file="15" linestart="64" lineend="87" operator="true" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="reference">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
</m>
<m name="operator==" id="78cb3cbcc032150b6a85b2f30813c812_5869c0062c2a0d51d404b70c83bce205" file="15" linestart="202" lineend="206" operator="true" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="_Right" proto="const _Myiter &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<Tdef>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_695a37e33887535b74b2309b71bda977"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</QualType>
</lrf>
</p>
</m>
<m name="operator!=" id="78cb3cbcc032150b6a85b2f30813c812_25125e062a987bdcc3dcfa86eb960b5b" file="15" linestart="208" lineend="211" operator="true" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="_Right" proto="const _Myiter &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<Tdef>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_695a37e33887535b74b2309b71bda977"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</QualType>
</lrf>
</p>
</m>
</cr>
</tm>
<tm namespace="std" access="none" depth="2" kind="class" name="_Vector_iterator" id="78cb3cbcc032150b6a85b2f30813c812_dba628d08bbaf73e696cb0d4b6e80686" file="15" linestart="286" lineend="390">
<template_parameters>
<ttp name="_Myvec" id="78cb3cbcc032150b6a85b2f30813c812_18acb65bb3c5fb8de0fb206b98054de5" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" depth="2" kind="class" name="_Vector_iterator" id="78cb3cbcc032150b6a85b2f30813c812_dba628d08bbaf73e696cb0d4b6e80686" file="15" linestart="287" lineend="390">
<base access="public">
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_695a37e33887535b74b2309b71bda977"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</base>
<cr access="public" kind="class" name="_Vector_iterator" id="78cb3cbcc032150b6a85b2f30813c812_3d10061ec036575db3efd2ae44b233b6" file="15" linestart="287" lineend="287"/>
<m name="operator-&gt;" id="78cb3cbcc032150b6a85b2f30813c812_ddf377b2b64dd523b35d4da3212a6f8f" file="15" linestart="327" lineend="330" operator="true" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="pointer">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
</m>
<m name="operator+" id="78cb3cbcc032150b6a85b2f30813c812_4a94c637cccf1f8d1ced9623586a48f3" file="15" linestart="364" lineend="368" operator="true" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="_Myiter">
<Tdef>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_dba628d08bbaf73e696cb0d4b6e80686"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</fpt>
<p name="_Off" proto="difference_type" access2="none">
<Tdef>
<DependentName/>
</Tdef>
</p>
</m>
</cr>
</tm>
<tm namespace="std" access="none" depth="1" kind="class" name="_Vector_val" id="78cb3cbcc032150b6a85b2f30813c812_2d19cd24e0e0434835874d345df47fd5" file="15" linestart="462" lineend="490">
<template_parameters>
<ttp name="_Val_types" id="78cb3cbcc032150b6a85b2f30813c812_a14290b47784eb7bfff7ad524aba2af7" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" depth="1" kind="class" name="_Vector_val" id="78cb3cbcc032150b6a85b2f30813c812_2d19cd24e0e0434835874d345df47fd5" file="15" linestart="463" lineend="490">
<base access="public">
<Tdef>
<rt>
<cr id="41b1f1ab5ff3e4379a0c88a111c98396_ce449a57a371fbc057aa1719d4872f13"/>
</rt>
</Tdef>
</base>
<cr access="public" kind="class" name="_Vector_val" id="78cb3cbcc032150b6a85b2f30813c812_d608691dcf25a214a3f098292e72535e" file="15" linestart="463" lineend="463"/>
</cr>
</tm>
<tm namespace="std" access="none" depth="3" kind="class" name="vector" id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b" file="15" linestart="647" lineend="1783">
<template_parameters>
<ttp name="_Ty" id="78cb3cbcc032150b6a85b2f30813c812_4d7373ffb16edf838a9e31b6a15123d0" depth="" index="" proto="type-parameter-0-0"/>
<ttp name="_Alloc" id="78cb3cbcc032150b6a85b2f30813c812_a64350a4dca23860ec579d1ba0da5aed" depth="" index="" proto="type-parameter-0-1">
<tss>
<templatebase id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_07566aa809aee0bdf1c0fac16e19fa85"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</ttp>
</template_parameters>
<cr namespace="std" access="none" depth="3" kind="class" name="vector" id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b" file="15" linestart="649" lineend="1783">
<base access="public">
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_05d3bbcccbfa4b3b58c141a4ec6ed389"/>
<template_arguments>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_6a7cfa317aaf33a284de4e9d43f7bf95"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</base>
<cr access="public" kind="class" name="vector" id="78cb3cbcc032150b6a85b2f30813c812_c48c2bde2c144b6d614d5912fe2271ba" file="15" linestart="649" lineend="649"/>
<c name="vector&lt;_Ty, _Alloc&gt;" id="78cb3cbcc032150b6a85b2f30813c812_4dc4853c79211880d053934cbb0985af" file="15" linestart="678" lineend="681" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
<m name="push_back" id="78cb3cbcc032150b6a85b2f30813c812_82c325f404095dcd1276ea44fbee4d0b" file="15" linestart="864" lineend="885" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="_Val" proto="value_type &amp;&amp;" isRef="true" access2="none">
<rrf>
<Tdef>
<DependentName/>
</Tdef>
</rrf>
</p>
</m>
<m name="begin" id="78cb3cbcc032150b6a85b2f30813c812_de8a9d48785e0506760a39ca20325c3f" file="15" linestart="1023" lineend="1026" access="public" hasbody="true" isdef="true">
<fpt proto="iterator">
<Tdef>
<DependentName/>
</Tdef>
<exception_specifiers nothrow="true"/>
</fpt>
</m>
<m name="end" id="78cb3cbcc032150b6a85b2f30813c812_f110db10e5d92da68a9caaaa2ea25c7a" file="15" linestart="1033" lineend="1036" access="public" hasbody="true" isdef="true">
<fpt proto="iterator">
<Tdef>
<DependentName/>
</Tdef>
<exception_specifiers nothrow="true"/>
</fpt>
</m>
<m name="rbegin" id="78cb3cbcc032150b6a85b2f30813c812_478c7d1d79d86133b6bdf17fc930b83a" file="15" linestart="1048" lineend="1051" access="public" hasbody="true" isdef="true">
<fpt proto="reverse_iterator">
<Tdef>
<ety>
<tss>
<templatebase id="41b1f1ab5ff3e4379a0c88a111c98396_e7c12c4c55aa410403377716c39045f9"/>
<template_arguments>
<Tdef>
<DependentName/>
</Tdef>
</template_arguments>
</tss>
</ety>
</Tdef>
<exception_specifiers nothrow="true"/>
</fpt>
</m>
<m name="rend" id="78cb3cbcc032150b6a85b2f30813c812_f47ed91a8b0d809b616e558d6211d75c" file="15" linestart="1058" lineend="1061" access="public" hasbody="true" isdef="true">
<fpt proto="reverse_iterator">
<Tdef>
<ety>
<tss>
<templatebase id="41b1f1ab5ff3e4379a0c88a111c98396_e7c12c4c55aa410403377716c39045f9"/>
<template_arguments>
<Tdef>
<DependentName/>
</Tdef>
</template_arguments>
</tss>
</ety>
</Tdef>
<exception_specifiers nothrow="true"/>
</fpt>
</m>
<m name="size" id="78cb3cbcc032150b6a85b2f30813c812_4d302b215534245d1eabe876b749053e" file="15" linestart="1146" lineend="1149" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="size_type">
<Tdef>
<DependentName/>
</Tdef>
<exception_specifiers nothrow="true"/>
</fpt>
</m>
<m name="at" id="78cb3cbcc032150b6a85b2f30813c812_4381b77c5f55402cef99d4568a43b984" file="15" linestart="1166" lineend="1171" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const_reference">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
<p name="_Pos" proto="size_type" access2="none">
<Tdef>
<DependentName/>
</Tdef>
</p>
</m>
<m name="operator[]" id="78cb3cbcc032150b6a85b2f30813c812_ef8d8f319c8e9feff2e4932bbcf63dcf" file="15" linestart="1180" lineend="1194" operator="true" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const_reference">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
<p name="_Pos" proto="size_type" access2="none">
<Tdef>
<DependentName/>
</Tdef>
</p>
</m>
<m name="operator[]" id="78cb3cbcc032150b6a85b2f30813c812_bbde51329f0e82bea6cb46145bd7201d" file="15" linestart="1196" lineend="1210" operator="true" access="public" hasbody="true" isdef="true">
<fpt proto="reference">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
<p name="_Pos" proto="size_type" access2="none">
<Tdef>
<DependentName/>
</Tdef>
</p>
</m>
<m name="push_back" id="78cb3cbcc032150b6a85b2f30813c812_1c83e7b73b142304d6ba2d86ad19d7c1" file="15" linestart="1242" lineend="1263" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="_Val" proto="const value_type &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<Tdef>
<DependentName/>
</Tdef>
</QualType>
</lrf>
</p>
</m>
<m name="pop_back" id="78cb3cbcc032150b6a85b2f30813c812_7e9180e148abfec539486256f2d0da27" file="15" linestart="1266" lineend="1276" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="insert" id="78cb3cbcc032150b6a85b2f30813c812_e503abb0a5db6bb2b46c032133116d3a" file="15" linestart="1326" lineend="1329" access="public" hasbody="true" isdef="true">
<fpt proto="iterator">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
<p name="_Where" proto="const_iterator" access2="none">
<Tdef>
<DependentName/>
</Tdef>
</p>
<p name="_Val" proto="const _Ty &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</m>
<m name="erase" id="78cb3cbcc032150b6a85b2f30813c812_017ee6726ea77663af99d7114001de06" file="15" linestart="1437" lineend="1448" access="public" hasbody="true" isdef="true">
<fpt proto="iterator">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
<p name="_Where" proto="const_iterator" access2="none">
<Tdef>
<DependentName/>
</Tdef>
</p>
</m>
<m name="clear" id="78cb3cbcc032150b6a85b2f30813c812_89e3522d3ebadb1467590c2969c878ef" file="15" linestart="1506" lineend="1511" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
<exception_specifiers nothrow="true"/>
</fpt>
</m>
<m name="swap" id="78cb3cbcc032150b6a85b2f30813c812_b1b660367d5ed8a066ebcc2fcaf14bc8" file="15" linestart="1513" lineend="1542" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="_Right" proto="_Myt &amp;" isRef="true" access2="none">
<lrf>
<Tdef>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</lrf>
</p>
</m>
</cr>
</tm>
<tm namespace="std" access="none" depth="3" kind="class" name="basic_ostream" id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243" file="16" linestart="38" lineend="624" previous="dc6a030260fdce02a4552ddbd0ff2ec9_7df99f34c778205aaa2e1759bec30243">
<template_parameters>
<ttp name="_Elem" id="4ca9ed490f2174b025fcd4586581c15c_16f2e94b2b51d2f5dff02392fae903e6" depth="" index="" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="4ca9ed490f2174b025fcd4586581c15c_e2d9f5b99956b4f9c1c67b1b3209c8f9" depth="" index="" proto="type-parameter-0-1"/>
</template_parameters>
<cr namespace="std" access="none" depth="3" kind="class" name="basic_ostream" id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243" file="16" linestart="40" lineend="624" previous="dc6a030260fdce02a4552ddbd0ff2ec9_7df99f34c778205aaa2e1759bec30243">
<base access="public">
<tss>
<templatebase id="479c8965dd9ce6b5b8bbb46e4f52b5bc_0973aa6d290bf2c44e86c2f58971d880"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</base>
<cr access="public" kind="class" name="basic_ostream" id="4ca9ed490f2174b025fcd4586581c15c_5fbde4af169bb278d3e041271eb8fcd4" file="16" linestart="40" lineend="40"/>
<m name="operator&lt;&lt;" id="4ca9ed490f2174b025fcd4586581c15c_d33445cdb753f92a6c0b97ecb40fd870" file="16" linestart="197" lineend="201" operator="true" access="public" hasbody="true" isdef="true">
<fpt proto="_Myt &amp;">
<lrf>
<Tdef>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</lrf>
</fpt>
<p name="_Pfn" proto="_Myt &amp;(*)(_Myt &amp;) __attribute__((cdecl))" isPtr="true" access2="none">
<pt>
<Paren/>
</pt>
</p>
</m>
<m name="operator&lt;&lt;" id="4ca9ed490f2174b025fcd4586581c15c_b80c76f34b048b1a98ab13314350861d" file="16" linestart="291" lineend="314" operator="true" access="public" hasbody="true" isdef="true">
<fpt proto="_Myt &amp;">
<lrf>
<Tdef>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</lrf>
</fpt>
<p name="_Val" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</m>
<m name="operator&lt;&lt;" id="4ca9ed490f2174b025fcd4586581c15c_9edd3f37c6ea7c68d416a2808aad0962" file="16" linestart="316" lineend="334" operator="true" access="public" hasbody="true" isdef="true">
<fpt proto="_Myt &amp;">
<lrf>
<Tdef>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</lrf>
</fpt>
<p name="_Val" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
</p>
</m>
<m name="operator&lt;&lt;" id="4ca9ed490f2174b025fcd4586581c15c_49ad90bcda766c8fbe999b7e4f777969" file="16" linestart="438" lineend="456" operator="true" access="public" hasbody="true" isdef="true">
<fpt proto="_Myt &amp;">
<lrf>
<Tdef>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</lrf>
</fpt>
<p name="_Val" proto="double" isLiteral="true" isPrimitive="true" access2="none">
<bt name="double"/>
</p>
</m>
<m name="operator&lt;&lt;" id="4ca9ed490f2174b025fcd4586581c15c_0c17f96340e7b6f9b358ffb31b80b930" file="16" linestart="478" lineend="496" operator="true" access="public" hasbody="true" isdef="true">
<fpt proto="_Myt &amp;">
<lrf>
<Tdef>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</lrf>
</fpt>
<p name="_Val" proto="const void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</p>
</m>
<m name="put" id="4ca9ed490f2174b025fcd4586581c15c_53c5ef8917eca8edd1792c0541927144" file="16" linestart="535" lineend="553" access="public" hasbody="true" isdef="true">
<fpt proto="_Myt &amp;">
<lrf>
<Tdef>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</lrf>
</fpt>
<p name="_Ch" proto="_Elem" access2="none">
<ttp/>
</p>
</m>
<m name="write" id="4ca9ed490f2174b025fcd4586581c15c_93c564792fdf50eda150ffdb03033975" file="16" linestart="555" lineend="578" access="public" hasbody="true" isdef="true">
<fpt proto="_Myt &amp;">
<lrf>
<Tdef>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</lrf>
</fpt>
<p name="_Str" proto="const _Elem *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
<p name="_Count" proto="streamsize" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<Tdef>
<bt name="long long"/>
</Tdef>
</Tdef>
</p>
</m>
</cr>
</tm>
<tm namespace="std" access="none" depth="5" kind="class" name="basic_stringstream" id="5881e8fec85ef2b1e2cf66e62ed05ea0_aba35b20ea03dd03e503380b9186c293" file="17" linestart="569" lineend="655" previous="dc6a030260fdce02a4552ddbd0ff2ec9_aba35b20ea03dd03e503380b9186c293">
<template_parameters>
<ttp name="_Elem" id="5881e8fec85ef2b1e2cf66e62ed05ea0_03c9d912bc879a6630b3feaebc4a00c9" depth="" index="" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="5881e8fec85ef2b1e2cf66e62ed05ea0_78d8f7e017e572ac0ac40fc2bc6a5779" depth="" index="" proto="type-parameter-0-1"/>
<ttp name="_Alloc" id="5881e8fec85ef2b1e2cf66e62ed05ea0_def278dcfecd0fd44b6a9f74e568f194" depth="" index="" proto="type-parameter-0-2"/>
</template_parameters>
<cr namespace="std" access="none" depth="5" kind="class" name="basic_stringstream" id="5881e8fec85ef2b1e2cf66e62ed05ea0_aba35b20ea03dd03e503380b9186c293" file="17" linestart="572" lineend="655" previous="dc6a030260fdce02a4552ddbd0ff2ec9_aba35b20ea03dd03e503380b9186c293">
<base access="public">
<tss>
<templatebase id="92f229cf21618ff3623062650172be73_64357d2370f84df4b07f7f79d7aa4fdf"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</base>
<cr access="public" kind="class" name="basic_stringstream" id="5881e8fec85ef2b1e2cf66e62ed05ea0_f7898b342a921f677feb7174896f4d6e" file="17" linestart="572" lineend="572"/>
<c name="basic_stringstream&lt;_Elem, _Traits, _Alloc&gt;" id="5881e8fec85ef2b1e2cf66e62ed05ea0_9b338e7b149242250646c2951a67f10d" file="17" linestart="587" lineend="592" explicit="true" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="_Mode" proto="ios_base::openmode" isLiteral="true" isPrimitive="true" init="true" access2="none">
<ety>
<Tdef>
<bt name="int"/>
</Tdef>
</ety>
</p>
<initlist id="5881e8fec85ef2b1e2cf66e62ed05ea0_cc16efbaa0a2f97eff84e82c5ecbd2a5"/>
</c>
<m name="str" id="5881e8fec85ef2b1e2cf66e62ed05ea0_5c585cd54b1505e5cc2719ca66747cf3" file="17" linestart="643" lineend="646" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="_Mystr">
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</fpt>
</m>
</cr>
</tm>
<tm namespace="testing.internal" access="none" depth="0" kind="class" name="scoped_ptr" id="0c2fb77eb4696cd7e7faa021a7cafdaf_013da3e2de5bdb2d0d2f907e32089625" file="18" linestart="783" lineend="813">
<template_parameters>
<ttp name="T" id="0c2fb77eb4696cd7e7faa021a7cafdaf_c0e5159804993bf6b3b10ff0faf0e77f" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="scoped_ptr" id="0c2fb77eb4696cd7e7faa021a7cafdaf_d3f221d1604a5492e753f569b64a4a06" file="18" linestart="784" lineend="813">
<cr access="public" kind="class" name="scoped_ptr" id="0c2fb77eb4696cd7e7faa021a7cafdaf_623fb9def91eacae36f829a7d678bb63" file="18" linestart="784" lineend="784"/>
<c name="scoped_ptr&lt;T&gt;" id="0c2fb77eb4696cd7e7faa021a7cafdaf_1f20434875abd5947346d846ef824021" file="18" linestart="788" lineend="788" explicit="true" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="p" proto="T *" isPtr="true" init="true" access2="none">
<pt>
<ttp/>
</pt>
</p>
<initlist id="0c2fb77eb4696cd7e7faa021a7cafdaf_d70c27ab7e0f194fa5d118f530b68fea"/>
</c>
<m name="operator*" id="0c2fb77eb4696cd7e7faa021a7cafdaf_d587ff9294d3d564319b8482eac59f75" file="18" linestart="791" lineend="791" operator="true" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="T &amp;">
<lrf>
<ttp/>
</lrf>
</fpt>
</m>
<m name="get" id="0c2fb77eb4696cd7e7faa021a7cafdaf_f4309e4b6202a351c41d73256f46ad36" file="18" linestart="793" lineend="793" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="T *">
<pt>
<ttp/>
</pt>
</fpt>
</m>
</cr>
</tm>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="RE" id="0c2fb77eb4696cd7e7faa021a7cafdaf_cb2d54a7ddf688f78bbcd48da4ea1b1a" file="18" linestart="819" lineend="890">
<m name="pattern" id="0c2fb77eb4696cd7e7faa021a7cafdaf_cf8d610e2b1054df087f6436e5eb22f0" file="18" linestart="838" lineend="838" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
<m name="PartialMatch" id="0c2fb77eb4696cd7e7faa021a7cafdaf_713af0537b1db40c4bc401477924d041" file="18" linestart="866" lineend="866" access="public" storage="static" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="re" proto="const testing::internal::RE &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0c2fb77eb4696cd7e7faa021a7cafdaf_cb2d54a7ddf688f78bbcd48da4ea1b1a"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<fl name="pattern_" id="0c2fb77eb4696cd7e7faa021a7cafdaf_f41423f35bf4bc9a5c563f4a2cdf5681" file="18" linestart="875" lineend="875" isPtr="true" isLiteral="true" access="private" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fl>
<fl name="is_valid_" id="0c2fb77eb4696cd7e7faa021a7cafdaf_11bd87be26ed762802bd09824b0ea737" file="18" linestart="876" lineend="876" isLiteral="true" access="private" proto="bool">
<bt name="bool"/>
</fl>
<fl name="full_pattern_" id="0c2fb77eb4696cd7e7faa021a7cafdaf_9a052e40c895dbbeac4d43adc92c8e46" file="18" linestart="885" lineend="885" isPtr="true" isLiteral="true" access="private" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fl>
</cr>
<e namespace="testing.internal" access="none" name="GTestLogSeverity" id="0c2fb77eb4696cd7e7faa021a7cafdaf_9cce950ef73d1cccf4ea04086239224d" file="18" linestart="908" lineend="913" fixed="true">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
<ec name="GTEST_INFO" id="0c2fb77eb4696cd7e7faa021a7cafdaf_381de5cc8cf6286a084698dccdffa816" file="18" linestart="909" lineend="909">
<et>
<e id="0c2fb77eb4696cd7e7faa021a7cafdaf_9cce950ef73d1cccf4ea04086239224d"/>
</et>
</ec>
<ec name="GTEST_WARNING" id="0c2fb77eb4696cd7e7faa021a7cafdaf_b1a213001ee5c5ecf7ecda09f04506ab" file="18" linestart="910" lineend="910">
<et>
<e id="0c2fb77eb4696cd7e7faa021a7cafdaf_9cce950ef73d1cccf4ea04086239224d"/>
</et>
</ec>
<ec name="GTEST_ERROR" id="0c2fb77eb4696cd7e7faa021a7cafdaf_115619d3bc88e99bc9691b29702e0c37" file="18" linestart="911" lineend="911">
<et>
<e id="0c2fb77eb4696cd7e7faa021a7cafdaf_9cce950ef73d1cccf4ea04086239224d"/>
</et>
</ec>
<ec name="GTEST_FATAL" id="0c2fb77eb4696cd7e7faa021a7cafdaf_73244e7bb6e609ea7ad8caf177515726" file="18" linestart="912" lineend="912">
<et>
<e id="0c2fb77eb4696cd7e7faa021a7cafdaf_9cce950ef73d1cccf4ea04086239224d"/>
</et>
</ec>
</e>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="GTestLog" id="0c2fb77eb4696cd7e7faa021a7cafdaf_bf2d9513017ffda0819c9a434a1a2627" file="18" linestart="918" lineend="931">
<c name="GTestLog" id="0c2fb77eb4696cd7e7faa021a7cafdaf_0c6afece38a44f316ec0bef7bfe52760" file="18" linestart="920" lineend="920" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="severity" proto="testing::internal::GTestLogSeverity" isLiteral="true" access2="none">
<et>
<e id="0c2fb77eb4696cd7e7faa021a7cafdaf_9cce950ef73d1cccf4ea04086239224d"/>
</et>
</p>
<p name="file" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="line" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</c>
<m name="GetStream" id="0c2fb77eb4696cd7e7faa021a7cafdaf_1d2fa6761b0bf88e3bfec03d35d144de" file="18" linestart="925" lineend="925" access="public" hasbody="true" isdef="true">
<fpt proto="::std::ostream &amp;">
<lrf>
<ety>
<Tdef>
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<bt name="char"/>
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_bf3447e13ccfc57e5fa847f5d78e7639"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</Tdef>
</ety>
</lrf>
</fpt>
</m>
<fl name="severity_" id="0c2fb77eb4696cd7e7faa021a7cafdaf_3c099181b6ed34c2881954b6401ec5f4" file="18" linestart="928" lineend="928" isLiteral="true" access="private" proto="const testing::internal::GTestLogSeverity">
<QualType const="true">
<et>
<e id="0c2fb77eb4696cd7e7faa021a7cafdaf_9cce950ef73d1cccf4ea04086239224d"/>
</et>
</QualType>
</fl>
</cr>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="Mutex" id="0c2fb77eb4696cd7e7faa021a7cafdaf_47a1d46d61347c3a3bf14ddddbcf3474" file="18" linestart="1409" lineend="1413">
<c name="Mutex" id="0c2fb77eb4696cd7e7faa021a7cafdaf_27a951df8b6efc3d7384537ce4036dcd" file="18" linestart="1411" lineend="1411" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="GTestMutexLock" id="0c2fb77eb4696cd7e7faa021a7cafdaf_c7722cc837bbc44d0d642f138659392d" file="18" linestart="1420" lineend="1423">
<c name="GTestMutexLock" id="0c2fb77eb4696cd7e7faa021a7cafdaf_be9383ce236866d922ca4970e4a83e41" file="18" linestart="1422" lineend="1422" explicit="true" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="testing::internal::Mutex *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="0c2fb77eb4696cd7e7faa021a7cafdaf_47a1d46d61347c3a3bf14ddddbcf3474"/>
</rt>
</pt>
</p>
</c>
</cr>
<tm namespace="testing.internal" access="none" depth="0" kind="class" name="ThreadLocal" id="0c2fb77eb4696cd7e7faa021a7cafdaf_c038b543e136b0c0a041c5a6c269a390" file="18" linestart="1427" lineend="1438">
<template_parameters>
<ttp name="T" id="0c2fb77eb4696cd7e7faa021a7cafdaf_788f692ffed2b3edc70fd37aa22cf11b" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="ThreadLocal" id="0c2fb77eb4696cd7e7faa021a7cafdaf_94243c49ecff868aaf5201681b778156" file="18" linestart="1428" lineend="1438">
<cr access="public" kind="class" name="ThreadLocal" id="0c2fb77eb4696cd7e7faa021a7cafdaf_170de7921f009f1dddf03cde619f191b" file="18" linestart="1428" lineend="1428"/>
<c name="ThreadLocal&lt;T&gt;" id="0c2fb77eb4696cd7e7faa021a7cafdaf_c2953dc24b56c40716b6ca3fcb832f21" file="18" linestart="1431" lineend="1431" explicit="true" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="value" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<initlist id="0c2fb77eb4696cd7e7faa021a7cafdaf_1f738f2bcf928d204bbe4a74d7d35327"/>
</c>
<m name="get" id="0c2fb77eb4696cd7e7faa021a7cafdaf_2ed649414ee45acb18e84a66374253a3" file="18" linestart="1434" lineend="1434" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const T &amp;">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</fpt>
</m>
<m name="set" id="0c2fb77eb4696cd7e7faa021a7cafdaf_00982df8ebf66c2f4b5e4c5958a3d4b9" file="18" linestart="1435" lineend="1435" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="value" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</m>
</cr>
</tm>
<tm namespace="std" access="none" depth="0" kind="struct" name="_Smanip" id="b9ca03278036b25ad6754b034732256e_adb9486b1bef17a97e5f0cafa22c6ea5" file="19" linestart="249" lineend="259">
<template_parameters>
<ttp name="_Arg" id="b9ca03278036b25ad6754b034732256e_15a55e9fedc51691d46428e3b5cf2f18" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" depth="0" kind="struct" name="_Smanip" id="b9ca03278036b25ad6754b034732256e_adb9486b1bef17a97e5f0cafa22c6ea5" file="19" linestart="250" lineend="259">
<cr access="public" kind="struct" name="_Smanip" id="b9ca03278036b25ad6754b034732256e_bb0a6c4f110f6d4e4de960d3d451f765" file="19" linestart="250" lineend="250"/>
</cr>
</tm>
<tm namespace="std" access="none" depth="2" kind="class" name="_Tree_const_iterator" id="8070363a27881d4727dcaa96ac073104_bb51d555312e5deb23fb6b47506aecc7" file="20" linestart="192" lineend="343">
<template_parameters>
<ttp name="_Mytree" id="8070363a27881d4727dcaa96ac073104_e1501577900b15b39abd5e8e427b4634" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" depth="2" kind="class" name="_Tree_const_iterator" id="8070363a27881d4727dcaa96ac073104_bb51d555312e5deb23fb6b47506aecc7" file="20" linestart="193" lineend="343">
<base access="public">
<tss>
<templatebase id="8070363a27881d4727dcaa96ac073104_bf18b936ea64ba215f72d13f4eacde6c"/>
<template_arguments>
<ttp/>
<Tdef>
<rt>
<cr id="41b1f1ab5ff3e4379a0c88a111c98396_364abe11913ab4404e30d1d7b02feafd"/>
</rt>
</Tdef>
</template_arguments>
</tss>
</base>
<cr access="public" kind="class" name="_Tree_const_iterator" id="8070363a27881d4727dcaa96ac073104_a632b0f90947e5e927ccfc01ba363a70" file="20" linestart="193" lineend="193"/>
<m name="operator*" id="8070363a27881d4727dcaa96ac073104_f203921a2fac7cebfa243f1031184eaf" file="20" linestart="230" lineend="248" operator="true" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="reference">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
</m>
<m name="operator++" id="8070363a27881d4727dcaa96ac073104_88509accf3ba64e3e74b3c23d3d6ab41" file="20" linestart="255" lineend="273" operator="true" access="public" hasbody="true" isdef="true">
<fpt proto="_Myiter &amp;">
<lrf>
<Tdef>
<tss>
<templatebase id="8070363a27881d4727dcaa96ac073104_bb51d555312e5deb23fb6b47506aecc7"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</lrf>
</fpt>
</m>
<m name="operator!=" id="8070363a27881d4727dcaa96ac073104_290e7e57927122fe1005f04346106f75" file="20" linestart="339" lineend="342" operator="true" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="_Right" proto="const _Myiter &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<Tdef>
<tss>
<templatebase id="8070363a27881d4727dcaa96ac073104_bb51d555312e5deb23fb6b47506aecc7"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</Tdef>
</QualType>
</lrf>
</p>
</m>
</cr>
</tm>
<tm namespace="std" access="none" depth="1" kind="struct" name="_Tree_simple_types" id="8070363a27881d4727dcaa96ac073104_a46b96c02d2745d612b31f34763c0ffd" file="20" linestart="504" lineend="510">
<template_parameters>
<ttp name="_Ty" id="8070363a27881d4727dcaa96ac073104_f56e71f0d267d0c2a47ba90e2f538262" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" depth="1" kind="struct" name="_Tree_simple_types" id="8070363a27881d4727dcaa96ac073104_a46b96c02d2745d612b31f34763c0ffd" file="20" linestart="505" lineend="510">
<base access="public">
<tss>
<templatebase id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_d16a5f6f5bc0b20f10361aff0d9f12b0"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</base>
<cr access="public" kind="struct" name="_Tree_simple_types" id="8070363a27881d4727dcaa96ac073104_05285a0ab933f70a9831386211fc0537" file="20" linestart="505" lineend="505"/>
</cr>
</tm>
<tm namespace="std" access="none" depth="1" kind="class" name="_Tree_val" id="8070363a27881d4727dcaa96ac073104_9ff7f1aa56aed7a5e32126b2624e761f" file="20" linestart="546" lineend="623">
<template_parameters>
<ttp name="_Val_types" id="8070363a27881d4727dcaa96ac073104_ee6d60d92700c7abef8b078d75469cf6" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" depth="1" kind="class" name="_Tree_val" id="8070363a27881d4727dcaa96ac073104_9ff7f1aa56aed7a5e32126b2624e761f" file="20" linestart="547" lineend="623">
<base access="public">
<Tdef>
<rt>
<cr id="41b1f1ab5ff3e4379a0c88a111c98396_ce449a57a371fbc057aa1719d4872f13"/>
</rt>
</Tdef>
</base>
<cr access="public" kind="class" name="_Tree_val" id="8070363a27881d4727dcaa96ac073104_5e65c7be8f9a00475d7423df2a25e665" file="20" linestart="547" lineend="547"/>
<e parent="8070363a27881d4727dcaa96ac073104_9ff7f1aa56aed7a5e32126b2624e761f" access="public" name="_Redbl" id="8070363a27881d4727dcaa96ac073104_d3dcfb11711fd7220be29fd4c9026a6c" file="20" linestart="573" lineend="575" fixed="true">
<promotion_type>
<bt name="&lt;dependent type&gt;"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
</cr>
</tm>
<tm namespace="std" access="none" depth="5" kind="class" name="_Tree" id="8070363a27881d4727dcaa96ac073104_81402bee6779f3d62c69ec615acf01b5" file="20" linestart="1020" lineend="2242">
<template_parameters>
<ttp name="_Traits" id="8070363a27881d4727dcaa96ac073104_ccd7da7616bf7069617d2f4c840f6c61" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<cr namespace="std" access="none" depth="5" kind="class" name="_Tree" id="8070363a27881d4727dcaa96ac073104_81402bee6779f3d62c69ec615acf01b5" file="20" linestart="1021" lineend="2242">
<base access="public">
<tss>
<templatebase id="8070363a27881d4727dcaa96ac073104_3ce6ec60a163b1a9a5f14e127a74d832"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</base>
<cr access="public" kind="class" name="_Tree" id="8070363a27881d4727dcaa96ac073104_255f03aa4aa2661afe2499ba173f0891" file="20" linestart="1021" lineend="1021"/>
<e parent="8070363a27881d4727dcaa96ac073104_81402bee6779f3d62c69ec615acf01b5" access="public" name="" id="8070363a27881d4727dcaa96ac073104_7df8f20990be6a6b1e62cb2eb8d30d0b" file="20" linestart="1032" lineend="1034" fixed="true">
<promotion_type>
<bt name="&lt;dependent type&gt;"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
</e>
<m name="begin" id="8070363a27881d4727dcaa96ac073104_737bd03f6bd3937218ff5023103d54df" file="20" linestart="1210" lineend="1213" access="public" hasbody="true" isdef="true">
<fpt proto="iterator">
<Tdef>
<DependentName/>
</Tdef>
<exception_specifiers nothrow="true"/>
</fpt>
</m>
<m name="end" id="8070363a27881d4727dcaa96ac073104_828f837754a9cca5f23baa42fdcc36d1" file="20" linestart="1220" lineend="1223" access="public" hasbody="true" isdef="true">
<fpt proto="iterator">
<Tdef>
<DependentName/>
</Tdef>
<exception_specifiers nothrow="true"/>
</fpt>
</m>
<m name="count" id="8070363a27881d4727dcaa96ac073104_928c891a6c4ab7869059ab48ad66525f" file="20" linestart="1565" lineend="1571" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="size_type">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
<p name="_Keyval" proto="const key_type &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<Tdef>
<DependentName/>
</Tdef>
</QualType>
</lrf>
</p>
</m>
</cr>
</tm>
<tm namespace="std" access="none" depth="6" kind="class" name="set" id="64af46afcc2890481e245e04528de1f6_30eed23d73cd29bf9c388847f6519859" file="21" linestart="39" lineend="210">
<template_parameters>
<ttp name="_Kty" id="64af46afcc2890481e245e04528de1f6_cee30ef8d03af29da6f8c61a35118ba3" depth="" index="" proto="type-parameter-0-0"/>
<ttp name="_Pr" id="64af46afcc2890481e245e04528de1f6_30dcf37ebcb93c1575b3f397bdb76391" depth="" index="" proto="type-parameter-0-1">
<tss>
<templatebase id="53bf6af53c2533d21a39fbab7aab80ae_00d97eaa19515dc38fda9027b027e0f6"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</ttp>
<ttp name="_Alloc" id="64af46afcc2890481e245e04528de1f6_082f1e313bba27b14516b21eb856b171" depth="" index="" proto="type-parameter-0-2">
<tss>
<templatebase id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_07566aa809aee0bdf1c0fac16e19fa85"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</ttp>
</template_parameters>
<cr namespace="std" access="none" depth="6" kind="class" name="set" id="64af46afcc2890481e245e04528de1f6_30eed23d73cd29bf9c388847f6519859" file="21" linestart="42" lineend="210">
<base access="public">
<tss>
<templatebase id="8070363a27881d4727dcaa96ac073104_81402bee6779f3d62c69ec615acf01b5"/>
<template_arguments>
<tss>
<templatebase id="64af46afcc2890481e245e04528de1f6_4e9108f8725da6fe092f48f24d83650b"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</base>
<cr access="public" kind="class" name="set" id="64af46afcc2890481e245e04528de1f6_f0587ca32bcdac62f39aa24446e9c01b" file="21" linestart="42" lineend="42"/>
<c name="set&lt;_Kty, _Pr, _Alloc&gt;" id="64af46afcc2890481e245e04528de1f6_6d8c67c50e86e36aaa8868349e7ae507" file="21" linestart="66" lineend="69" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
<m name="insert" id="64af46afcc2890481e245e04528de1f6_1fef498162a56ce7680fb55f6497299e" file="21" linestart="192" lineend="195" access="public" hasbody="true" isdef="true">
<fpt proto="_Pairib">
<Tdef>
<DependentName/>
</Tdef>
</fpt>
<p name="_Val" proto="const value_type &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<Tdef>
<DependentName/>
</Tdef>
</QualType>
</lrf>
</p>
</m>
</cr>
</tm>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="String" id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab" file="22" linestart="81" lineend="312" previous="0c2fb77eb4696cd7e7faa021a7cafdaf_29162408a07bf0ba0270baefa060f9ab">
<m name="ShowCStringQuoted" id="062315ef9bdab19c3cabee16a5b6d183_957ebe0135dd8d2bba8c2c399cd88a81" file="22" linestart="92" lineend="92" access="public" storage="static" hasbody="true">
<fpt proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fpt>
<p name="c_str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</m>
<m name="CStringEquals" id="062315ef9bdab19c3cabee16a5b6d183_d2155f377f58c0a684cb1a0ba04e109c" file="22" linestart="134" lineend="134" access="public" storage="static" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="lhs" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="rhs" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</m>
<m name="ShowWideCString" id="062315ef9bdab19c3cabee16a5b6d183_c14e91c70ee7aad410a397c8e0a427b7" file="22" linestart="140" lineend="140" access="public" storage="static" hasbody="true">
<fpt proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fpt>
<p name="wide_c_str" proto="const wchar_t *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="wchar_t"/>
</QualType>
</pt>
</p>
</m>
<m name="ShowWideCStringQuoted" id="062315ef9bdab19c3cabee16a5b6d183_90f01283b64335eab0184a2b708ee7dd" file="22" linestart="144" lineend="144" access="public" storage="static" hasbody="true">
<fpt proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fpt>
<p name="wide_c_str" proto="const wchar_t *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="wchar_t"/>
</QualType>
</pt>
</p>
</m>
<m name="WideCStringEquals" id="062315ef9bdab19c3cabee16a5b6d183_34867bff02a79fbca9a89c516fdd36d3" file="22" linestart="152" lineend="152" access="public" storage="static" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="lhs" proto="const wchar_t *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="wchar_t"/>
</QualType>
</pt>
</p>
<p name="rhs" proto="const wchar_t *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="wchar_t"/>
</QualType>
</pt>
</p>
</m>
<m name="CaseInsensitiveCStringEquals" id="062315ef9bdab19c3cabee16a5b6d183_7331259e9a7816e21861e9aca00ec6cf" file="22" linestart="160" lineend="161" access="public" storage="static" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="lhs" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="rhs" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</m>
<m name="Format" id="062315ef9bdab19c3cabee16a5b6d183_7553f457acbe57f42d245c409543c7f9" file="22" linestart="187" lineend="187" variadic="true" access="public" storage="static" hasbody="true">
<fpt proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fpt>
<p name="format" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</m>
<c name="String" id="062315ef9bdab19c3cabee16a5b6d183_f45ff13810af13c1cff310e09da44259" file="22" linestart="192" lineend="192" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<initlist id="062315ef9bdab19c3cabee16a5b6d183_9155ffb15c5194abc9584b576e32aec4"/>
<initlist id="062315ef9bdab19c3cabee16a5b6d183_b8e70a72aac541ebf7ea1093130e861d"/>
</c>
<c name="String" id="062315ef9bdab19c3cabee16a5b6d183_a00bbe57da128d6c3ae9589fbbf9db8f" file="22" linestart="195" lineend="202" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="a_c_str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</c>
<c name="String" id="062315ef9bdab19c3cabee16a5b6d183_cab8c0c236aa56cc022f7435de01380f" file="22" linestart="208" lineend="210" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="buffer" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="a_length" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</p>
</c>
<c name="String" id="062315ef9bdab19c3cabee16a5b6d183_5911c256d065c46273caf8abe723f0ce" file="22" linestart="214" lineend="214" copyconst="true" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="str" proto="const testing::internal::String &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</QualType>
</lrf>
</p>
<initlist id="062315ef9bdab19c3cabee16a5b6d183_9155ffb15c5194abc9584b576e32aec4"/>
<initlist id="062315ef9bdab19c3cabee16a5b6d183_b8e70a72aac541ebf7ea1093130e861d"/>
</c>
<c name="String" id="062315ef9bdab19c3cabee16a5b6d183_61e5a28dd66df5de13789091b1971161" file="22" linestart="226" lineend="228" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="str" proto="const ::std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<bt name="char"/>
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_bf3447e13ccfc57e5fa847f5d78e7639"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
<tss>
<templatebase id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_07566aa809aee0bdf1c0fac16e19fa85"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
</c>
<cv name="operator ::std::string" id="062315ef9bdab19c3cabee16a5b6d183_405f4c9378204ad7bb3c0a265c60134e" file="22" linestart="230" lineend="230" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="::std::string">
<ety>
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<bt name="char"/>
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_bf3447e13ccfc57e5fa847f5d78e7639"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
<tss>
<templatebase id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_07566aa809aee0bdf1c0fac16e19fa85"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</Tdef>
</ety>
</fpt>
</cv>
<m name="empty" id="062315ef9bdab19c3cabee16a5b6d183_a28a85b6a362a228d07bbab8d261d368" file="22" linestart="241" lineend="241" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="operator==" id="062315ef9bdab19c3cabee16a5b6d183_1a1493854a24b6ac75d51f668fa9cd9a" file="22" linestart="250" lineend="250" operator="true" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="a_c_str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</m>
<m name="operator!=" id="062315ef9bdab19c3cabee16a5b6d183_d113258bb93fd0515f721d5132cd0f2b" file="22" linestart="258" lineend="258" operator="true" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="a_c_str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</m>
<m name="EndsWithCaseInsensitive" id="062315ef9bdab19c3cabee16a5b6d183_c86e55a8216b9f79f16d176a303c2250" file="22" linestart="266" lineend="266" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="suffix" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</m>
<m name="length" id="062315ef9bdab19c3cabee16a5b6d183_5d70359b9791c814a17fabc6f2f1d9f5" file="22" linestart="270" lineend="270" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="size_t">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</fpt>
</m>
<m name="c_str" id="062315ef9bdab19c3cabee16a5b6d183_e758dca70b3e639bd69cdff32808e0ba" file="22" linestart="275" lineend="275" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
<m name="operator=" id="062315ef9bdab19c3cabee16a5b6d183_5d4ff845270b01939dd6adc5bd7b3984" file="22" linestart="278" lineend="280" operator="true" access="public" hasbody="true" isdef="true">
<fpt proto="const testing::internal::String &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</QualType>
</lrf>
</fpt>
<p name="a_c_str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</m>
<m name="operator=" id="062315ef9bdab19c3cabee16a5b6d183_fb4e3e4ae725f439ccc4ea33d8f951ab" file="22" linestart="283" lineend="295" operator="true" access="public" hasbody="true" isdef="true">
<fpt proto="const testing::internal::String &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</QualType>
</lrf>
</fpt>
<p name="rhs" proto="const testing::internal::String &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</QualType>
</lrf>
</p>
</m>
</cr>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="FilePath" id="76a971fe2586f5579f5c582c96be5ea1_92c5d28c5da2d5b9e6c8893e5e28f941" file="23" linestart="59" lineend="205">
<c name="FilePath" id="76a971fe2586f5579f5c582c96be5ea1_e7dddd7809c83dc710d472b3191bbc26" file="23" linestart="61" lineend="61" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<initlist id="76a971fe2586f5579f5c582c96be5ea1_e8782501eb8d1a7a0cb53df39ad7d34f"/>
</c>
<c name="FilePath" id="76a971fe2586f5579f5c582c96be5ea1_73a45252393bbad19f7096f35d98fdae" file="23" linestart="62" lineend="62" copyconst="true" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="rhs" proto="const testing::internal::FilePath &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="76a971fe2586f5579f5c582c96be5ea1_92c5d28c5da2d5b9e6c8893e5e28f941"/>
</rt>
</QualType>
</lrf>
</p>
<initlist id="76a971fe2586f5579f5c582c96be5ea1_e8782501eb8d1a7a0cb53df39ad7d34f"/>
</c>
<c name="FilePath" id="76a971fe2586f5579f5c582c96be5ea1_0f01f07733a527c7e3c246ed1b5d4c2c" file="23" linestart="64" lineend="66" explicit="true" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="pathname" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<initlist id="76a971fe2586f5579f5c582c96be5ea1_e8782501eb8d1a7a0cb53df39ad7d34f"/>
</c>
<c name="FilePath" id="76a971fe2586f5579f5c582c96be5ea1_8b7e00363d8648dad1850b7ee0d1e4ee" file="23" linestart="68" lineend="70" explicit="true" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="pathname" proto="const testing::internal::String &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</QualType>
</lrf>
</p>
<initlist id="76a971fe2586f5579f5c582c96be5ea1_e8782501eb8d1a7a0cb53df39ad7d34f"/>
</c>
<m name="operator=" id="76a971fe2586f5579f5c582c96be5ea1_e882977b882a7a2c9730cffdd1bbb77d" file="23" linestart="72" lineend="75" operator="true" access="public" hasbody="true" isdef="true">
<fpt proto="testing::internal::FilePath &amp;">
<lrf>
<rt>
<cr id="76a971fe2586f5579f5c582c96be5ea1_92c5d28c5da2d5b9e6c8893e5e28f941"/>
</rt>
</lrf>
</fpt>
<p name="rhs" proto="const testing::internal::FilePath &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="76a971fe2586f5579f5c582c96be5ea1_92c5d28c5da2d5b9e6c8893e5e28f941"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="Set" id="76a971fe2586f5579f5c582c96be5ea1_87f773f553cf41e1a3035cae3fb1e59d" file="23" linestart="77" lineend="79" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="rhs" proto="const testing::internal::FilePath &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="76a971fe2586f5579f5c582c96be5ea1_92c5d28c5da2d5b9e6c8893e5e28f941"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="ToString" id="76a971fe2586f5579f5c582c96be5ea1_05ef5349eeaca79464d2ea1017620fc6" file="23" linestart="81" lineend="81" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fpt>
</m>
<m name="c_str" id="76a971fe2586f5579f5c582c96be5ea1_dacd40e535a2a671a36667f75c63e680" file="23" linestart="82" lineend="82" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
<m name="MakeFileName" id="76a971fe2586f5579f5c582c96be5ea1_6675b7671bd37d2daaa87ea5d2a72909" file="23" linestart="91" lineend="94" access="public" storage="static" hasbody="true">
<fpt proto="testing::internal::FilePath">
<rt>
<cr id="76a971fe2586f5579f5c582c96be5ea1_92c5d28c5da2d5b9e6c8893e5e28f941"/>
</rt>
</fpt>
<p name="directory" proto="const testing::internal::FilePath &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="76a971fe2586f5579f5c582c96be5ea1_92c5d28c5da2d5b9e6c8893e5e28f941"/>
</rt>
</QualType>
</lrf>
</p>
<p name="base_name" proto="const testing::internal::FilePath &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="76a971fe2586f5579f5c582c96be5ea1_92c5d28c5da2d5b9e6c8893e5e28f941"/>
</rt>
</QualType>
</lrf>
</p>
<p name="number" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="extension" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</m>
<m name="ConcatPaths" id="76a971fe2586f5579f5c582c96be5ea1_954ede593b4f08b7347573c3073989fa" file="23" linestart="99" lineend="100" access="public" storage="static" hasbody="true">
<fpt proto="testing::internal::FilePath">
<rt>
<cr id="76a971fe2586f5579f5c582c96be5ea1_92c5d28c5da2d5b9e6c8893e5e28f941"/>
</rt>
</fpt>
<p name="directory" proto="const testing::internal::FilePath &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="76a971fe2586f5579f5c582c96be5ea1_92c5d28c5da2d5b9e6c8893e5e28f941"/>
</rt>
</QualType>
</lrf>
</p>
<p name="relative_path" proto="const testing::internal::FilePath &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="76a971fe2586f5579f5c582c96be5ea1_92c5d28c5da2d5b9e6c8893e5e28f941"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="GenerateUniqueFileName" id="76a971fe2586f5579f5c582c96be5ea1_a012e76e3deaf03ad6029f388595d5df" file="23" linestart="110" lineend="112" access="public" storage="static" hasbody="true">
<fpt proto="testing::internal::FilePath">
<rt>
<cr id="76a971fe2586f5579f5c582c96be5ea1_92c5d28c5da2d5b9e6c8893e5e28f941"/>
</rt>
</fpt>
<p name="directory" proto="const testing::internal::FilePath &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="76a971fe2586f5579f5c582c96be5ea1_92c5d28c5da2d5b9e6c8893e5e28f941"/>
</rt>
</QualType>
</lrf>
</p>
<p name="base_name" proto="const testing::internal::FilePath &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="76a971fe2586f5579f5c582c96be5ea1_92c5d28c5da2d5b9e6c8893e5e28f941"/>
</rt>
</QualType>
</lrf>
</p>
<p name="extension" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</m>
<m name="IsEmpty" id="76a971fe2586f5579f5c582c96be5ea1_effff0f56ef840eb0586b811dfcaeb7b" file="23" linestart="115" lineend="115" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="RemoveTrailingPathSeparator" id="76a971fe2586f5579f5c582c96be5ea1_62cbf7dc897f5028a6d9e183d0d8e627" file="23" linestart="120" lineend="120" access="public" hasbody="true">
<fpt const="true" proto="testing::internal::FilePath">
<rt>
<cr id="76a971fe2586f5579f5c582c96be5ea1_92c5d28c5da2d5b9e6c8893e5e28f941"/>
</rt>
</fpt>
</m>
<m name="RemoveDirectoryName" id="76a971fe2586f5579f5c582c96be5ea1_9ac66f715eebc7c8693970c7f5b1f978" file="23" linestart="128" lineend="128" access="public" hasbody="true">
<fpt const="true" proto="testing::internal::FilePath">
<rt>
<cr id="76a971fe2586f5579f5c582c96be5ea1_92c5d28c5da2d5b9e6c8893e5e28f941"/>
</rt>
</fpt>
</m>
<m name="RemoveFileName" id="76a971fe2586f5579f5c582c96be5ea1_879e347f81d991672bed206be6330b30" file="23" linestart="136" lineend="136" access="public" hasbody="true">
<fpt const="true" proto="testing::internal::FilePath">
<rt>
<cr id="76a971fe2586f5579f5c582c96be5ea1_92c5d28c5da2d5b9e6c8893e5e28f941"/>
</rt>
</fpt>
</m>
<m name="RemoveExtension" id="76a971fe2586f5579f5c582c96be5ea1_760b01860c77019a9d6c0dbfbcb1a62a" file="23" linestart="142" lineend="142" access="public" hasbody="true">
<fpt const="true" proto="testing::internal::FilePath">
<rt>
<cr id="76a971fe2586f5579f5c582c96be5ea1_92c5d28c5da2d5b9e6c8893e5e28f941"/>
</rt>
</fpt>
<p name="extension" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</m>
<m name="CreateDirectoriesRecursively" id="76a971fe2586f5579f5c582c96be5ea1_852b3d4d4cc08d0ece52f95ba663f430" file="23" linestart="148" lineend="148" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="CreateFolder" id="76a971fe2586f5579f5c582c96be5ea1_21871114d777451a1db9a2851d62375d" file="23" linestart="154" lineend="154" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="FileOrDirectoryExists" id="76a971fe2586f5579f5c582c96be5ea1_1bc4bd4c902030a53b24bb692e0a9e61" file="23" linestart="158" lineend="158" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="DirectoryExists" id="76a971fe2586f5579f5c582c96be5ea1_6389227b074ca6aeb6436d303866dea9" file="23" linestart="162" lineend="162" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="IsDirectory" id="76a971fe2586f5579f5c582c96be5ea1_b9c4cffc88cde5dba00646b51c7802d5" file="23" linestart="167" lineend="167" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="IsRootDirectory" id="76a971fe2586f5579f5c582c96be5ea1_a0bc324099c6479b778fe23b52c0a5d3" file="23" linestart="171" lineend="171" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="IsAbsolutePath" id="76a971fe2586f5579f5c582c96be5ea1_5fa5510cd348b0407354af215055021f" file="23" linestart="174" lineend="174" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="FindLastPathSeparator" id="76a971fe2586f5579f5c582c96be5ea1_2a7b5f4283463df3242f500a26169f3c" file="23" linestart="202" lineend="202" access="private" hasbody="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
<fl name="pathname_" id="76a971fe2586f5579f5c582c96be5ea1_e8782501eb8d1a7a0cb53df39ad7d34f" file="23" linestart="204" lineend="204" access="private" proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fl>
</cr>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="FloatingPoint" id="361592d094a324447c0b12d8c282c7d5_8b20b772b6a88799637657121329a238" file="24" linestart="346" lineend="490"/>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="TestFactoryBase" id="361592d094a324447c0b12d8c282c7d5_ebebd0ac8a5c6834880cc16f32b5b90a" file="24" linestart="538" lineend="551">
<m name="CreateTest" id="361592d094a324447c0b12d8c282c7d5_2c62252a3a42f3a4685fd20a5d3ca641" file="24" linestart="544" lineend="544" pure="true" virtual="true" access="public">
<fpt proto="testing::Test *">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_964ac3d325bf97cf954384b45d20b6e8"/>
</rt>
</pt>
</fpt>
</m>
</cr>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="TypedTestCasePState" id="361592d094a324447c0b12d8c282c7d5_3b6fae91398aac7478383f65d7317f80" file="24" linestart="612" lineend="641">
<fl name="registered_" id="361592d094a324447c0b12d8c282c7d5_ec463dddea9490fa375d5e29b2aa90d0" file="24" linestart="639" lineend="639" isLiteral="true" access="private" proto="bool">
<bt name="bool"/>
</fl>
<fl name="defined_test_names_" id="361592d094a324447c0b12d8c282c7d5_275d699ef7be184ba6fcd7ed84f23b57" file="24" linestart="640" lineend="640" access="private" proto="::std::set&lt;const char *&gt;">
<ety>
<tss>
<templatebase id="64af46afcc2890481e245e04528de1f6_30eed23d73cd29bf9c388847f6519859"/>
<template_arguments>
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</template_arguments>
</tss>
</ety>
</fl>
</cr>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="Random" id="361592d094a324447c0b12d8c282c7d5_a1fb83d720e6b12a8b1e03d27d046934" file="24" linestart="779" lineend="794">
<v name="kMaxRange" proto="const UInt32" const="true" isLiteral="true" isPrimitive="true" id="361592d094a324447c0b12d8c282c7d5_8312eb6ec5da353ea0abde5151a75411" file="24" linestart="781" lineend="781" storage="static" init="true" access2="public">
<QualType const="true">
<Tdef>
<ety>
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</ety>
</Tdef>
</QualType>
</v>
<c name="Random" id="361592d094a324447c0b12d8c282c7d5_5fc7c20b28a5d9c3db37ba246609e0f5" file="24" linestart="783" lineend="783" explicit="true" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="seed" proto="UInt32" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<ety>
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</ety>
</Tdef>
</p>
<initlist id="361592d094a324447c0b12d8c282c7d5_6f8bda852823999c8dd92ee7a0f78498"/>
</c>
<m name="Reseed" id="361592d094a324447c0b12d8c282c7d5_7fd917656446b5c82f7c64a5d0d44fd0" file="24" linestart="785" lineend="785" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="seed" proto="UInt32" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<ety>
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</ety>
</Tdef>
</p>
</m>
<fl name="state_" id="361592d094a324447c0b12d8c282c7d5_6f8bda852823999c8dd92ee7a0f78498" file="24" linestart="792" lineend="792" isLiteral="true" access="private" proto="UInt32">
<Tdef>
<ety>
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</ety>
</Tdef>
</fl>
</cr>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="DeathTest" id="a5e1300df8ffa37265adb036c8d3b481_a1b4823845415397245f213d259859f2" file="25" linestart="69" lineend="137">
<c name="DeathTest" id="a5e1300df8ffa37265adb036c8d3b481_df1ae75fa3eb79f45bbf5f3b6e406423" file="25" linestart="81" lineend="81" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
<e parent="a5e1300df8ffa37265adb036c8d3b481_a1b4823845415397245f213d259859f2" access="public" name="TestRole" id="a5e1300df8ffa37265adb036c8d3b481_8fccf608553b8e8bd51bec5cb0d23469" file="25" linestart="99" lineend="99" fixed="true">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
<ec name="OVERSEE_TEST" id="a5e1300df8ffa37265adb036c8d3b481_c87a34760d51c7f462c924ffcf83cb17" file="25" linestart="99" lineend="99">
<et>
<e id="a5e1300df8ffa37265adb036c8d3b481_8fccf608553b8e8bd51bec5cb0d23469"/>
</et>
</ec>
<ec name="EXECUTE_TEST" id="a5e1300df8ffa37265adb036c8d3b481_afe4fb80acb5ef55f28fd744161a3c03" file="25" linestart="99" lineend="99">
<et>
<e id="a5e1300df8ffa37265adb036c8d3b481_8fccf608553b8e8bd51bec5cb0d23469"/>
</et>
</ec>
</e>
<e parent="a5e1300df8ffa37265adb036c8d3b481_a1b4823845415397245f213d259859f2" access="public" name="AbortReason" id="a5e1300df8ffa37265adb036c8d3b481_4e50cb8faa525da7d276bd597dfc8be4" file="25" linestart="102" lineend="106" fixed="true">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
<ec name="TEST_THREW_EXCEPTION" id="a5e1300df8ffa37265adb036c8d3b481_9d11289cf5e7c500e819e5f28e932d50" file="25" linestart="104" lineend="104">
<et>
<e id="a5e1300df8ffa37265adb036c8d3b481_4e50cb8faa525da7d276bd597dfc8be4"/>
</et>
</ec>
<ec name="TEST_DID_NOT_DIE" id="a5e1300df8ffa37265adb036c8d3b481_7c193df15101d225e93070335a76ba3e" file="25" linestart="105" lineend="105">
<et>
<e id="a5e1300df8ffa37265adb036c8d3b481_4e50cb8faa525da7d276bd597dfc8be4"/>
</et>
</ec>
</e>
<m name="set_last_death_test_message" id="a5e1300df8ffa37265adb036c8d3b481_a538b58776d57dcdafb1c23a0b94c8a5" file="25" linestart="130" lineend="130" access="public" storage="static" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="message" proto="const testing::internal::String &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<v name="last_death_test_message_" proto="testing::internal::String" id="a5e1300df8ffa37265adb036c8d3b481_a31f1856816fe5c8e5b808c50601f94f" file="25" linestart="134" lineend="134" storage="static" access2="private">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</v>
</cr>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="DeathTestFactory" id="a5e1300df8ffa37265adb036c8d3b481_99ec99faeeff8cf9c51caa6ba62aa192" file="25" linestart="140" lineend="145">
<m name="Create" id="a5e1300df8ffa37265adb036c8d3b481_5e2d888d59ffe82308094a5d6669e25f" file="25" linestart="143" lineend="144" pure="true" virtual="true" access="public">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="statement" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="regex" proto="const testing::internal::RE *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="0c2fb77eb4696cd7e7faa021a7cafdaf_cb2d54a7ddf688f78bbcd48da4ea1b1a"/>
</rt>
</QualType>
</pt>
</p>
<p name="file" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="line" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="test" proto="testing::internal::DeathTest **" isPtr="true" isLiteral="true" access2="none">
<pt>
<pt>
<rt>
<cr id="a5e1300df8ffa37265adb036c8d3b481_a1b4823845415397245f213d259859f2"/>
</rt>
</pt>
</pt>
</p>
</m>
</cr>
<cr namespace="testing.internal" access="none" depth="1" kind="class" name="DefaultDeathTestFactory" id="a5e1300df8ffa37265adb036c8d3b481_5f4b5e5c4144c22d90442e132f0ae153" file="25" linestart="148" lineend="152">
<base access="public">
<rt>
<cr id="a5e1300df8ffa37265adb036c8d3b481_99ec99faeeff8cf9c51caa6ba62aa192"/>
</rt>
</base>
<c name="DefaultDeathTestFactory" id="a5e1300df8ffa37265adb036c8d3b481_a2f51d00c4bab0febb4748697e3e94c3" file="25" linestart="148" lineend="148" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="InternalRunDeathTestFlag" id="a5e1300df8ffa37265adb036c8d3b481_4a18b61493bfca3d0db12970c7ef4cd5" file="25" linestart="221" lineend="247">
<c name="InternalRunDeathTestFlag" id="a5e1300df8ffa37265adb036c8d3b481_953114916661516530d5035ac173b42b" file="25" linestart="223" lineend="228" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="a_file" proto="const testing::internal::String &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</QualType>
</lrf>
</p>
<p name="a_line" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="an_index" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="a_write_fd" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<initlist id="a5e1300df8ffa37265adb036c8d3b481_89b34aac7b7cb76b3744d1ef33ffc486"/>
<initlist id="a5e1300df8ffa37265adb036c8d3b481_c5eeb7df4d1a2e62f13b036feef9371e"/>
<initlist id="a5e1300df8ffa37265adb036c8d3b481_098a680e19bbc6536fb75ec862e05be1"/>
<initlist id="a5e1300df8ffa37265adb036c8d3b481_29a5ee8013a6ca84eb12ce09eec6332b"/>
</c>
<m name="file" id="a5e1300df8ffa37265adb036c8d3b481_316a2f733d834fcc55b948b3d1512e9d" file="25" linestart="235" lineend="235" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fpt>
</m>
<m name="line" id="a5e1300df8ffa37265adb036c8d3b481_9177313938ed2b16ede7e7a768a3082b" file="25" linestart="236" lineend="236" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="index" id="a5e1300df8ffa37265adb036c8d3b481_cb4281322c5be55299d2015beedddd02" file="25" linestart="237" lineend="237" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="write_fd" id="a5e1300df8ffa37265adb036c8d3b481_ef1727ca52d11944d7b552c0de39293e" file="25" linestart="238" lineend="238" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="ExitedWithCode" id="968f001f49ab9e1602e0026497dbac2b_18c2eee36753e4ec3b03f6d10627f6ff" file="26" linestart="179" lineend="188">
<c name="ExitedWithCode" id="968f001f49ab9e1602e0026497dbac2b_50f87c9dc4719a9e3cbec9c210618bdf" file="26" linestart="181" lineend="181" explicit="true" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="exit_code" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</c>
<m name="operator()" id="968f001f49ab9e1602e0026497dbac2b_00f5f9cb0b5b1d976222e695c946d594" file="26" linestart="182" lineend="182" operator="true" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="exit_status" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</m>
<fl name="exit_code_" id="968f001f49ab9e1602e0026497dbac2b_4abd9f0df0457fdd8ffb15fd097ea9ab" file="26" linestart="187" lineend="187" isLiteral="true" access="private" proto="const int">
<QualType const="true">
<bt name="int"/>
</QualType>
</fl>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="Message" id="d6da877cd43d9ea62976e055cbb7a3f4_a57271b22cdb2fdb3d50588243bf5562" file="27" linestart="82" lineend="221" previous="361592d094a324447c0b12d8c282c7d5_a57271b22cdb2fdb3d50588243bf5562">
<c name="Message" id="d6da877cd43d9ea62976e055cbb7a3f4_21a3d36d55284f1d8751ec8cddd8c404" file="27" linestart="94" lineend="98" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<initlist id="d6da877cd43d9ea62976e055cbb7a3f4_b337e99236191cea06ced5fb66037052"/>
</c>
<c name="Message" id="d6da877cd43d9ea62976e055cbb7a3f4_945354a9fe012fffc0bdded1265d77a7" file="27" linestart="101" lineend="103" copyconst="true" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="msg" proto="const testing::Message &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="d6da877cd43d9ea62976e055cbb7a3f4_a57271b22cdb2fdb3d50588243bf5562"/>
</rt>
</QualType>
</lrf>
</p>
<initlist id="d6da877cd43d9ea62976e055cbb7a3f4_b337e99236191cea06ced5fb66037052"/>
</c>
<ft name="operator&lt;&lt;" id="d6da877cd43d9ea62976e055cbb7a3f4_763fb98e0dd7720ad8e74ed68b95460c" file="27" linestart="119" lineend="123">
<template_parameters>
<ttp name="T" id="d6da877cd43d9ea62976e055cbb7a3f4_e0dbeb6f0634b8dd5ecb4e7fddeb5947" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<m name="operator&lt;&lt;" id="d6da877cd43d9ea62976e055cbb7a3f4_14a926ad8446b77cb10233f85430f517" file="27" linestart="120" lineend="123" operator="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt proto="testing::Message &amp;">
<lrf>
<rt>
<cr id="d6da877cd43d9ea62976e055cbb7a3f4_a57271b22cdb2fdb3d50588243bf5562"/>
</rt>
</lrf>
</fpt>
<p name="val" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</m>
</ft>
<ft name="operator&lt;&lt;" id="d6da877cd43d9ea62976e055cbb7a3f4_763fb98e0dd7720ad8e74ed68b95460c" file="27" linestart="138" lineend="146">
<template_parameters>
<ttp name="T" id="d6da877cd43d9ea62976e055cbb7a3f4_ee798fac53941e6754f299e9fd40f8f3" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<m name="operator&lt;&lt;" id="d6da877cd43d9ea62976e055cbb7a3f4_cb6f3677b2fde44fcb5ea37e5f6a0da4" file="27" linestart="139" lineend="146" operator="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt proto="testing::Message &amp;">
<lrf>
<rt>
<cr id="d6da877cd43d9ea62976e055cbb7a3f4_a57271b22cdb2fdb3d50588243bf5562"/>
</rt>
</lrf>
</fpt>
<p name="pointer" proto="T *const &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<pt>
<ttp/>
</pt>
</QualType>
</lrf>
</p>
</m>
</ft>
<m name="GetString" id="d6da877cd43d9ea62976e055cbb7a3f4_edfbd2fd125c37c25cc19b8fa854d419" file="27" linestart="190" lineend="192" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="internal::String">
<ety>
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</ety>
</fpt>
</m>
</cr>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="ParameterizedTestCaseRegistry" id="f3b547dc1d8442e0b93fbb12c74b12b0_73675b5fb9ba1160f5962d5b15ba2742" file="28" linestart="556" lineend="612">
<c name="ParameterizedTestCaseRegistry" id="f3b547dc1d8442e0b93fbb12c74b12b0_943e5f0b13666bb6968b79215caf72ed" file="28" linestart="558" lineend="558" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
<m name="RegisterTests" id="f3b547dc1d8442e0b93fbb12c74b12b0_5fff43ca8b138611c80bac1b2f7d073e" file="28" linestart="599" lineend="604" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="TestPartResult" id="562ee964b610e766d302b8dfed46fd41_5f4fb82d9196d416897f8942199b65f3" file="29" linestart="47" lineend="114" previous="361592d094a324447c0b12d8c282c7d5_5f4fb82d9196d416897f8942199b65f3">
<e parent="562ee964b610e766d302b8dfed46fd41_5f4fb82d9196d416897f8942199b65f3" access="public" name="Type" id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1" file="29" linestart="51" lineend="55" fixed="true">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
<ec name="kSuccess" id="562ee964b610e766d302b8dfed46fd41_e919f9d15a92a845773eebe8117e281e" file="29" linestart="52" lineend="52">
<et>
<e id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1"/>
</et>
</ec>
<ec name="kNonFatalFailure" id="562ee964b610e766d302b8dfed46fd41_383aae76b62cf18ba08225968ae6e7a3" file="29" linestart="53" lineend="53">
<et>
<e id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1"/>
</et>
</ec>
<ec name="kFatalFailure" id="562ee964b610e766d302b8dfed46fd41_eacd07025a4b6e36b1bcec4641b342a0" file="29" linestart="54" lineend="54">
<et>
<e id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1"/>
</et>
</ec>
</e>
<c name="TestPartResult" id="562ee964b610e766d302b8dfed46fd41_097232e0334fb491c996f7e7907f2a64" file="29" linestart="60" lineend="69" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="a_type" proto="testing::TestPartResult::Type" isLiteral="true" access2="none">
<et>
<e id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1"/>
</et>
</p>
<p name="a_file_name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="a_line_number" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="a_message" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<initlist id="562ee964b610e766d302b8dfed46fd41_bde7dec1617b1b572a2bbb6b8e74ac45"/>
<initlist id="562ee964b610e766d302b8dfed46fd41_684dd0b4e65fda58f7c2f10f75e68ad2"/>
<initlist id="562ee964b610e766d302b8dfed46fd41_340204f293da2781044fa2f91afc28e6"/>
<initlist id="562ee964b610e766d302b8dfed46fd41_8bc1e4111a0413d3522d1bd197b800aa"/>
<initlist id="562ee964b610e766d302b8dfed46fd41_8c9256687e919f5b2ef785881308e794"/>
</c>
<m name="type" id="562ee964b610e766d302b8dfed46fd41_b74784abdab02b92e58622c1b275417e" file="29" linestart="72" lineend="72" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="testing::TestPartResult::Type">
<et>
<e id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1"/>
</et>
</fpt>
</m>
<m name="file_name" id="562ee964b610e766d302b8dfed46fd41_6539525aa7a603136b9def24f649545e" file="29" linestart="76" lineend="76" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
<m name="line_number" id="562ee964b610e766d302b8dfed46fd41_edebe858dc0fbc2539e90c2c7ca6fc06" file="29" linestart="80" lineend="80" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="summary" id="562ee964b610e766d302b8dfed46fd41_a10df05ac877469a2437c12d74879ce8" file="29" linestart="83" lineend="83" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
<m name="message" id="562ee964b610e766d302b8dfed46fd41_e4b4ccdee991cacca43a57ac027c1e21" file="29" linestart="86" lineend="86" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
<m name="failed" id="562ee964b610e766d302b8dfed46fd41_daba98ca08f53f625dcc1dc59837f76d" file="29" linestart="92" lineend="92" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="nonfatally_failed" id="562ee964b610e766d302b8dfed46fd41_caf298a43086bc01afea9e8ed06ba05e" file="29" linestart="95" lineend="95" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="fatally_failed" id="562ee964b610e766d302b8dfed46fd41_b17de148ab306362a8377eb58aa7d7da" file="29" linestart="98" lineend="98" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<c name="TestPartResult" id="562ee964b610e766d302b8dfed46fd41_e290670a9ce3ad2d43ce1001bf035379" file="29" linestart="47" lineend="47" copyconst="true" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="const testing::TestPartResult &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_5f4fb82d9196d416897f8942199b65f3"/>
</rt>
</QualType>
</lrf>
</p>
</c>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="TestPartResultArray" id="562ee964b610e766d302b8dfed46fd41_d8cc03e056c4d71dd3854a7983b2cf17" file="29" linestart="123" lineend="140">
<m name="Append" id="562ee964b610e766d302b8dfed46fd41_a088ce2b215fdb7efdc09ef41457f3d0" file="29" linestart="128" lineend="128" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="result" proto="const testing::TestPartResult &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_5f4fb82d9196d416897f8942199b65f3"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="GetTestPartResult" id="562ee964b610e766d302b8dfed46fd41_1e906ba7db19d32d6c90863531d61e6b" file="29" linestart="131" lineend="131" access="public" hasbody="true">
<fpt const="true" proto="const testing::TestPartResult &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_5f4fb82d9196d416897f8942199b65f3"/>
</rt>
</QualType>
</lrf>
</fpt>
<p name="index" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</m>
<m name="size" id="562ee964b610e766d302b8dfed46fd41_eed65413700ba1afa750d1ce9647e2f4" file="29" linestart="134" lineend="134" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<fl name="array_" id="562ee964b610e766d302b8dfed46fd41_99829d61fbefb2e64f7e402e8f8cc144" file="29" linestart="137" lineend="137" access="private" proto="std::vector&lt;TestPartResult&gt;">
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_5f4fb82d9196d416897f8942199b65f3"/>
</rt>
</template_arguments>
</tss>
</ety>
</fl>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="TestPartResultReporterInterface" id="562ee964b610e766d302b8dfed46fd41_d5a15b3fc1e0e6a1ab4576ee72e71b7d" file="29" linestart="143" lineend="148">
<m name="ReportTestPartResult" id="562ee964b610e766d302b8dfed46fd41_e1f43d816e5b2e4322189f48e80f6ebf" file="29" linestart="147" lineend="147" pure="true" virtual="true" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="result" proto="const testing::TestPartResult &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_5f4fb82d9196d416897f8942199b65f3"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<c name="TestPartResultReporterInterface" id="562ee964b610e766d302b8dfed46fd41_830db29693c9d7f5cdfba17698cc9f51" file="29" linestart="143" lineend="143" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr namespace="testing.internal" access="none" depth="1" kind="class" name="HasNewFatalFailureHelper" id="562ee964b610e766d302b8dfed46fd41_f57a017ab4ade1af61a756f8db743637" file="29" linestart="158" lineend="170">
<base access="public">
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_d5a15b3fc1e0e6a1ab4576ee72e71b7d"/>
</rt>
</base>
<fl name="has_new_fatal_failure_" id="562ee964b610e766d302b8dfed46fd41_c76b7247212d016298737ef3bb3a2cf2" file="29" linestart="166" lineend="166" isLiteral="true" access="private" proto="bool">
<bt name="bool"/>
</fl>
<fl name="original_reporter_" id="562ee964b610e766d302b8dfed46fd41_e0ddddb59ca9c3e6d409e9107dc03f48" file="29" linestart="167" lineend="167" isPtr="true" isLiteral="true" access="private" proto="testing::TestPartResultReporterInterface *">
<pt>
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_d5a15b3fc1e0e6a1ab4576ee72e71b7d"/>
</rt>
</pt>
</fl>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="AssertionResult" id="0dc4cd8d4d61c13ddce2ee0effc89eca_1b0b5edb5a536c8577b46f6e0d5d791d" file="30" linestart="265" lineend="321" previous="361592d094a324447c0b12d8c282c7d5_1b0b5edb5a536c8577b46f6e0d5d791d">
<c name="AssertionResult" id="0dc4cd8d4d61c13ddce2ee0effc89eca_90376d02aab3f76734cce9b29267f2af" file="30" linestart="269" lineend="269" copyconst="true" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="other" proto="const testing::AssertionResult &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_1b0b5edb5a536c8577b46f6e0d5d791d"/>
</rt>
</QualType>
</lrf>
</p>
</c>
<c name="AssertionResult" id="0dc4cd8d4d61c13ddce2ee0effc89eca_fee14873f9723f27fcfae57f274d270a" file="30" linestart="271" lineend="271" explicit="true" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="success" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
<initlist id="0dc4cd8d4d61c13ddce2ee0effc89eca_8990cdf704a69c8c0203b7ece72cad83"/>
</c>
<cv name="operator bool" id="0dc4cd8d4d61c13ddce2ee0effc89eca_c2f20ab10b1a1c248f08973b7014d633" file="30" linestart="274" lineend="274" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</cv>
<m name="message" id="0dc4cd8d4d61c13ddce2ee0effc89eca_ea4dfe15bd0b6122a1eea0760afdef86" file="30" linestart="283" lineend="285" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
<m name="failure_message" id="0dc4cd8d4d61c13ddce2ee0effc89eca_50b6fa066d3e0d41ee32ad34528c8103" file="30" linestart="288" lineend="288" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
<ft name="operator&lt;&lt;" id="0dc4cd8d4d61c13ddce2ee0effc89eca_2fc2b806728a2414c404e204aac86ae0" file="30" linestart="291" lineend="294">
<template_parameters>
<ttp name="T" id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae3b62c048c0f2225490c2c9f60542c0" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<m name="operator&lt;&lt;" id="0dc4cd8d4d61c13ddce2ee0effc89eca_0d20da5329adb3b8b2530bdf8a473038" file="30" linestart="291" lineend="294" operator="true" access="public" hasbody="true" isdef="true">
<fpt proto="testing::AssertionResult &amp;">
<lrf>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_1b0b5edb5a536c8577b46f6e0d5d791d"/>
</rt>
</lrf>
</fpt>
<p name="value" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</m>
</ft>
<fl name="success_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_8990cdf704a69c8c0203b7ece72cad83" file="30" linestart="313" lineend="313" isLiteral="true" access="private" proto="bool">
<bt name="bool"/>
</fl>
<fl name="message_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_f0da952fb09a8a67186ba7bf989280ea" file="30" linestart="318" lineend="318" access="private" proto="internal::scoped_ptr&lt; ::std::string&gt;">
<ety>
<tss>
<templatebase id="0c2fb77eb4696cd7e7faa021a7cafdaf_d3f221d1604a5492e753f569b64a4a06"/>
<template_arguments>
<ety>
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<bt name="char"/>
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_bf3447e13ccfc57e5fa847f5d78e7639"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
<tss>
<templatebase id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_07566aa809aee0bdf1c0fac16e19fa85"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</Tdef>
</ety>
</template_arguments>
</tss>
</ety>
</fl>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="Test" id="0dc4cd8d4d61c13ddce2ee0effc89eca_964ac3d325bf97cf954384b45d20b6e8" file="30" linestart="356" lineend="463" previous="0dc4cd8d4d61c13ddce2ee0effc89eca_964ac3d325bf97cf954384b45d20b6e8">
<m name="HasFatalFailure" id="0dc4cd8d4d61c13ddce2ee0effc89eca_f797bb8189d49583ab7d7a4eff602d16" file="30" linestart="385" lineend="385" access="public" storage="static" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="RecordProperty" id="0dc4cd8d4d61c13ddce2ee0effc89eca_ddfe565be21256301d99f6a5d9feaafa" file="30" linestart="406" lineend="406" access="public" storage="static" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="key" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</m>
<m name="SetUp" id="0dc4cd8d4d61c13ddce2ee0effc89eca_122bfd938ad4824a608e41c9e715f32d" file="30" linestart="414" lineend="414" virtual="true" access="protected" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="TearDown" id="0dc4cd8d4d61c13ddce2ee0effc89eca_8fd9d7d4f4f9fbd14891afeee0eb4a35" file="30" linestart="417" lineend="417" virtual="true" access="protected" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="HasSameFixtureClass" id="0dc4cd8d4d61c13ddce2ee0effc89eca_110080f060a9a22e8fd5697f09aab891" file="30" linestart="422" lineend="422" access="private" storage="static" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="TestBody" id="0dc4cd8d4d61c13ddce2ee0effc89eca_288c618b38de3052153ad17fe7b2fc5f" file="30" linestart="430" lineend="430" pure="true" virtual="true" access="private">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="Run" id="0dc4cd8d4d61c13ddce2ee0effc89eca_21fc23f3bce9f203b2a2f7abb61f44a0" file="30" linestart="433" lineend="433" access="private" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="DeleteSelf_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_0456c47f2f77529cf3da982b087df342" file="30" linestart="437" lineend="437" access="private" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<fl name="gtest_flag_saver_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_297977398b7666da5dbfa4d7e6bf5029" file="30" linestart="440" lineend="440" isPtr="true" isLiteral="true" access="private" proto="const internal::GTestFlagSaver *const">
<QualType const="true">
<pt>
<QualType const="true">
<ety>
<rt>
<cr id="af5d4310224b86b937fe98ebc412e239_b4cf0a4b36d017fc75f9a5a6c87d775e"/>
</rt>
</ety>
</QualType>
</pt>
</QualType>
</fl>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="TestProperty" id="0dc4cd8d4d61c13ddce2ee0effc89eca_83d8ddcaa2b0b86ccb9b0842440caf09" file="30" linestart="471" lineend="500">
<c name="TestProperty" id="0dc4cd8d4d61c13ddce2ee0effc89eca_2450033a5ab3c4bdfcb3d6d834b15f25" file="30" linestart="476" lineend="478" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="a_key" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="a_value" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<initlist id="0dc4cd8d4d61c13ddce2ee0effc89eca_78ef026cbacfa3b11c9e754b4b6a4c89"/>
<initlist id="0dc4cd8d4d61c13ddce2ee0effc89eca_d3e41efc5902afe6265c87c1f2e3e71c"/>
</c>
<m name="key" id="0dc4cd8d4d61c13ddce2ee0effc89eca_46def1f3ce9d8100bcaa45f7eb1ca59e" file="30" linestart="481" lineend="483" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
<m name="value" id="0dc4cd8d4d61c13ddce2ee0effc89eca_8a4522df2b3d0d706f14351261c9cd03" file="30" linestart="486" lineend="488" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
<m name="SetValue" id="0dc4cd8d4d61c13ddce2ee0effc89eca_eab493b4bcfb8741eeaf50036dc0dfc0" file="30" linestart="491" lineend="493" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="new_value" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</m>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="TestResult" id="0dc4cd8d4d61c13ddce2ee0effc89eca_3beb801c15cfd30bf754349ba324caaf" file="30" linestart="508" lineend="612">
<c name="TestResult" id="0dc4cd8d4d61c13ddce2ee0effc89eca_20b02c3646696ba295523ec7180523fb" file="30" linestart="511" lineend="511" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
<m name="total_part_count" id="0dc4cd8d4d61c13ddce2ee0effc89eca_7974471c6c15d082ff78467e274f436e" file="30" linestart="518" lineend="518" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="test_property_count" id="0dc4cd8d4d61c13ddce2ee0effc89eca_7068fbbbf50cced8b43cec48490ae151" file="30" linestart="521" lineend="521" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="Passed" id="0dc4cd8d4d61c13ddce2ee0effc89eca_f7b197a55788a26ef54d08bdadefbb14" file="30" linestart="524" lineend="524" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="Failed" id="0dc4cd8d4d61c13ddce2ee0effc89eca_5952175470437769e4c7ff500c0b912a" file="30" linestart="527" lineend="527" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="HasFatalFailure" id="0dc4cd8d4d61c13ddce2ee0effc89eca_20f26ee3a7fed46b6902e14ecd243006" file="30" linestart="530" lineend="530" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="HasNonfatalFailure" id="0dc4cd8d4d61c13ddce2ee0effc89eca_dda65ec500e2928ce17c2c0074b02b78" file="30" linestart="533" lineend="533" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="elapsed_time" id="0dc4cd8d4d61c13ddce2ee0effc89eca_e0a31a3328026a420956fdb5991c9e43" file="30" linestart="536" lineend="536" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="TimeInMillis">
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<bt name="long long"/>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</fpt>
</m>
<m name="GetTestPartResult" id="0dc4cd8d4d61c13ddce2ee0effc89eca_f493cc852b378672fc1972110e3d0e24" file="30" linestart="541" lineend="541" access="public" hasbody="true">
<fpt const="true" proto="const testing::TestPartResult &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_5f4fb82d9196d416897f8942199b65f3"/>
</rt>
</QualType>
</lrf>
</fpt>
<p name="i" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</m>
<m name="GetTestProperty" id="0dc4cd8d4d61c13ddce2ee0effc89eca_c78cd7c08e1c415524a1cdcab2da241d" file="30" linestart="546" lineend="546" access="public" hasbody="true">
<fpt const="true" proto="const testing::TestProperty &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_83d8ddcaa2b0b86ccb9b0842440caf09"/>
</rt>
</QualType>
</lrf>
</fpt>
<p name="i" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</m>
<m name="set_elapsed_time" id="0dc4cd8d4d61c13ddce2ee0effc89eca_83e8bf8f197d5a625c4bd61df56914d6" file="30" linestart="568" lineend="568" access="private" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="elapsed" proto="TimeInMillis" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<bt name="long long"/>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</p>
</m>
<m name="RecordProperty" id="0dc4cd8d4d61c13ddce2ee0effc89eca_344506dc76972628ee000a0f4d6847bf" file="30" linestart="575" lineend="575" access="private" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="test_property" proto="const testing::TestProperty &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_83d8ddcaa2b0b86ccb9b0842440caf09"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="ValidateTestProperty" id="0dc4cd8d4d61c13ddce2ee0effc89eca_f00d8840e1c8936e5ed262c6dc5a83b5" file="30" linestart="580" lineend="580" access="private" storage="static" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="test_property" proto="const testing::TestProperty &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_83d8ddcaa2b0b86ccb9b0842440caf09"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="AddTestPartResult" id="0dc4cd8d4d61c13ddce2ee0effc89eca_1be117a89170b73def088efda77a131a" file="30" linestart="583" lineend="583" access="private" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="test_part_result" proto="const testing::TestPartResult &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_5f4fb82d9196d416897f8942199b65f3"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="death_test_count" id="0dc4cd8d4d61c13ddce2ee0effc89eca_f3dcf5ef203a5b20b960fcd0564f9b3c" file="30" linestart="586" lineend="586" access="private" hasbody="true" isdef="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<fl name="test_properites_mutex_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_a4c0faa803260f37ea1ecf350fc28dfc" file="30" linestart="599" lineend="599" access="private" proto="internal::Mutex">
<ety>
<rt>
<cr id="0c2fb77eb4696cd7e7faa021a7cafdaf_47a1d46d61347c3a3bf14ddddbcf3474"/>
</rt>
</ety>
</fl>
<fl name="test_part_results_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_19c29f1aa67f705c71a7968756a3f888" file="30" linestart="602" lineend="602" access="private" proto="std::vector&lt;TestPartResult&gt;">
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_5f4fb82d9196d416897f8942199b65f3"/>
</rt>
</template_arguments>
</tss>
</ety>
</fl>
<fl name="test_properties_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_b42c00b3389fab15059687776b0c2fbd" file="30" linestart="604" lineend="604" access="private" proto="std::vector&lt;TestProperty&gt;">
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_83d8ddcaa2b0b86ccb9b0842440caf09"/>
</rt>
</template_arguments>
</tss>
</ety>
</fl>
<fl name="death_test_count_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_c92b153b6e0e1a12ad941f86f36629df" file="30" linestart="606" lineend="606" isLiteral="true" access="private" proto="int">
<bt name="int"/>
</fl>
<fl name="elapsed_time_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_8d419c645e6f755b6a806e4e58c023e5" file="30" linestart="608" lineend="608" isLiteral="true" access="private" proto="TimeInMillis">
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<bt name="long long"/>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</fl>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="TestInfo" id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e" file="30" linestart="625" lineend="735" previous="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e">
<m name="test_case_name" id="0dc4cd8d4d61c13ddce2ee0effc89eca_2e2a303367f3c8ee949a9925a8765330" file="30" linestart="632" lineend="632" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
<m name="name" id="0dc4cd8d4d61c13ddce2ee0effc89eca_0e8766404be02999ca45c7982b2aab44" file="30" linestart="635" lineend="635" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
<m name="type_param" id="0dc4cd8d4d61c13ddce2ee0effc89eca_4e9b1b1faab1b1fb2fbf234fedb1e7e7" file="30" linestart="639" lineend="643" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
<m name="value_param" id="0dc4cd8d4d61c13ddce2ee0effc89eca_3be669ec66248a924a7a6b49cece302b" file="30" linestart="647" lineend="651" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
<m name="should_run" id="0dc4cd8d4d61c13ddce2ee0effc89eca_c5c32793918850b64d2fae62e186127e" file="30" linestart="669" lineend="669" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="result" id="0dc4cd8d4d61c13ddce2ee0effc89eca_f46d17db5b1b3b8a1aeab2c0b05d1fca" file="30" linestart="672" lineend="672" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const testing::TestResult *">
<pt>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_3beb801c15cfd30bf754349ba324caaf"/>
</rt>
</QualType>
</pt>
</fpt>
</m>
<c name="TestInfo" id="0dc4cd8d4d61c13ddce2ee0effc89eca_eba03cfdc0087fe0b328b5f577bb8193" file="30" linestart="693" lineend="697" access="private" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="test_case_name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="a_type_param" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="a_value_param" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="fixture_class_id" proto="internal::TypeId" isPtr="true" isLiteral="true" access2="none">
<ety>
<Tdef>
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</Tdef>
</ety>
</p>
<p name="factory" proto="internal::TestFactoryBase *" isPtr="true" isLiteral="true" access2="none">
<pt>
<ety>
<rt>
<cr id="361592d094a324447c0b12d8c282c7d5_ebebd0ac8a5c6834880cc16f32b5b90a"/>
</rt>
</ety>
</pt>
</p>
</c>
<m name="increment_death_test_count" id="0dc4cd8d4d61c13ddce2ee0effc89eca_e4deca9466fa0a94532406f284d3739a" file="30" linestart="701" lineend="703" access="private" hasbody="true" isdef="true">
<fpt proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="Run" id="0dc4cd8d4d61c13ddce2ee0effc89eca_72cb7ac38371269fe0b71703d7a2ea06" file="30" linestart="707" lineend="707" access="private" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="ClearTestResult" id="0dc4cd8d4d61c13ddce2ee0effc89eca_4d5d34f050052958a045392b6c7e69d7" file="30" linestart="709" lineend="711" access="private" storage="static" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="test_info" proto="testing::TestInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
</rt>
</pt>
</p>
</m>
<fl name="fixture_class_id_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_81d7f9ed64a74bc05548dfa27320e587" file="30" linestart="722" lineend="722" isPtr="true" isLiteral="true" access="private" proto="const internal::TypeId">
<QualType const="true">
<ety>
<Tdef>
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</Tdef>
</ety>
</QualType>
</fl>
<fl name="should_run_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_44f9d69f466811d593bccaae231e73cf" file="30" linestart="723" lineend="723" isLiteral="true" access="private" proto="bool">
<bt name="bool"/>
</fl>
<fl name="is_disabled_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_d4dd69f5cf91a0896d34b2be29f58bd7" file="30" linestart="724" lineend="724" isLiteral="true" access="private" proto="bool">
<bt name="bool"/>
</fl>
<fl name="matches_filter_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_89654a634bc6a3c3b9c756248ed6f013" file="30" linestart="725" lineend="725" isLiteral="true" access="private" proto="bool">
<bt name="bool"/>
</fl>
<fl name="factory_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_b40fe1bcddc416e6e355b178117383a4" file="30" linestart="727" lineend="727" isPtr="true" isLiteral="true" access="private" proto="internal::TestFactoryBase *const">
<QualType const="true">
<pt>
<ety>
<rt>
<cr id="361592d094a324447c0b12d8c282c7d5_ebebd0ac8a5c6834880cc16f32b5b90a"/>
</rt>
</ety>
</pt>
</QualType>
</fl>
<fl name="result_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_8512f7f1a7f6da02fc79eb49db1260a9" file="30" linestart="732" lineend="732" access="private" proto="testing::TestResult">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_3beb801c15cfd30bf754349ba324caaf"/>
</rt>
</fl>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="TestCase" id="0dc4cd8d4d61c13ddce2ee0effc89eca_0c20437d408165b2bab4427d0d53ab50" file="30" linestart="740" lineend="894" previous="0dc4cd8d4d61c13ddce2ee0effc89eca_0c20437d408165b2bab4427d0d53ab50">
<c name="TestCase" id="0dc4cd8d4d61c13ddce2ee0effc89eca_a9fc7f388ff898581321552383325539" file="30" linestart="754" lineend="756" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="a_type_param" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="set_up_tc" proto="Test::SetUpTestCaseFunc" isPtr="true" isLiteral="true" access2="none">
<ety>
<Tdef>
<ety>
<Tdef>
<pt>
<Paren/>
</pt>
</Tdef>
</ety>
</Tdef>
</ety>
</p>
<p name="tear_down_tc" proto="Test::TearDownTestCaseFunc" isPtr="true" isLiteral="true" access2="none">
<ety>
<Tdef>
<ety>
<Tdef>
<pt>
<Paren/>
</pt>
</Tdef>
</ety>
</Tdef>
</ety>
</p>
</c>
<m name="name" id="0dc4cd8d4d61c13ddce2ee0effc89eca_1c77fc9b87a1a72389781ef8a351cd97" file="30" linestart="762" lineend="762" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
<m name="type_param" id="0dc4cd8d4d61c13ddce2ee0effc89eca_e59c1ce1f9da71d5c7fa8902bf87c76d" file="30" linestart="766" lineend="770" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
<m name="should_run" id="0dc4cd8d4d61c13ddce2ee0effc89eca_5646f6b64476d488e76fe496a07082bc" file="30" linestart="773" lineend="773" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="successful_test_count" id="0dc4cd8d4d61c13ddce2ee0effc89eca_cd8ae26cdf77f23cbe3c20a6ed8f91e4" file="30" linestart="776" lineend="776" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="failed_test_count" id="0dc4cd8d4d61c13ddce2ee0effc89eca_18d31e5f7eafe5ac689f445f08129baf" file="30" linestart="779" lineend="779" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="disabled_test_count" id="0dc4cd8d4d61c13ddce2ee0effc89eca_c20fc1877cddc5d5d6d39f63d053adbb" file="30" linestart="782" lineend="782" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="test_to_run_count" id="0dc4cd8d4d61c13ddce2ee0effc89eca_01e053f3bfe647eca7deec56d33321e0" file="30" linestart="785" lineend="785" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="total_test_count" id="0dc4cd8d4d61c13ddce2ee0effc89eca_4572b8827870dccdc4796a30a7832555" file="30" linestart="788" lineend="788" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="Passed" id="0dc4cd8d4d61c13ddce2ee0effc89eca_2ad4116e49d7d04e95e8e6481cdd8b8a" file="30" linestart="791" lineend="791" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="Failed" id="0dc4cd8d4d61c13ddce2ee0effc89eca_b505f3d0a42acd61d8f146f0c3021a7c" file="30" linestart="794" lineend="794" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="elapsed_time" id="0dc4cd8d4d61c13ddce2ee0effc89eca_840ee77660b3e37f4bf33fbd3cc53563" file="30" linestart="797" lineend="797" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="TimeInMillis">
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<bt name="long long"/>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</fpt>
</m>
<m name="GetTestInfo" id="0dc4cd8d4d61c13ddce2ee0effc89eca_04a49b371809c444c1a16f2cda3726fe" file="30" linestart="801" lineend="801" access="public" hasbody="true">
<fpt const="true" proto="const testing::TestInfo *">
<pt>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
</rt>
</QualType>
</pt>
</fpt>
<p name="i" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</m>
<m name="test_info_list" id="0dc4cd8d4d61c13ddce2ee0effc89eca_56c42e95f3503a457bf85c5b9072a2fa" file="30" linestart="808" lineend="808" access="private" hasbody="true" isdef="true">
<fpt proto="std::vector&lt;TestInfo *&gt; &amp;">
<lrf>
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
</rt>
</pt>
</template_arguments>
</tss>
</ety>
</lrf>
</fpt>
</m>
<m name="test_info_list" id="0dc4cd8d4d61c13ddce2ee0effc89eca_a80da96f5a5917a83c6eb1dbf0f55991" file="30" linestart="811" lineend="813" access="private" hasbody="true" isdef="true">
<fpt const="true" proto="const std::vector&lt;TestInfo *&gt; &amp;">
<lrf>
<QualType const="true">
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
</rt>
</pt>
</template_arguments>
</tss>
</ety>
</QualType>
</lrf>
</fpt>
</m>
<m name="GetMutableTestInfo" id="0dc4cd8d4d61c13ddce2ee0effc89eca_8dfce4d7b14a3ef09c0a02212c8fd129" file="30" linestart="817" lineend="817" access="private" hasbody="true">
<fpt proto="testing::TestInfo *">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
</rt>
</pt>
</fpt>
<p name="i" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</m>
<m name="set_should_run" id="0dc4cd8d4d61c13ddce2ee0effc89eca_22cc69d1217ffac8fdb1cf6b31c0dcdd" file="30" linestart="820" lineend="820" access="private" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="should" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
</m>
<m name="Run" id="0dc4cd8d4d61c13ddce2ee0effc89eca_22f190dd566a0b46d13baa861c01b567" file="30" linestart="835" lineend="835" access="private" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="RunSetUpTestCase" id="0dc4cd8d4d61c13ddce2ee0effc89eca_dd49cebcc477d498e2eb4b1a37262ec4" file="30" linestart="839" lineend="839" access="private" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="RunTearDownTestCase" id="0dc4cd8d4d61c13ddce2ee0effc89eca_8f24b5efac4532be264f88049d0b3437" file="30" linestart="843" lineend="843" access="private" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="TestPassed" id="0dc4cd8d4d61c13ddce2ee0effc89eca_f33200c1325d2bed9cb6c77404a8131d" file="30" linestart="846" lineend="848" access="private" storage="static" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="test_info" proto="const testing::TestInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
</rt>
</QualType>
</pt>
</p>
</m>
<m name="TestFailed" id="0dc4cd8d4d61c13ddce2ee0effc89eca_407c76adf5c044da1123fa6a670d1a7d" file="30" linestart="851" lineend="853" access="private" storage="static" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="test_info" proto="const testing::TestInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
</rt>
</QualType>
</pt>
</p>
</m>
<m name="TestDisabled" id="0dc4cd8d4d61c13ddce2ee0effc89eca_70d2fc70c38f3e25386950a1b226e3d6" file="30" linestart="856" lineend="858" access="private" storage="static" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="test_info" proto="const testing::TestInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
</rt>
</QualType>
</pt>
</p>
</m>
<m name="ShouldRunTest" id="0dc4cd8d4d61c13ddce2ee0effc89eca_8acfd61368032d41f777543c7c73c30b" file="30" linestart="861" lineend="863" access="private" storage="static" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="test_info" proto="const testing::TestInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
</rt>
</QualType>
</pt>
</p>
</m>
<m name="ShuffleTests" id="0dc4cd8d4d61c13ddce2ee0effc89eca_dadadd837623765f1a9b3423fa635d92" file="30" linestart="866" lineend="866" access="private" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="random" proto="internal::Random *" isPtr="true" isLiteral="true" access2="none">
<pt>
<ety>
<rt>
<cr id="361592d094a324447c0b12d8c282c7d5_a1fb83d720e6b12a8b1e03d27d046934"/>
</rt>
</ety>
</pt>
</p>
</m>
<m name="UnshuffleTests" id="0dc4cd8d4d61c13ddce2ee0effc89eca_88e977234beda57a2fde3c1e8e8e6ce7" file="30" linestart="869" lineend="869" access="private" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<fl name="test_info_list_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_8369e05de8891d7c614f99f2f13e7fee" file="30" linestart="878" lineend="878" access="private" proto="std::vector&lt;TestInfo *&gt;">
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
</rt>
</pt>
</template_arguments>
</tss>
</ety>
</fl>
<fl name="test_indices_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_f7bf159935a3ecb92e98649f4369b7b8" file="30" linestart="882" lineend="882" access="private" proto="std::vector&lt;int&gt;">
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<bt name="int"/>
</template_arguments>
</tss>
</ety>
</fl>
<fl name="should_run_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_ec184416f07586e5fb288ada159052ef" file="30" linestart="888" lineend="888" isLiteral="true" access="private" proto="bool">
<bt name="bool"/>
</fl>
<fl name="elapsed_time_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_d531f85a48642f2f448d8f6bd67d6a25" file="30" linestart="890" lineend="890" isLiteral="true" access="private" proto="TimeInMillis">
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<bt name="long long"/>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</fl>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="Environment" id="0dc4cd8d4d61c13ddce2ee0effc89eca_438d6c9ea559e7ee04fb7c9b7b2a4c36" file="30" linestart="910" lineend="925">
<m name="SetUp" id="0dc4cd8d4d61c13ddce2ee0effc89eca_3de806ba59448043e7e1e32530a56aa5" file="30" linestart="916" lineend="916" virtual="true" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="TearDown" id="0dc4cd8d4d61c13ddce2ee0effc89eca_929db48e0de66559e0adbd8f10a07866" file="30" linestart="919" lineend="919" virtual="true" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="TestEventListener" id="0dc4cd8d4d61c13ddce2ee0effc89eca_dbe8b4db54a4657fb6c41d334f39dc91" file="30" linestart="929" lineend="975">
<m name="OnTestProgramStart" id="0dc4cd8d4d61c13ddce2ee0effc89eca_cb808f59046aa677256a06c4f48c5f8a" file="30" linestart="934" lineend="934" pure="true" virtual="true" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="unit_test" proto="const testing::UnitTest &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_659e3943d1057bfeb9be12f911de47b4"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="OnTestIterationStart" id="0dc4cd8d4d61c13ddce2ee0effc89eca_c768b10c44aa0856b39878f384ca11a5" file="30" linestart="939" lineend="940" pure="true" virtual="true" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="unit_test" proto="const testing::UnitTest &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_659e3943d1057bfeb9be12f911de47b4"/>
</rt>
</QualType>
</lrf>
</p>
<p name="iteration" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</m>
<m name="OnEnvironmentsSetUpStart" id="0dc4cd8d4d61c13ddce2ee0effc89eca_b54953b726aa561836cef42aaebfa1b4" file="30" linestart="943" lineend="943" pure="true" virtual="true" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="unit_test" proto="const testing::UnitTest &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_659e3943d1057bfeb9be12f911de47b4"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="OnEnvironmentsSetUpEnd" id="0dc4cd8d4d61c13ddce2ee0effc89eca_3ee02534c41ead1bfac2e1d279a6b8a8" file="30" linestart="946" lineend="946" pure="true" virtual="true" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="unit_test" proto="const testing::UnitTest &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_659e3943d1057bfeb9be12f911de47b4"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="OnTestCaseStart" id="0dc4cd8d4d61c13ddce2ee0effc89eca_8cec7d3203860d5bd5ebaa0f1af7f46e" file="30" linestart="949" lineend="949" pure="true" virtual="true" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="test_case" proto="const testing::TestCase &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_0c20437d408165b2bab4427d0d53ab50"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="OnTestStart" id="0dc4cd8d4d61c13ddce2ee0effc89eca_cf82b66fef24d1d1310229a655ee457a" file="30" linestart="952" lineend="952" pure="true" virtual="true" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="test_info" proto="const testing::TestInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="OnTestPartResult" id="0dc4cd8d4d61c13ddce2ee0effc89eca_0ecb099d77d14635495763d950edae02" file="30" linestart="955" lineend="955" pure="true" virtual="true" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="test_part_result" proto="const testing::TestPartResult &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_5f4fb82d9196d416897f8942199b65f3"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="OnTestEnd" id="0dc4cd8d4d61c13ddce2ee0effc89eca_d4855f5b64ab36e3106422f0d618ffe4" file="30" linestart="958" lineend="958" pure="true" virtual="true" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="test_info" proto="const testing::TestInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="OnTestCaseEnd" id="0dc4cd8d4d61c13ddce2ee0effc89eca_0110a4bc38e3ee04e71b11db44c80fc4" file="30" linestart="961" lineend="961" pure="true" virtual="true" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="test_case" proto="const testing::TestCase &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_0c20437d408165b2bab4427d0d53ab50"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="OnEnvironmentsTearDownStart" id="0dc4cd8d4d61c13ddce2ee0effc89eca_c590e80e214698f9cf3fb390a8b3cd67" file="30" linestart="964" lineend="964" pure="true" virtual="true" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="unit_test" proto="const testing::UnitTest &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_659e3943d1057bfeb9be12f911de47b4"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="OnEnvironmentsTearDownEnd" id="0dc4cd8d4d61c13ddce2ee0effc89eca_b90c1a9049c0cd55551dad6dc3be6a1a" file="30" linestart="967" lineend="967" pure="true" virtual="true" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="unit_test" proto="const testing::UnitTest &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_659e3943d1057bfeb9be12f911de47b4"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="OnTestIterationEnd" id="0dc4cd8d4d61c13ddce2ee0effc89eca_c1119275f6b4838cca0e8a768e91df5a" file="30" linestart="970" lineend="971" pure="true" virtual="true" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="unit_test" proto="const testing::UnitTest &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_659e3943d1057bfeb9be12f911de47b4"/>
</rt>
</QualType>
</lrf>
</p>
<p name="iteration" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</m>
<m name="OnTestProgramEnd" id="0dc4cd8d4d61c13ddce2ee0effc89eca_c9f481d94883dbf8ce8d28be9e6eb876" file="30" linestart="974" lineend="974" pure="true" virtual="true" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="unit_test" proto="const testing::UnitTest &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_659e3943d1057bfeb9be12f911de47b4"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<c name="TestEventListener" id="0dc4cd8d4d61c13ddce2ee0effc89eca_eb98d7b07b82337494ec8af580f2dcab" file="30" linestart="929" lineend="929" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr namespace="testing" access="none" depth="1" kind="class" name="EmptyTestEventListener" id="0dc4cd8d4d61c13ddce2ee0effc89eca_d75a3770d677912e901e80833f4e2e6a" file="30" linestart="982" lineend="1000">
<base access="public">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_dbe8b4db54a4657fb6c41d334f39dc91"/>
</rt>
</base>
<c name="EmptyTestEventListener" id="0dc4cd8d4d61c13ddce2ee0effc89eca_e63e4426ccf62b22bf222aa464e4c8d2" file="30" linestart="982" lineend="982" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="TestEventListeners" id="0dc4cd8d4d61c13ddce2ee0effc89eca_d3b4d736b89ef38eeba93c4655747471" file="30" linestart="1003" lineend="1078">
<m name="Append" id="0dc4cd8d4d61c13ddce2ee0effc89eca_d25d8e0302acc727186248b2af755a7f" file="30" linestart="1011" lineend="1011" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="listener" proto="testing::TestEventListener *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_dbe8b4db54a4657fb6c41d334f39dc91"/>
</rt>
</pt>
</p>
</m>
<m name="Release" id="0dc4cd8d4d61c13ddce2ee0effc89eca_32c3ea3432a4aa0a20d630e2c06ab266" file="30" linestart="1016" lineend="1016" access="public" hasbody="true">
<fpt proto="testing::TestEventListener *">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_dbe8b4db54a4657fb6c41d334f39dc91"/>
</rt>
</pt>
</fpt>
<p name="listener" proto="testing::TestEventListener *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_dbe8b4db54a4657fb6c41d334f39dc91"/>
</rt>
</pt>
</p>
</m>
<m name="repeater" id="0dc4cd8d4d61c13ddce2ee0effc89eca_e2f439658b3c8f384f67df65ec15ff39" file="30" linestart="1048" lineend="1048" access="private" hasbody="true">
<fpt proto="testing::TestEventListener *">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_dbe8b4db54a4657fb6c41d334f39dc91"/>
</rt>
</pt>
</fpt>
</m>
<m name="SetDefaultResultPrinter" id="0dc4cd8d4d61c13ddce2ee0effc89eca_80aac6bb84db83bd23b1511451575cab" file="30" linestart="1055" lineend="1055" access="private" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="listener" proto="testing::TestEventListener *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_dbe8b4db54a4657fb6c41d334f39dc91"/>
</rt>
</pt>
</p>
</m>
<m name="SetDefaultXmlGenerator" id="0dc4cd8d4d61c13ddce2ee0effc89eca_ac95e092e685ea3018d9670d36f0a850" file="30" linestart="1062" lineend="1062" access="private" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="listener" proto="testing::TestEventListener *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_dbe8b4db54a4657fb6c41d334f39dc91"/>
</rt>
</pt>
</p>
</m>
<m name="SuppressEventForwarding" id="0dc4cd8d4d61c13ddce2ee0effc89eca_a485823a7dbac3f47ecbf7ea49abd357" file="30" linestart="1067" lineend="1067" access="private" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<fl name="repeater_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_9801be05a86466deee036bee16966954" file="30" linestart="1070" lineend="1070" isPtr="true" isLiteral="true" access="private" proto="internal::TestEventRepeater *">
<pt>
<ety>
<rt>
<cr id="254123e84e50c71f3a0f736a61a3c76f_e8e036f36eb9a165f0aa4a07904d00a0"/>
</rt>
</ety>
</pt>
</fl>
<fl name="default_result_printer_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_97cc87c724756800f0c3c131f07bd0d4" file="30" linestart="1072" lineend="1072" isPtr="true" isLiteral="true" access="private" proto="testing::TestEventListener *">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_dbe8b4db54a4657fb6c41d334f39dc91"/>
</rt>
</pt>
</fl>
<fl name="default_xml_generator_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_17b39c684e36f62a7f6387f1c3d2885f" file="30" linestart="1074" lineend="1074" isPtr="true" isLiteral="true" access="private" proto="testing::TestEventListener *">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_dbe8b4db54a4657fb6c41d334f39dc91"/>
</rt>
</pt>
</fl>
</cr>
<cr namespace="testing" access="none" depth="0" kind="class" name="UnitTest" id="0dc4cd8d4d61c13ddce2ee0effc89eca_659e3943d1057bfeb9be12f911de47b4" file="30" linestart="1090" lineend="1244" previous="0dc4cd8d4d61c13ddce2ee0effc89eca_659e3943d1057bfeb9be12f911de47b4">
<m name="GetInstance" id="0dc4cd8d4d61c13ddce2ee0effc89eca_e2ca77f2902889656bf0d5b030e30cb1" file="30" linestart="1095" lineend="1095" access="public" storage="static" hasbody="true">
<fpt proto="testing::UnitTest *">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_659e3943d1057bfeb9be12f911de47b4"/>
</rt>
</pt>
</fpt>
</m>
<m name="original_working_dir" id="0dc4cd8d4d61c13ddce2ee0effc89eca_105009b3f2b3b690cdb01a9ecdee8d16" file="30" linestart="1107" lineend="1107" access="public" hasbody="true">
<fpt const="true" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
</m>
<m name="random_seed" id="0dc4cd8d4d61c13ddce2ee0effc89eca_e0268eb30c0af0760c957bea37fb0f2c" file="30" linestart="1118" lineend="1118" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="total_test_case_count" id="0dc4cd8d4d61c13ddce2ee0effc89eca_bcb786a4971de7257baa307da52af1f5" file="30" linestart="1135" lineend="1135" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="test_case_to_run_count" id="0dc4cd8d4d61c13ddce2ee0effc89eca_837833f23f39a1f8386633d77793756c" file="30" linestart="1139" lineend="1139" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="successful_test_count" id="0dc4cd8d4d61c13ddce2ee0effc89eca_9bd2545982957e3f0be71bf1c6ffa496" file="30" linestart="1142" lineend="1142" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="failed_test_count" id="0dc4cd8d4d61c13ddce2ee0effc89eca_40cb13dedf69fe90a2b7021985e78e6a" file="30" linestart="1145" lineend="1145" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="disabled_test_count" id="0dc4cd8d4d61c13ddce2ee0effc89eca_ad4e79eec8ade85fc5d58d5f7b2aef33" file="30" linestart="1148" lineend="1148" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="total_test_count" id="0dc4cd8d4d61c13ddce2ee0effc89eca_eb5a4be442933468acfcc5da548493ab" file="30" linestart="1151" lineend="1151" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="test_to_run_count" id="0dc4cd8d4d61c13ddce2ee0effc89eca_333f049d17298e3ba0f01979ead37798" file="30" linestart="1154" lineend="1154" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="elapsed_time" id="0dc4cd8d4d61c13ddce2ee0effc89eca_27d67c2882ae056d4e3dc95dddd930b6" file="30" linestart="1157" lineend="1157" access="public" hasbody="true">
<fpt const="true" proto="TimeInMillis">
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<bt name="long long"/>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</fpt>
</m>
<m name="Passed" id="0dc4cd8d4d61c13ddce2ee0effc89eca_29d21187eb7c871ce26a06322f80faae" file="30" linestart="1160" lineend="1160" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="GetTestCase" id="0dc4cd8d4d61c13ddce2ee0effc89eca_6644db0026c50f2e9727fa8027d59ae9" file="30" linestart="1168" lineend="1168" access="public" hasbody="true">
<fpt const="true" proto="const testing::TestCase *">
<pt>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_0c20437d408165b2bab4427d0d53ab50"/>
</rt>
</QualType>
</pt>
</fpt>
<p name="i" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</m>
<m name="listeners" id="0dc4cd8d4d61c13ddce2ee0effc89eca_56f5713167b7302225d3c8e68605510f" file="30" linestart="1172" lineend="1172" access="public" hasbody="true">
<fpt proto="testing::TestEventListeners &amp;">
<lrf>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_d3b4d736b89ef38eeba93c4655747471"/>
</rt>
</lrf>
</fpt>
</m>
<m name="AddTestPartResult" id="0dc4cd8d4d61c13ddce2ee0effc89eca_67d706367b67664b4b6f53b1875cad05" file="30" linestart="1190" lineend="1194" access="private" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="result_type" proto="TestPartResult::Type" isLiteral="true" access2="none">
<ety>
<et>
<e id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1"/>
</et>
</ety>
</p>
<p name="file_name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="line_number" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="message" proto="const internal::String &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
<p name="os_stack_trace" proto="const internal::String &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
</m>
<m name="RecordPropertyForCurrentTest" id="0dc4cd8d4d61c13ddce2ee0effc89eca_25ea7f0d52fa2d4f659e487eeb78aae3" file="30" linestart="1198" lineend="1198" access="private" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="key" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</m>
<m name="impl" id="0dc4cd8d4d61c13ddce2ee0effc89eca_471cd76b9e017c85ba212d32588aea64" file="30" linestart="1205" lineend="1205" access="private" hasbody="true" isdef="true">
<fpt proto="internal::UnitTestImpl *">
<pt>
<ety>
<rt>
<cr id="af5d4310224b86b937fe98ebc412e239_ad4fe9f3b1b13071807e0902d86c1340"/>
</rt>
</ety>
</pt>
</fpt>
</m>
<m name="impl" id="0dc4cd8d4d61c13ddce2ee0effc89eca_024286ceedbe59f948851f5d3eb220d6" file="30" linestart="1206" lineend="1206" access="private" hasbody="true" isdef="true">
<fpt const="true" proto="const internal::UnitTestImpl *">
<pt>
<QualType const="true">
<ety>
<rt>
<cr id="af5d4310224b86b937fe98ebc412e239_ad4fe9f3b1b13071807e0902d86c1340"/>
</rt>
</ety>
</QualType>
</pt>
</fpt>
</m>
<c name="UnitTest" id="0dc4cd8d4d61c13ddce2ee0effc89eca_e0663cdf213157f55ad92584850736fc" file="30" linestart="1220" lineend="1220" access="private" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
<m name="PushGTestTrace" id="0dc4cd8d4d61c13ddce2ee0effc89eca_352988c25e71871ebf768ce3c3d024e4" file="30" linestart="1227" lineend="1227" access="private" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="trace" proto="const internal::TraceInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="af5d4310224b86b937fe98ebc412e239_46bc1855db821a48e7d229dc81b17857"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
</m>
<m name="PopGTestTrace" id="0dc4cd8d4d61c13ddce2ee0effc89eca_1b2d024ab43744736a544ccd645316c6" file="30" linestart="1230" lineend="1230" access="private" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<fl name="mutex_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_6a09de82dd58f986585e9f2b78d99ee3" file="30" linestart="1234" lineend="1234" mutable="true" access="private" proto="internal::Mutex">
<ety>
<rt>
<cr id="0c2fb77eb4696cd7e7faa021a7cafdaf_47a1d46d61347c3a3bf14ddddbcf3474"/>
</rt>
</ety>
</fl>
<fl name="impl_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_bb017cd0b3f36bf8e7e97340b614d5e7" file="30" linestart="1240" lineend="1240" isPtr="true" isLiteral="true" access="private" proto="internal::UnitTestImpl *">
<pt>
<ety>
<rt>
<cr id="af5d4310224b86b937fe98ebc412e239_ad4fe9f3b1b13071807e0902d86c1340"/>
</rt>
</ety>
</pt>
</fl>
</cr>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="AssertHelper" id="0dc4cd8d4d61c13ddce2ee0effc89eca_7260371f7d6759cab9d4e4b45f795755" file="30" linestart="1594" lineend="1631" previous="0dc4cd8d4d61c13ddce2ee0effc89eca_7260371f7d6759cab9d4e4b45f795755">
<c name="AssertHelper" id="0dc4cd8d4d61c13ddce2ee0effc89eca_5f3bae04f063d84394fe9d50198f2c6a" file="30" linestart="1597" lineend="1600" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="type" proto="TestPartResult::Type" isLiteral="true" access2="none">
<ety>
<et>
<e id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1"/>
</et>
</ety>
</p>
<p name="file" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="line" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="message" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</c>
<m name="operator=" id="0dc4cd8d4d61c13ddce2ee0effc89eca_7c7803b0e3e57d066468d0bec8cde703" file="30" linestart="1605" lineend="1605" operator="true" access="public" hasbody="true">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="message" proto="const testing::Message &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="d6da877cd43d9ea62976e055cbb7a3f4_a57271b22cdb2fdb3d50588243bf5562"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<cr parent="0dc4cd8d4d61c13ddce2ee0effc89eca_7260371f7d6759cab9d4e4b45f795755" access="private" depth="0" kind="struct" name="AssertHelperData" id="0dc4cd8d4d61c13ddce2ee0effc89eca_add7b80882f59f780a55d93b863b8f39" file="30" linestart="1612" lineend="1626">
<c name="AssertHelperData" id="0dc4cd8d4d61c13ddce2ee0effc89eca_155eabc56b7de4a51fff686b66516dd9" file="30" linestart="1613" lineend="1617" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="t" proto="TestPartResult::Type" isLiteral="true" access2="none">
<ety>
<et>
<e id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1"/>
</et>
</ety>
</p>
<p name="srcfile" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="line_num" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="msg" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<initlist id="0dc4cd8d4d61c13ddce2ee0effc89eca_a2e6e5a738cafb2bfa4807f7d9eb1bb2"/>
<initlist id="0dc4cd8d4d61c13ddce2ee0effc89eca_7e97a55582cf185eb015d899cdd29d5f"/>
<initlist id="0dc4cd8d4d61c13ddce2ee0effc89eca_791a4ac5fa315ebba2393f89ef68f4df"/>
<initlist id="0dc4cd8d4d61c13ddce2ee0effc89eca_f1eb2915610680107d8e878c3895b303"/>
</c>
<fl name="type" id="0dc4cd8d4d61c13ddce2ee0effc89eca_a2e6e5a738cafb2bfa4807f7d9eb1bb2" file="30" linestart="1619" lineend="1619" isLiteral="true" access="public" proto="const TestPartResult::Type">
<QualType const="true">
<ety>
<et>
<e id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1"/>
</et>
</ety>
</QualType>
</fl>
<fl name="file" id="0dc4cd8d4d61c13ddce2ee0effc89eca_7e97a55582cf185eb015d899cdd29d5f" file="30" linestart="1620" lineend="1620" isPtr="true" isLiteral="true" access="public" proto="const char *const">
<QualType const="true">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</QualType>
</fl>
<fl name="line" id="0dc4cd8d4d61c13ddce2ee0effc89eca_791a4ac5fa315ebba2393f89ef68f4df" file="30" linestart="1621" lineend="1621" isLiteral="true" access="public" proto="const int">
<QualType const="true">
<bt name="int"/>
</QualType>
</fl>
<fl name="message" id="0dc4cd8d4d61c13ddce2ee0effc89eca_f1eb2915610680107d8e878c3895b303" file="30" linestart="1622" lineend="1622" access="public" proto="const testing::internal::String">
<QualType const="true">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</QualType>
</fl>
</cr>
<fl name="data_" id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae7651024b8c5c994711c3b4f4058885" file="30" linestart="1628" lineend="1628" isPtr="true" isLiteral="true" access="private" proto="testing::internal::AssertHelper::AssertHelperData *const">
<QualType const="true">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_add7b80882f59f780a55d93b863b8f39"/>
</rt>
</pt>
</QualType>
</fl>
</cr>
<cr namespace="testing" access="none" depth="1" kind="class" name="ScopedFakeTestPartResultReporter" id="c6e919d0603f7dd0f60d1018be2819ef_0727f3a16914dcaad9c88be2d3a25970" file="31" linestart="51" lineend="87">
<base access="public">
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_d5a15b3fc1e0e6a1ab4576ee72e71b7d"/>
</rt>
</base>
<e parent="c6e919d0603f7dd0f60d1018be2819ef_0727f3a16914dcaad9c88be2d3a25970" access="public" name="InterceptMode" id="c6e919d0603f7dd0f60d1018be2819ef_4616510b858a613aab146eab54c1d9e1" file="31" linestart="55" lineend="58" fixed="true">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
<ec name="INTERCEPT_ONLY_CURRENT_THREAD" id="c6e919d0603f7dd0f60d1018be2819ef_1f36db8705e567e3f47639443e0b420e" file="31" linestart="56" lineend="56">
<et>
<e id="c6e919d0603f7dd0f60d1018be2819ef_4616510b858a613aab146eab54c1d9e1"/>
</et>
</ec>
<ec name="INTERCEPT_ALL_THREADS" id="c6e919d0603f7dd0f60d1018be2819ef_9a865b007b5a3250ac5fed7a0c88cecd" file="31" linestart="57" lineend="57">
<et>
<e id="c6e919d0603f7dd0f60d1018be2819ef_4616510b858a613aab146eab54c1d9e1"/>
</et>
</ec>
</e>
<m name="Init" id="c6e919d0603f7dd0f60d1018be2819ef_1373231adc60248789c196131a82559e" file="31" linestart="80" lineend="80" access="private" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<fl name="intercept_mode_" id="c6e919d0603f7dd0f60d1018be2819ef_f5aa9120575b4850ecfb1e0ad194e6e5" file="31" linestart="82" lineend="82" isLiteral="true" access="private" proto="const testing::ScopedFakeTestPartResultReporter::InterceptMode">
<QualType const="true">
<et>
<e id="c6e919d0603f7dd0f60d1018be2819ef_4616510b858a613aab146eab54c1d9e1"/>
</et>
</QualType>
</fl>
<fl name="old_reporter_" id="c6e919d0603f7dd0f60d1018be2819ef_39d10964b5abefc321c086781c3aca07" file="31" linestart="83" lineend="83" isPtr="true" isLiteral="true" access="private" proto="testing::TestPartResultReporterInterface *">
<pt>
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_d5a15b3fc1e0e6a1ab4576ee72e71b7d"/>
</rt>
</pt>
</fl>
<fl name="result_" id="c6e919d0603f7dd0f60d1018be2819ef_3c20450e86e7fe0e233a68db86fe3621" file="31" linestart="84" lineend="84" isPtr="true" isLiteral="true" access="private" proto="testing::TestPartResultArray *const">
<QualType const="true">
<pt>
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_d8cc03e056c4d71dd3854a7983b2cf17"/>
</rt>
</pt>
</QualType>
</fl>
</cr>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="SingleFailureChecker" id="c6e919d0603f7dd0f60d1018be2819ef_65f38c23089431cb179a672f627ae1ad" file="31" linestart="96" lineend="109">
<fl name="results_" id="c6e919d0603f7dd0f60d1018be2819ef_af42c723e4f741e4ee39af0ec3ffef9a" file="31" linestart="104" lineend="104" isPtr="true" isLiteral="true" access="private" proto="const testing::TestPartResultArray *const">
<QualType const="true">
<pt>
<QualType const="true">
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_d8cc03e056c4d71dd3854a7983b2cf17"/>
</rt>
</QualType>
</pt>
</QualType>
</fl>
<fl name="type_" id="c6e919d0603f7dd0f60d1018be2819ef_79e91eaeb0168a545cabf9e0b42bb949" file="31" linestart="105" lineend="105" isLiteral="true" access="private" proto="const TestPartResult::Type">
<QualType const="true">
<ety>
<et>
<e id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1"/>
</et>
</ety>
</QualType>
</fl>
<fl name="substr_" id="c6e919d0603f7dd0f60d1018be2819ef_7ad02b612efa14cb30a869cfca837373" file="31" linestart="106" lineend="106" access="private" proto="const string">
<QualType const="true">
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<bt name="char"/>
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_bf3447e13ccfc57e5fa847f5d78e7639"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
<tss>
<templatebase id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_07566aa809aee0bdf1c0fac16e19fa85"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</QualType>
</fl>
</cr>
<cr access="none" depth="0" pod="true" kind="struct" name="__timeb64" id="524979fd301a16288a955eea2a6069a1_69dbd5cd651e16ed4f8211f076d1ad76" file="32" linestart="102" lineend="107">
<fl name="time" id="524979fd301a16288a955eea2a6069a1_1121912289b7e3ac89790c27f826e899" file="32" linestart="103" lineend="103" isLiteral="true" access="public" proto="__time64_t">
<Tdef>
<bt name="long long"/>
</Tdef>
</fl>
<fl name="millitm" id="524979fd301a16288a955eea2a6069a1_c086ef23899055417856cdeb7bd3abfc" file="32" linestart="104" lineend="104" isLiteral="true" access="public" proto="unsigned short">
<bt name="unsigned short"/>
</fl>
<c name="__timeb64" id="524979fd301a16288a955eea2a6069a1_ec43fbd1d960bb9e01b8e827a2b143a9" file="32" linestart="102" lineend="102" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr access="none" depth="0" pod="true" kind="struct" name="_SECURITY_ATTRIBUTES" id="12bc8c7c006535ee99918a8866a82953_5b0201dc167ec7e3feddfb1bdd71bf9f" file="33" linestart="45" lineend="49"/>
<cr access="none" depth="0" pod="true" kind="struct" name="_PROCESS_INFORMATION" id="7c3f588186e6e5cc5102f416c85e05d7_43075a0d51fdbb2d3c0a4fd668adc58a" file="34" linestart="53" lineend="58">
<fl name="hProcess" id="7c3f588186e6e5cc5102f416c85e05d7_175aea42c25c2cde277644f90e7522e3" file="34" linestart="54" lineend="54" isPtr="true" isLiteral="true" access="public" proto="HANDLE">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</fl>
<fl name="hThread" id="7c3f588186e6e5cc5102f416c85e05d7_dde8a80f311902500f89cf938b9bf857" file="34" linestart="55" lineend="55" isPtr="true" isLiteral="true" access="public" proto="HANDLE">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</fl>
<c name="_PROCESS_INFORMATION" id="7c3f588186e6e5cc5102f416c85e05d7_e19bbcca269fc3bfcc8ca3239af146d4" file="34" linestart="53" lineend="53" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr access="none" depth="0" pod="true" kind="struct" name="_STARTUPINFOA" id="7c3f588186e6e5cc5102f416c85e05d7_92e856a56d2837ff4ea08210179e9eb6" file="34" linestart="60" lineend="79">
<fl name="dwFlags" id="7c3f588186e6e5cc5102f416c85e05d7_b7813e450a7ddb2026470bdf81a4f0a2" file="34" linestart="72" lineend="72" isLiteral="true" access="public" proto="DWORD">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</fl>
<fl name="hStdInput" id="7c3f588186e6e5cc5102f416c85e05d7_efdaa5bf83a5c901d1049aec8dad91ec" file="34" linestart="76" lineend="76" isPtr="true" isLiteral="true" access="public" proto="HANDLE">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</fl>
<fl name="hStdOutput" id="7c3f588186e6e5cc5102f416c85e05d7_d134947c243ac3300afe95625d5a66d2" file="34" linestart="77" lineend="77" isPtr="true" isLiteral="true" access="public" proto="HANDLE">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</fl>
<fl name="hStdError" id="7c3f588186e6e5cc5102f416c85e05d7_1540626ba30d669faa4f7a5b9c51c48c" file="34" linestart="78" lineend="78" isPtr="true" isLiteral="true" access="public" proto="HANDLE">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</fl>
<c name="_STARTUPINFOA" id="7c3f588186e6e5cc5102f416c85e05d7_8a3b7945ecd852773195fe7ec7c7161b" file="34" linestart="60" lineend="60" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr access="none" depth="0" pod="true" kind="struct" name="_CONSOLE_SCREEN_BUFFER_INFO" id="864efa2a75b12b62d2a6f16bfeabd92b_0e97a372edcec65b94a039f853794dd7" file="35" linestart="200" lineend="206">
<fl name="wAttributes" id="864efa2a75b12b62d2a6f16bfeabd92b_1f37e149a17733ed60a3dc50723c4c73" file="35" linestart="203" lineend="203" isLiteral="true" access="public" proto="WORD">
<Tdef>
<bt name="unsigned short"/>
</Tdef>
</fl>
<c name="_CONSOLE_SCREEN_BUFFER_INFO" id="864efa2a75b12b62d2a6f16bfeabd92b_a99782f1845e0b87ef2dcb4fcbd6d1f9" file="35" linestart="200" lineend="200" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="GTestFlagSaver" id="af5d4310224b86b937fe98ebc412e239_b4cf0a4b36d017fc75f9a5a6c87d775e" file="36" linestart="150" lineend="212" previous="0dc4cd8d4d61c13ddce2ee0effc89eca_b4cf0a4b36d017fc75f9a5a6c87d775e">
<c name="GTestFlagSaver" id="af5d4310224b86b937fe98ebc412e239_57c6454d6c53ff20113cfd2d44145cfc" file="36" linestart="153" lineend="171" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="TestPropertyKeyIs" id="af5d4310224b86b937fe98ebc412e239_391d41481310153031e95dd1f8b8b603" file="36" linestart="336" lineend="351">
<c name="TestPropertyKeyIs" id="af5d4310224b86b937fe98ebc412e239_19efd8a44034aa65f513315f03acd286" file="36" linestart="341" lineend="342" explicit="true" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="key" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<initlist id="af5d4310224b86b937fe98ebc412e239_bfdd6a74837a59f89329bdaa03b6d158"/>
</c>
<c name="TestPropertyKeyIs" id="af5d4310224b86b937fe98ebc412e239_d1ae27aedaee517e554bfd915bfae964" file="36" linestart="336" lineend="336" copyconst="true" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="const testing::internal::TestPropertyKeyIs &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="af5d4310224b86b937fe98ebc412e239_391d41481310153031e95dd1f8b8b603"/>
</rt>
</QualType>
</lrf>
</p>
</c>
</cr>
<cr namespace="testing.internal" access="none" depth="0" pod="true" kind="class" name="UnitTestOptions" id="af5d4310224b86b937fe98ebc412e239_260b1c2efee0de301a79d280fdf4dc6e" file="36" linestart="363" lineend="401">
<m name="GetOutputFormat" id="af5d4310224b86b937fe98ebc412e239_d0903259871f83df1986763111c0fc49" file="36" linestart="368" lineend="368" access="public" storage="static" hasbody="true">
<fpt proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fpt>
</m>
<m name="GetAbsolutePathToOutputFile" id="af5d4310224b86b937fe98ebc412e239_92c24a70191867af8a4bbd92e4cba8ec" file="36" linestart="373" lineend="373" access="public" storage="static" hasbody="true">
<fpt proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fpt>
</m>
<m name="PatternMatchesString" id="af5d4310224b86b937fe98ebc412e239_c6c99a164d0ff240d9a4312625c7a9a8" file="36" linestart="382" lineend="382" access="public" storage="static" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="pattern" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</m>
<m name="FilterMatchesTest" id="af5d4310224b86b937fe98ebc412e239_0149404ed4f5c675bf7713ee1dc3ebbe" file="36" linestart="386" lineend="387" access="public" storage="static" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="test_case_name" proto="const testing::internal::String &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</QualType>
</lrf>
</p>
<p name="test_name" proto="const testing::internal::String &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</QualType>
</lrf>
</p>
</m>
<m name="GTestShouldProcessSEH" id="af5d4310224b86b937fe98ebc412e239_ff85c339838e15432ea92806678d7819" file="36" linestart="395" lineend="395" access="public" storage="static" hasbody="true">
<fpt proto="int">
<bt name="int"/>
</fpt>
<p name="_exception_code" proto="DWORD" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</p>
</m>
<m name="MatchesFilter" id="af5d4310224b86b937fe98ebc412e239_d53eea3a5308c55121c1a76a05ebcdbf" file="36" linestart="400" lineend="400" access="public" storage="static" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="name" proto="const testing::internal::String &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</QualType>
</lrf>
</p>
<p name="filter" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</m>
</cr>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="OsStackTraceGetterInterface" id="af5d4310224b86b937fe98ebc412e239_4898d4dd0815c000e57815bdcd560474" file="36" linestart="408" lineend="428">
<m name="UponLeavingGTest" id="af5d4310224b86b937fe98ebc412e239_a1714e476f2e2eeeabfaea23daf27a0a" file="36" linestart="424" lineend="424" pure="true" virtual="true" access="public">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
</cr>
<cr namespace="testing.internal" access="none" depth="1" kind="class" name="OsStackTraceGetter" id="af5d4310224b86b937fe98ebc412e239_852404a3ab5b0d83f2bf18fcad68e5a2" file="36" linestart="431" lineend="451">
<base access="public">
<rt>
<cr id="af5d4310224b86b937fe98ebc412e239_4898d4dd0815c000e57815bdcd560474"/>
</rt>
</base>
<c name="OsStackTraceGetter" id="af5d4310224b86b937fe98ebc412e239_8c869704688cd8f5d581b8db13ebf2fa" file="36" linestart="433" lineend="433" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<initlist id="af5d4310224b86b937fe98ebc412e239_e13984874b5e998060284bafece86240"/>
</c>
</cr>
<cr namespace="testing.internal" access="none" depth="0" kind="struct" name="TraceInfo" id="af5d4310224b86b937fe98ebc412e239_46bc1855db821a48e7d229dc81b17857" file="36" linestart="454" lineend="458" previous="361592d094a324447c0b12d8c282c7d5_46bc1855db821a48e7d229dc81b17857">
<fl name="file" id="af5d4310224b86b937fe98ebc412e239_8f8b73b3b65c8379f786d844789a78e1" file="36" linestart="455" lineend="455" isPtr="true" isLiteral="true" access="public" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fl>
<fl name="line" id="af5d4310224b86b937fe98ebc412e239_b7c7a7ad4a7aa6cd2a2638df364d5bcb" file="36" linestart="456" lineend="456" isLiteral="true" access="public" proto="int">
<bt name="int"/>
</fl>
<fl name="message" id="af5d4310224b86b937fe98ebc412e239_013797274d31f52a845f708d6b933446" file="36" linestart="457" lineend="457" access="public" proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fl>
<c name="TraceInfo" id="af5d4310224b86b937fe98ebc412e239_1bc8489d021752aa9aa2b35ff71dca42" file="36" linestart="454" lineend="454" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</c>
</cr>
<cr namespace="testing.internal" access="none" depth="1" kind="class" name="DefaultGlobalTestPartResultReporter" id="af5d4310224b86b937fe98ebc412e239_0d13acdfe315d653c33710be98850299" file="36" linestart="462" lineend="474" previous="0dc4cd8d4d61c13ddce2ee0effc89eca_0d13acdfe315d653c33710be98850299">
<base access="public">
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_d5a15b3fc1e0e6a1ab4576ee72e71b7d"/>
</rt>
</base>
<c name="DefaultGlobalTestPartResultReporter" id="af5d4310224b86b937fe98ebc412e239_c397817d4a350090e5052313af455b45" file="36" linestart="465" lineend="465" explicit="true" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="unit_test" proto="testing::internal::UnitTestImpl *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="af5d4310224b86b937fe98ebc412e239_ad4fe9f3b1b13071807e0902d86c1340"/>
</rt>
</pt>
</p>
</c>
<fl name="unit_test_" id="af5d4310224b86b937fe98ebc412e239_27a9e019259c26aecc155b2809bc0e90" file="36" linestart="471" lineend="471" isPtr="true" isLiteral="true" access="private" proto="testing::internal::UnitTestImpl *const">
<QualType const="true">
<pt>
<rt>
<cr id="af5d4310224b86b937fe98ebc412e239_ad4fe9f3b1b13071807e0902d86c1340"/>
</rt>
</pt>
</QualType>
</fl>
</cr>
<cr namespace="testing.internal" access="none" depth="1" kind="class" name="DefaultPerThreadTestPartResultReporter" id="af5d4310224b86b937fe98ebc412e239_54e0a2fa3433beb8ed717cbd3846a105" file="36" linestart="478" lineend="490">
<base access="public">
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_d5a15b3fc1e0e6a1ab4576ee72e71b7d"/>
</rt>
</base>
<c name="DefaultPerThreadTestPartResultReporter" id="af5d4310224b86b937fe98ebc412e239_806281c974d98b4ae0c409bac85c6340" file="36" linestart="481" lineend="481" explicit="true" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="unit_test" proto="testing::internal::UnitTestImpl *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="af5d4310224b86b937fe98ebc412e239_ad4fe9f3b1b13071807e0902d86c1340"/>
</rt>
</pt>
</p>
</c>
<fl name="unit_test_" id="af5d4310224b86b937fe98ebc412e239_ace3ff52538d7f9ce26e513b6b7c1f66" file="36" linestart="487" lineend="487" isPtr="true" isLiteral="true" access="private" proto="testing::internal::UnitTestImpl *const">
<QualType const="true">
<pt>
<rt>
<cr id="af5d4310224b86b937fe98ebc412e239_ad4fe9f3b1b13071807e0902d86c1340"/>
</rt>
</pt>
</QualType>
</fl>
</cr>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="UnitTestImpl" id="af5d4310224b86b937fe98ebc412e239_ad4fe9f3b1b13071807e0902d86c1340" file="36" linestart="496" lineend="900" previous="361592d094a324447c0b12d8c282c7d5_ad4fe9f3b1b13071807e0902d86c1340">
<c name="UnitTestImpl" id="af5d4310224b86b937fe98ebc412e239_d5bf1fa187d802f366a5921e0c989eda" file="36" linestart="498" lineend="498" explicit="true" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="parent" proto="testing::UnitTest *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_659e3943d1057bfeb9be12f911de47b4"/>
</rt>
</pt>
</p>
</c>
<m name="GetGlobalTestPartResultReporter" id="af5d4310224b86b937fe98ebc412e239_2823949972858488c0233c8c46bf1a65" file="36" linestart="509" lineend="509" access="public" hasbody="true">
<fpt proto="testing::TestPartResultReporterInterface *">
<pt>
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_d5a15b3fc1e0e6a1ab4576ee72e71b7d"/>
</rt>
</pt>
</fpt>
</m>
<m name="SetGlobalTestPartResultReporter" id="af5d4310224b86b937fe98ebc412e239_aaffa95e7aa1ff9e44cefbd2a1092741" file="36" linestart="512" lineend="513" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="reporter" proto="testing::TestPartResultReporterInterface *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_d5a15b3fc1e0e6a1ab4576ee72e71b7d"/>
</rt>
</pt>
</p>
</m>
<m name="GetTestPartResultReporterForCurrentThread" id="af5d4310224b86b937fe98ebc412e239_6fc7b6f34b933e5372bd89f61a458382" file="36" linestart="516" lineend="516" access="public" hasbody="true">
<fpt proto="testing::TestPartResultReporterInterface *">
<pt>
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_d5a15b3fc1e0e6a1ab4576ee72e71b7d"/>
</rt>
</pt>
</fpt>
</m>
<m name="SetTestPartResultReporterForCurrentThread" id="af5d4310224b86b937fe98ebc412e239_75bbdf90d5b9ec2ca269a970ee5c26bc" file="36" linestart="519" lineend="520" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="reporter" proto="testing::TestPartResultReporterInterface *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_d5a15b3fc1e0e6a1ab4576ee72e71b7d"/>
</rt>
</pt>
</p>
</m>
<m name="successful_test_case_count" id="af5d4310224b86b937fe98ebc412e239_642cd9f5e7f43da7ece89fd0d7bd83c2" file="36" linestart="523" lineend="523" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="failed_test_case_count" id="af5d4310224b86b937fe98ebc412e239_e968a48bd91794618db4a0b3509028e8" file="36" linestart="526" lineend="526" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="total_test_case_count" id="af5d4310224b86b937fe98ebc412e239_063d63995df5d2668fed9c4dcf9e8ffd" file="36" linestart="529" lineend="529" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="test_case_to_run_count" id="af5d4310224b86b937fe98ebc412e239_7443b7c5e1101036b3447040ec88c6cf" file="36" linestart="533" lineend="533" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="successful_test_count" id="af5d4310224b86b937fe98ebc412e239_3162c41376be3ebaca9cdf19df07a0c4" file="36" linestart="536" lineend="536" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="failed_test_count" id="af5d4310224b86b937fe98ebc412e239_9ed8a133c42da95eae3ebaa47724f4e2" file="36" linestart="539" lineend="539" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="disabled_test_count" id="af5d4310224b86b937fe98ebc412e239_57fa9c3f67ed7634267253c1ff07ba7e" file="36" linestart="542" lineend="542" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="total_test_count" id="af5d4310224b86b937fe98ebc412e239_53ac838c9a367a0faf43f540b7a5962b" file="36" linestart="545" lineend="545" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="test_to_run_count" id="af5d4310224b86b937fe98ebc412e239_037e766d101b3ce25cc540890773ddbb" file="36" linestart="548" lineend="548" access="public" hasbody="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="elapsed_time" id="af5d4310224b86b937fe98ebc412e239_4de70f87e50356e8965b973affc11c74" file="36" linestart="551" lineend="551" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="TimeInMillis">
<Tdef>
<ety>
<Tdef>
<bt name="long long"/>
</Tdef>
</ety>
</Tdef>
</fpt>
</m>
<m name="Passed" id="af5d4310224b86b937fe98ebc412e239_2444e8031d84843e9d4fdf933fb338b3" file="36" linestart="554" lineend="554" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="Failed" id="af5d4310224b86b937fe98ebc412e239_bbee4aee285353288dc7a0d4563b4c3e" file="36" linestart="558" lineend="560" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="GetTestCase" id="af5d4310224b86b937fe98ebc412e239_cc8c077f439a520d449847526658b57a" file="36" linestart="564" lineend="567" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const testing::TestCase *">
<pt>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_0c20437d408165b2bab4427d0d53ab50"/>
</rt>
</QualType>
</pt>
</fpt>
<p name="i" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</m>
<m name="GetMutableTestCase" id="af5d4310224b86b937fe98ebc412e239_28f61ebc343f8b057fd7daab7a1f4d65" file="36" linestart="571" lineend="574" access="public" hasbody="true" isdef="true">
<fpt proto="testing::TestCase *">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_0c20437d408165b2bab4427d0d53ab50"/>
</rt>
</pt>
</fpt>
<p name="i" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</m>
<m name="listeners" id="af5d4310224b86b937fe98ebc412e239_d4cca8e754312c51683ee65809a08ab9" file="36" linestart="577" lineend="577" access="public" hasbody="true" isdef="true">
<fpt proto="testing::TestEventListeners *">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_d3b4d736b89ef38eeba93c4655747471"/>
</rt>
</pt>
</fpt>
</m>
<m name="current_test_result" id="af5d4310224b86b937fe98ebc412e239_9a2696fcdff2d58190de4b0f92d9025c" file="36" linestart="581" lineend="581" access="public" hasbody="true">
<fpt proto="testing::TestResult *">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_3beb801c15cfd30bf754349ba324caaf"/>
</rt>
</pt>
</fpt>
</m>
<m name="os_stack_trace_getter" id="af5d4310224b86b937fe98ebc412e239_cce26795193657c36b7d6d45ee1f62fa" file="36" linestart="596" lineend="596" access="public" hasbody="true">
<fpt proto="testing::internal::OsStackTraceGetterInterface *">
<pt>
<rt>
<cr id="af5d4310224b86b937fe98ebc412e239_4898d4dd0815c000e57815bdcd560474"/>
</rt>
</pt>
</fpt>
</m>
<m name="CurrentOsStackTraceExceptTop" id="af5d4310224b86b937fe98ebc412e239_34a5994c07e4b274e2fe0d985a86253d" file="36" linestart="608" lineend="608" access="public" hasbody="true">
<fpt proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fpt>
<p name="skip_count" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</m>
<m name="AddTestInfo" id="af5d4310224b86b937fe98ebc412e239_00666a280582ffd83958214db97094e3" file="36" linestart="632" lineend="652" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="set_up_tc" proto="Test::SetUpTestCaseFunc" isPtr="true" isLiteral="true" access2="none">
<ety>
<Tdef>
<ety>
<Tdef>
<pt>
<Paren/>
</pt>
</Tdef>
</ety>
</Tdef>
</ety>
</p>
<p name="tear_down_tc" proto="Test::TearDownTestCaseFunc" isPtr="true" isLiteral="true" access2="none">
<ety>
<Tdef>
<ety>
<Tdef>
<pt>
<Paren/>
</pt>
</Tdef>
</ety>
</Tdef>
</ety>
</p>
<p name="test_info" proto="testing::TestInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
</rt>
</pt>
</p>
</m>
<m name="parameterized_test_registry" id="af5d4310224b86b937fe98ebc412e239_2d5b59e043c219dcdbb2ac138ddc7e6b" file="36" linestart="657" lineend="659" access="public" hasbody="true" isdef="true">
<fpt proto="internal::ParameterizedTestCaseRegistry &amp;">
<lrf>
<ety>
<rt>
<cr id="f3b547dc1d8442e0b93fbb12c74b12b0_73675b5fb9ba1160f5962d5b15ba2742"/>
</rt>
</ety>
</lrf>
</fpt>
</m>
<m name="set_current_test_case" id="af5d4310224b86b937fe98ebc412e239_7a0f9d3a37d4825e3bba5aa5b5a4e650" file="36" linestart="663" lineend="665" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="a_current_test_case" proto="testing::TestCase *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_0c20437d408165b2bab4427d0d53ab50"/>
</rt>
</pt>
</p>
</m>
<m name="set_current_test_info" id="af5d4310224b86b937fe98ebc412e239_e17df93908f367956cf78d162e34742e" file="36" linestart="670" lineend="672" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="a_current_test_info" proto="testing::TestInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
</rt>
</pt>
</p>
</m>
<m name="RegisterParameterizedTests" id="af5d4310224b86b937fe98ebc412e239_c98d419e1a8eec1aeaa20ede7078a5b2" file="36" linestart="680" lineend="680" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="RunAllTests" id="af5d4310224b86b937fe98ebc412e239_58305087fc3990aca46b81bbb68de328" file="36" linestart="686" lineend="686" access="public" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="ClearNonAdHocTestResult" id="af5d4310224b86b937fe98ebc412e239_6efec2625992a5cd11044be2719a4df1" file="36" linestart="689" lineend="691" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<e parent="af5d4310224b86b937fe98ebc412e239_ad4fe9f3b1b13071807e0902d86c1340" access="public" name="ReactionToSharding" id="af5d4310224b86b937fe98ebc412e239_abacb2d01e0cf5eb89e59b01f76e9c35" file="36" linestart="698" lineend="701" fixed="true">
<promotion_type>
<bt name="int"/>
</promotion_type>
<integer_type>
<bt name="int"/>
</integer_type>
<ec name="HONOR_SHARDING_PROTOCOL" id="af5d4310224b86b937fe98ebc412e239_068d2ff7145e4dc1eb3c03cd3ca0717b" file="36" linestart="699" lineend="699">
<et>
<e id="af5d4310224b86b937fe98ebc412e239_abacb2d01e0cf5eb89e59b01f76e9c35"/>
</et>
</ec>
<ec name="IGNORE_SHARDING_PROTOCOL" id="af5d4310224b86b937fe98ebc412e239_aa844a52c593dd4aebc4e76aa901e98e" file="36" linestart="700" lineend="700">
<et>
<e id="af5d4310224b86b937fe98ebc412e239_abacb2d01e0cf5eb89e59b01f76e9c35"/>
</et>
</ec>
</e>
<m name="FilterTests" id="af5d4310224b86b937fe98ebc412e239_c86341ab7a041bf615abcc2607b52b17" file="36" linestart="709" lineend="709" access="public" hasbody="true">
<fpt proto="int">
<bt name="int"/>
</fpt>
<p name="shard_tests" proto="testing::internal::UnitTestImpl::ReactionToSharding" isLiteral="true" access2="none">
<et>
<e id="af5d4310224b86b937fe98ebc412e239_abacb2d01e0cf5eb89e59b01f76e9c35"/>
</et>
</p>
</m>
<m name="ListTestsMatchingFilter" id="af5d4310224b86b937fe98ebc412e239_50095978d46a442b6f51f10e6e9fc54e" file="36" linestart="712" lineend="712" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="current_test_case" id="af5d4310224b86b937fe98ebc412e239_6841714364b54b3a4b4bf54b823909ce" file="36" linestart="714" lineend="714" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const testing::TestCase *">
<pt>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_0c20437d408165b2bab4427d0d53ab50"/>
</rt>
</QualType>
</pt>
</fpt>
</m>
<m name="current_test_info" id="af5d4310224b86b937fe98ebc412e239_1770f1016626a3c82602eca2d12204c8" file="36" linestart="715" lineend="715" access="public" hasbody="true" isdef="true">
<fpt proto="testing::TestInfo *">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
</rt>
</pt>
</fpt>
</m>
<m name="current_test_info" id="af5d4310224b86b937fe98ebc412e239_e0eeef2de5a63df248a78221f066db0d" file="36" linestart="716" lineend="716" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const testing::TestInfo *">
<pt>
<QualType const="true">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
</rt>
</QualType>
</pt>
</fpt>
</m>
<m name="environments" id="af5d4310224b86b937fe98ebc412e239_632ce3aa9119c3ee81151400695cb88b" file="36" linestart="720" lineend="720" access="public" hasbody="true" isdef="true">
<fpt proto="std::vector&lt;Environment *&gt; &amp;">
<lrf>
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_438d6c9ea559e7ee04fb7c9b7b2a4c36"/>
</rt>
</pt>
</template_arguments>
</tss>
</ety>
</lrf>
</fpt>
</m>
<m name="gtest_trace_stack" id="af5d4310224b86b937fe98ebc412e239_fd86ab0a82427921130dcf44d70c6a39" file="36" linestart="723" lineend="725" access="public" hasbody="true" isdef="true">
<fpt proto="std::vector&lt;TraceInfo&gt; &amp;">
<lrf>
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<rt>
<cr id="af5d4310224b86b937fe98ebc412e239_46bc1855db821a48e7d229dc81b17857"/>
</rt>
</template_arguments>
</tss>
</ety>
</lrf>
</fpt>
</m>
<m name="InitDeathTestSubprocessControlInfo" id="af5d4310224b86b937fe98ebc412e239_8b7885f46c73b552c3cfb8f370390587" file="36" linestart="731" lineend="733" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="internal_run_death_test_flag" id="af5d4310224b86b937fe98ebc412e239_1d1a0c7310b8f0a0deb5333b83e84c48" file="36" linestart="738" lineend="740" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const testing::internal::InternalRunDeathTestFlag *">
<pt>
<QualType const="true">
<rt>
<cr id="a5e1300df8ffa37265adb036c8d3b481_4a18b61493bfca3d0db12970c7ef4cd5"/>
</rt>
</QualType>
</pt>
</fpt>
</m>
<m name="death_test_factory" id="af5d4310224b86b937fe98ebc412e239_9fec9fddb0cd78f1d0107aed1d023d76" file="36" linestart="743" lineend="745" access="public" hasbody="true" isdef="true">
<fpt proto="internal::DeathTestFactory *">
<pt>
<ety>
<rt>
<cr id="a5e1300df8ffa37265adb036c8d3b481_99ec99faeeff8cf9c51caa6ba62aa192"/>
</rt>
</ety>
</pt>
</fpt>
</m>
<m name="SuppressTestEventsIfInSubprocess" id="af5d4310224b86b937fe98ebc412e239_cfab20d4db00e4ed2646e2c8828032de" file="36" linestart="747" lineend="747" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="ConfigureXmlOutput" id="af5d4310224b86b937fe98ebc412e239_b8f525a570ec21f4f574b2b9d36b3492" file="36" linestart="754" lineend="754" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="PostFlagParsingInit" id="af5d4310224b86b937fe98ebc412e239_91bc061f8fd3e5ee0e9fe19fe6a08aa5" file="36" linestart="767" lineend="767" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="random_seed" id="af5d4310224b86b937fe98ebc412e239_e41616f4ef2d9800e7a0a1f0e0ff1af5" file="36" linestart="770" lineend="770" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
</m>
<m name="random" id="af5d4310224b86b937fe98ebc412e239_7d5277c969fc4a3731c08ee392ea44fe" file="36" linestart="773" lineend="773" access="public" hasbody="true" isdef="true">
<fpt proto="internal::Random *">
<pt>
<ety>
<rt>
<cr id="361592d094a324447c0b12d8c282c7d5_a1fb83d720e6b12a8b1e03d27d046934"/>
</rt>
</ety>
</pt>
</fpt>
</m>
<m name="ShuffleTests" id="af5d4310224b86b937fe98ebc412e239_10f93b1ea223cc69cd6c6ea45f68e37e" file="36" linestart="777" lineend="777" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="UnshuffleTests" id="af5d4310224b86b937fe98ebc412e239_3edb82e611cee16097f15fce9e5d34c5" file="36" linestart="780" lineend="780" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="catch_exceptions" id="af5d4310224b86b937fe98ebc412e239_97449bfbc93416a141ae3f15834efb5e" file="36" linestart="784" lineend="784" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="set_catch_exceptions" id="af5d4310224b86b937fe98ebc412e239_ece69f00cd5aad118202e3f4517052e8" file="36" linestart="791" lineend="791" access="private" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="value" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
</m>
<fl name="parent_" id="af5d4310224b86b937fe98ebc412e239_71f152019594c37a6a63670b2e52a3c4" file="36" linestart="794" lineend="794" isPtr="true" isLiteral="true" access="private" proto="testing::UnitTest *const">
<QualType const="true">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_659e3943d1057bfeb9be12f911de47b4"/>
</rt>
</pt>
</QualType>
</fl>
<fl name="original_working_dir_" id="af5d4310224b86b937fe98ebc412e239_2f4f2be66555f14a009588de1c0ca4ed" file="36" linestart="798" lineend="798" access="private" proto="internal::FilePath">
<ety>
<rt>
<cr id="76a971fe2586f5579f5c582c96be5ea1_92c5d28c5da2d5b9e6c8893e5e28f941"/>
</rt>
</ety>
</fl>
<fl name="default_global_test_part_result_reporter_" id="af5d4310224b86b937fe98ebc412e239_0a4fbd7a58537744c4cb9d44bb74d7d0" file="36" linestart="801" lineend="801" access="private" proto="testing::internal::DefaultGlobalTestPartResultReporter">
<rt>
<cr id="af5d4310224b86b937fe98ebc412e239_0d13acdfe315d653c33710be98850299"/>
</rt>
</fl>
<fl name="default_per_thread_test_part_result_reporter_" id="af5d4310224b86b937fe98ebc412e239_d80d5716be9463b10cade332137e15eb" file="36" linestart="802" lineend="803" access="private" proto="testing::internal::DefaultPerThreadTestPartResultReporter">
<rt>
<cr id="af5d4310224b86b937fe98ebc412e239_54e0a2fa3433beb8ed717cbd3846a105"/>
</rt>
</fl>
<fl name="global_test_part_result_repoter_" id="af5d4310224b86b937fe98ebc412e239_f11665b77f80607c9c096a8ae28c80c9" file="36" linestart="806" lineend="806" isPtr="true" isLiteral="true" access="private" proto="testing::TestPartResultReporterInterface *">
<pt>
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_d5a15b3fc1e0e6a1ab4576ee72e71b7d"/>
</rt>
</pt>
</fl>
<fl name="global_test_part_result_reporter_mutex_" id="af5d4310224b86b937fe98ebc412e239_37fa2665ce67db9920e891ad8e92b1e5" file="36" linestart="809" lineend="809" access="private" proto="internal::Mutex">
<ety>
<rt>
<cr id="0c2fb77eb4696cd7e7faa021a7cafdaf_47a1d46d61347c3a3bf14ddddbcf3474"/>
</rt>
</ety>
</fl>
<fl name="per_thread_test_part_result_reporter_" id="af5d4310224b86b937fe98ebc412e239_e4c484655673be7d9456dbd259ab9cbe" file="36" linestart="812" lineend="813" access="private" proto="internal::ThreadLocal&lt;TestPartResultReporterInterface *&gt;">
<ety>
<tss>
<templatebase id="0c2fb77eb4696cd7e7faa021a7cafdaf_94243c49ecff868aaf5201681b778156"/>
<template_arguments>
<pt>
<rt>
<cr id="562ee964b610e766d302b8dfed46fd41_d5a15b3fc1e0e6a1ab4576ee72e71b7d"/>
</rt>
</pt>
</template_arguments>
</tss>
</ety>
</fl>
<fl name="environments_" id="af5d4310224b86b937fe98ebc412e239_e7160793e30b4f67f4819642894361cb" file="36" linestart="817" lineend="817" access="private" proto="std::vector&lt;Environment *&gt;">
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_438d6c9ea559e7ee04fb7c9b7b2a4c36"/>
</rt>
</pt>
</template_arguments>
</tss>
</ety>
</fl>
<fl name="test_cases_" id="af5d4310224b86b937fe98ebc412e239_8136105bc98d64603bbc0a844a30e6ca" file="36" linestart="821" lineend="821" access="private" proto="std::vector&lt;TestCase *&gt;">
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_0c20437d408165b2bab4427d0d53ab50"/>
</rt>
</pt>
</template_arguments>
</tss>
</ety>
</fl>
<fl name="test_case_indices_" id="af5d4310224b86b937fe98ebc412e239_eab764805c9be7a092e13a605484cc18" file="36" linestart="827" lineend="827" access="private" proto="std::vector&lt;int&gt;">
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<bt name="int"/>
</template_arguments>
</tss>
</ety>
</fl>
<fl name="parameterized_test_registry_" id="af5d4310224b86b937fe98ebc412e239_9d6837d44c91f82ba040d561dfff87cc" file="36" linestart="832" lineend="832" access="private" proto="internal::ParameterizedTestCaseRegistry">
<ety>
<rt>
<cr id="f3b547dc1d8442e0b93fbb12c74b12b0_73675b5fb9ba1160f5962d5b15ba2742"/>
</rt>
</ety>
</fl>
<fl name="parameterized_tests_registered_" id="af5d4310224b86b937fe98ebc412e239_f106685ebd785c6c7b1a2a5eabcc93bb" file="36" linestart="835" lineend="835" isLiteral="true" access="private" proto="bool">
<bt name="bool"/>
</fl>
<fl name="last_death_test_case_" id="af5d4310224b86b937fe98ebc412e239_5a3726691f8cbe77f39134922e7f1938" file="36" linestart="839" lineend="839" isLiteral="true" access="private" proto="int">
<bt name="int"/>
</fl>
<fl name="current_test_info_" id="af5d4310224b86b937fe98ebc412e239_e5145804f44cadb9f942b09439cb95ff" file="36" linestart="851" lineend="851" isPtr="true" isLiteral="true" access="private" proto="testing::TestInfo *">
<pt>
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_ae44971a2ffb8623a217837d7c76110e"/>
</rt>
</pt>
</fl>
<fl name="ad_hoc_test_result_" id="af5d4310224b86b937fe98ebc412e239_2e3ffd410710c383108d3aea208d98f8" file="36" linestart="861" lineend="861" access="private" proto="testing::TestResult">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_3beb801c15cfd30bf754349ba324caaf"/>
</rt>
</fl>
<fl name="os_stack_trace_getter_" id="af5d4310224b86b937fe98ebc412e239_883ac95fca735c6b8983bfd4526ee3a1" file="36" linestart="871" lineend="871" isPtr="true" isLiteral="true" access="private" proto="testing::internal::OsStackTraceGetterInterface *">
<pt>
<rt>
<cr id="af5d4310224b86b937fe98ebc412e239_4898d4dd0815c000e57815bdcd560474"/>
</rt>
</pt>
</fl>
<fl name="post_flag_parse_init_performed_" id="af5d4310224b86b937fe98ebc412e239_500ce223aef4886dbb955ba743809058" file="36" linestart="874" lineend="874" isLiteral="true" access="private" proto="bool">
<bt name="bool"/>
</fl>
<fl name="random_seed_" id="af5d4310224b86b937fe98ebc412e239_341eea54201b7dfc50001e81c7ff0d62" file="36" linestart="877" lineend="877" isLiteral="true" access="private" proto="int">
<bt name="int"/>
</fl>
<fl name="elapsed_time_" id="af5d4310224b86b937fe98ebc412e239_d0b3ae1953d62add6b446c187db4d7be" file="36" linestart="883" lineend="883" isLiteral="true" access="private" proto="TimeInMillis">
<Tdef>
<ety>
<Tdef>
<bt name="long long"/>
</Tdef>
</ety>
</Tdef>
</fl>
<fl name="internal_run_death_test_flag_" id="af5d4310224b86b937fe98ebc412e239_5fdf2336170ba43c68d7f2341bb6fbeb" file="36" linestart="888" lineend="888" access="private" proto="internal::scoped_ptr&lt;InternalRunDeathTestFlag&gt;">
<ety>
<tss>
<templatebase id="0c2fb77eb4696cd7e7faa021a7cafdaf_d3f221d1604a5492e753f569b64a4a06"/>
<template_arguments>
<rt>
<cr id="a5e1300df8ffa37265adb036c8d3b481_4a18b61493bfca3d0db12970c7ef4cd5"/>
</rt>
</template_arguments>
</tss>
</ety>
</fl>
</cr>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="AutoHandle" id="af5d4310224b86b937fe98ebc412e239_77e051f6bc8693257a8f2443464616e7" file="36" linestart="941" lineend="962">
<c name="AutoHandle" id="af5d4310224b86b937fe98ebc412e239_bd9cb6bcce3891779b14966d1bf89a66" file="36" linestart="944" lineend="944" explicit="true" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="handle" proto="HANDLE" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</p>
<initlist id="af5d4310224b86b937fe98ebc412e239_f604cef30479ffc52db24768dc45ef8a"/>
</c>
<m name="Get" id="af5d4310224b86b937fe98ebc412e239_5100810e20ec082c1c91d1fa28cb157d" file="36" linestart="948" lineend="948" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="HANDLE">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</fpt>
</m>
<m name="Reset" id="af5d4310224b86b937fe98ebc412e239_4a0e49ce1b35402a107af588c1107c8f" file="36" linestart="949" lineend="949" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</m>
<m name="Reset" id="af5d4310224b86b937fe98ebc412e239_02a11c2a490db19f0c3bf1afd93de880" file="36" linestart="950" lineend="956" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="handle" proto="HANDLE" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</p>
</m>
</cr>
<cr namespace="testing.internal" access="none" depth="0" kind="class" name="TestCaseNameIs" id="254123e84e50c71f3a0f736a61a3c76f_90d0599a90cde3a51ea17e0ef48f8afe" file="2" linestart="4037" lineend="4050">
<c name="TestCaseNameIs" id="254123e84e50c71f3a0f736a61a3c76f_340dd09a5d7a64314472b3ed95f4b12e" file="2" linestart="4037" lineend="4037" copyconst="true" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="const testing::internal::TestCaseNameIs &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="254123e84e50c71f3a0f736a61a3c76f_90d0599a90cde3a51ea17e0ef48f8afe"/>
</rt>
</QualType>
</lrf>
</p>
</c>
</cr>
<f name="fabs" id="a823866927683535606b9d11836277e7_f6a350bb8ea4c5c942c1572051d4f259" file="37" linestart="491" lineend="491" extC="true" access="none">
<fpt cc="cdecl" proto="double">
<bt name="double"/>
</fpt>
<p name="_X" proto="double" isLiteral="true" isPrimitive="true" access2="none">
<bt name="double"/>
</p>
</f>
<f name="__iob_func" id="cdea8aa8302602a6a955aadc09f445e4_5013c562ec2ef55029a4f83c363d6d82" file="9" linestart="82" lineend="82" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="FILE *">
<pt>
<Tdef>
<ety>
<rt>
<cr id="cdea8aa8302602a6a955aadc09f445e4_9b75e14604360f7936837e5997e12eba"/>
</rt>
</ety>
</Tdef>
</pt>
</fpt>
</f>
<f name="free" id="17cba6e85ee945f0e4acd2e5f276ff1b_18bce003337bbc64add8899480965a40" file="38" linestart="641" lineend="641" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="_Memory" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
</f>
<f name="malloc" id="17cba6e85ee945f0e4acd2e5f276ff1b_8464147bf7f0a683938638da0353b7a7" file="38" linestart="642" lineend="642" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="void *">
<pt>
<bt name="void"/>
</pt>
</fpt>
<p name="_Size" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</p>
</f>
<f name="_wcsicmp" id="cdea8aa8302602a6a955aadc09f445e4_8fce799b2adc46335dac2a6e2a3faeb6" file="9" linestart="1087" lineend="1087" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
</fpt>
<p name="_Str1" proto="const wchar_t *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="wchar_t"/>
</QualType>
</pt>
</p>
<p name="_Str2" proto="const wchar_t *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="wchar_t"/>
</QualType>
</pt>
</p>
</f>
<f name="wcscmp" id="cdea8aa8302602a6a955aadc09f445e4_ab9824d1d9c17a1992f0f84efd92b4bc" file="9" linestart="1037" lineend="1037" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
</fpt>
<p name="_Str1" proto="const wchar_t *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="wchar_t"/>
</QualType>
</pt>
</p>
<p name="_Str2" proto="const wchar_t *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="wchar_t"/>
</QualType>
</pt>
</p>
</f>
<f name="wcslen" id="cdea8aa8302602a6a955aadc09f445e4_0737230ee87446abcf88232889f1a81c" file="9" linestart="1044" lineend="1044" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="size_t">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</fpt>
<p name="_Str" proto="const wchar_t *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="wchar_t"/>
</QualType>
</pt>
</p>
</f>
<f name="wcsstr" id="cdea8aa8302602a6a955aadc09f445e4_ffac73984b0978b2d9e9b2ec08471e27" file="9" linestart="1077" lineend="1077" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="const wchar_t *">
<pt>
<QualType const="true">
<bt name="wchar_t"/>
</QualType>
</pt>
</fpt>
<p name="_Str" proto="const wchar_t *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="wchar_t"/>
</QualType>
</pt>
</p>
<p name="_SubStr" proto="const wchar_t *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="wchar_t"/>
</QualType>
</pt>
</p>
</f>
<f name="memcpy" id="cdea8aa8302602a6a955aadc09f445e4_69c20c9e20a0eedce3b47df1c4264e02" file="9" linestart="1248" lineend="1248" extC="true" access="none">
<fpt cc="cdecl" proto="void *">
<pt>
<bt name="void"/>
</pt>
</fpt>
<p name="_Dst" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="_Src" proto="const void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</p>
<p name="_Size" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</p>
</f>
<f name="exit" id="17cba6e85ee945f0e4acd2e5f276ff1b_508905b7f4049a9f083c59a21f54149a" file="38" linestart="376" lineend="376" extC="true" imported="true" access="none">
<fpt noreturn="true" cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="_Code" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f name="_exit" id="17cba6e85ee945f0e4acd2e5f276ff1b_65d2f69a46a1e3ed10357fc92950de6f" file="38" linestart="378" lineend="378" extC="true" imported="true" access="none">
<fpt noreturn="true" cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="_Code" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f name="abort" id="17cba6e85ee945f0e4acd2e5f276ff1b_4418b52c93815720d341f77e2f2eabb6" file="38" linestart="379" lineend="379" extC="true" imported="true" access="none">
<fpt noreturn="true" cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
</f>
<f name="_set_abort_behavior" id="17cba6e85ee945f0e4acd2e5f276ff1b_3596cea2174fd3bba0006f9ab88049e1" file="38" linestart="382" lineend="382" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="_Flags" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
</p>
<p name="_Mask" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
</p>
</f>
<f name="_errno" id="17cba6e85ee945f0e4acd2e5f276ff1b_4b379d6ed707a376c8949cf144cc4ed1" file="38" linestart="245" lineend="245" extC="true" imported="true" access="none" storage="extern">
<fpt cc="cdecl" proto="int *">
<pt>
<bt name="int"/>
</pt>
</fpt>
</f>
<f name="_set_error_mode" id="17cba6e85ee945f0e4acd2e5f276ff1b_32d7d66cf3bebc6062245102e3f527bd" file="38" linestart="539" lineend="539" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
</fpt>
<p name="_Mode" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f name="strtol" id="17cba6e85ee945f0e4acd2e5f276ff1b_a959f91635665900917d89afa38ebd8a" file="38" linestart="544" lineend="544" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="long">
<bt name="long"/>
</fpt>
<p name="_Str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="_EndPtr" proto="char **" isPtr="true" isLiteral="true" access2="none">
<pt>
<pt>
<bt name="char"/>
</pt>
</pt>
</p>
<p name="_Radix" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f name="fclose" id="f2afefb835ec069e32b58b8b40462113_a7db084a539ca199b368636719032f72" file="39" linestart="184" lineend="184" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
</fpt>
<p name="_File" proto="FILE *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<ety>
<rt>
<cr id="cdea8aa8302602a6a955aadc09f445e4_9b75e14604360f7936837e5997e12eba"/>
</rt>
</ety>
</Tdef>
</pt>
</p>
</f>
<f name="fflush" id="f2afefb835ec069e32b58b8b40462113_c96cb62822255a4ebf2547ef54e0c72b" file="39" linestart="191" lineend="191" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
</fpt>
<p name="_File" proto="FILE *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<ety>
<rt>
<cr id="cdea8aa8302602a6a955aadc09f445e4_9b75e14604360f7936837e5997e12eba"/>
</rt>
</ety>
</Tdef>
</pt>
</p>
</f>
<f name="fprintf" id="f2afefb835ec069e32b58b8b40462113_8006820dad779bb96e507d9f56921caa" file="39" linestart="215" lineend="215" extC="true" variadic="true" imported="true" access="none">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
</fpt>
<p name="_File" proto="FILE *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<ety>
<rt>
<cr id="cdea8aa8302602a6a955aadc09f445e4_9b75e14604360f7936837e5997e12eba"/>
</rt>
</ety>
</Tdef>
</pt>
</p>
<p name="_Format" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f name="fputc" id="f2afefb835ec069e32b58b8b40462113_7044d1eb4e2660a73051da4f2fb5377a" file="39" linestart="219" lineend="219" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
</fpt>
<p name="_Ch" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="_File" proto="FILE *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<ety>
<rt>
<cr id="cdea8aa8302602a6a955aadc09f445e4_9b75e14604360f7936837e5997e12eba"/>
</rt>
</ety>
</Tdef>
</pt>
</p>
</f>
<f name="remove" id="f2afefb835ec069e32b58b8b40462113_8bb3404042fc4f29f4b9aab45a2453b8" file="39" linestart="274" lineend="274" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
</fpt>
<p name="_Filename" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f name="_snprintf_s" id="f2afefb835ec069e32b58b8b40462113_ac261e86354728df8c551add38706840" file="39" linestart="298" lineend="298" variadic="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
<exception_specifiers nothrow="true"/>
</fpt>
<p name="_Dest" proto="char (&amp;)[_Size]" isRef="true" access2="none">
<lrf>
<Paren/>
</lrf>
</p>
<p name="_MaxCount" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</p>
<p name="_Format" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<ft name="_snprintf_s" id="f2afefb835ec069e32b58b8b40462113_a71b2ec1ae7034bb003ca300ea500b7f" file="39" linestart="298" lineend="298">
<template_parameters/>
<f name="_snprintf_s" id="f2afefb835ec069e32b58b8b40462113_ac261e86354728df8c551add38706840" file="39" linestart="298" lineend="298" variadic="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
<exception_specifiers nothrow="true"/>
</fpt>
<p name="_Dest" proto="char (&amp;)[_Size]" isRef="true" access2="none">
<lrf>
<Paren/>
</lrf>
</p>
<p name="_MaxCount" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</p>
<p name="_Format" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
</ft>
<f name="fread" id="f2afefb835ec069e32b58b8b40462113_1bae9508ad6f2a889fb457ab3472fcb5" file="39" linestart="222" lineend="222" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="size_t">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</fpt>
<p name="_DstBuf" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="_ElementSize" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</p>
<p name="_Count" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</p>
<p name="_File" proto="FILE *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<ety>
<rt>
<cr id="cdea8aa8302602a6a955aadc09f445e4_9b75e14604360f7936837e5997e12eba"/>
</rt>
</ety>
</Tdef>
</pt>
</p>
</f>
<f name="fseek" id="f2afefb835ec069e32b58b8b40462113_4b57f17e4028a4d2d32219a3a09e4156" file="39" linestart="240" lineend="240" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
</fpt>
<p name="_File" proto="FILE *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<ety>
<rt>
<cr id="cdea8aa8302602a6a955aadc09f445e4_9b75e14604360f7936837e5997e12eba"/>
</rt>
</ety>
</Tdef>
</pt>
</p>
<p name="_Offset" proto="long" isLiteral="true" isPrimitive="true" access2="none">
<bt name="long"/>
</p>
<p name="_Origin" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f name="ftell" id="f2afefb835ec069e32b58b8b40462113_c86063c70845d49737facfb669d5c5b2" file="39" linestart="241" lineend="241" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="long">
<bt name="long"/>
</fpt>
<p name="_File" proto="FILE *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<ety>
<rt>
<cr id="cdea8aa8302602a6a955aadc09f445e4_9b75e14604360f7936837e5997e12eba"/>
</rt>
</ety>
</Tdef>
</pt>
</p>
</f>
<f name="printf" id="f2afefb835ec069e32b58b8b40462113_8ecc5426fc0e5d5dbabc0a56f272b798" file="39" linestart="264" lineend="264" extC="true" variadic="true" imported="true" access="none">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
</fpt>
<p name="_Format" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f name="_vsnprintf" id="f2afefb835ec069e32b58b8b40462113_d7874659b6a15b294022595dc1c27bed" file="39" linestart="346" lineend="346" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
</fpt>
<p name="_Dest" proto="char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="char"/>
</pt>
</p>
<p name="_Count" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</p>
<p name="_Format" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="_Args" proto="va_list" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<bt name="char"/>
</pt>
</Tdef>
</p>
</f>
<f name="vprintf" id="f2afefb835ec069e32b58b8b40462113_92ed7c91249eaa4de63b065b108ce199" file="39" linestart="331" lineend="331" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
</fpt>
<p name="_Format" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="_ArgList" proto="va_list" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<bt name="char"/>
</pt>
</Tdef>
</p>
</f>
<f name="memset" id="4943a312e91e60daa3d01ddadf69e920_bf40c0a1b4d8b1a89896ff3dabd943f1" file="40" linestart="94" lineend="94" extC="true" access="none">
<fpt cc="cdecl" proto="void *">
<pt>
<bt name="void"/>
</pt>
</fpt>
<p name="_Dst" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="_Val" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="_Size" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</p>
</f>
<f name="strcmp" id="4943a312e91e60daa3d01ddadf69e920_2dee96ea55dc08b88a4eec4934b9bb36" file="40" linestart="120" lineend="120" extC="true" access="none">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
</fpt>
<p name="_Str1" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="_Str2" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f name="strlen" id="4943a312e91e60daa3d01ddadf69e920_e42c32a191fd0e5e4028cbe2abba7964" file="40" linestart="121" lineend="121" extC="true" access="none">
<fpt cc="cdecl" proto="size_t">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</fpt>
<p name="_Str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f name="strncmp" id="4943a312e91e60daa3d01ddadf69e920_c92520991a60a1709b5c0833a1cba6f0" file="40" linestart="188" lineend="188" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
</fpt>
<p name="_Str1" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="_Str2" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="_MaxCount" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</p>
</f>
<f name="strrchr" id="4943a312e91e60daa3d01ddadf69e920_e50e4fdc46abfc610efd206182dbff79" file="40" linestart="200" lineend="200" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
<p name="_Str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="_Ch" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f name="strstr" id="4943a312e91e60daa3d01ddadf69e920_181125eb10c278b65d8c001f5d3a7a64" file="40" linestart="203" lineend="203" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
<p name="_Str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="_SubStr" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f name="strchr" id="4943a312e91e60daa3d01ddadf69e920_b1db327d580f29e9cda2e99fc34ccdef" file="40" linestart="152" lineend="152" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
<p name="_Str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="_Val" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f namespace="std" name="operator+" id="f2e96efeaba09e7d8921632d675962d4_f19d095bb750ed6d31c4b0dcf9a99d7a" file="14" linestart="2362" lineend="2372" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="basic_string&lt;_Elem, _Traits, _Alloc&gt;">
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="_Left" proto="const basic_string&lt;_Elem, _Traits, _Alloc&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
<p name="_Right" proto="const _Elem *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
</f>
<ft name="operator+" id="f2e96efeaba09e7d8921632d675962d4_7ba2f4a7b438046b66e55d748a951b5c" file="14" linestart="2360" lineend="2372">
<template_parameters>
<ttp name="_Elem" id="f2e96efeaba09e7d8921632d675962d4_ea52eac76e5240bb797ffa7d1fa6164a" depth="" index="" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="f2e96efeaba09e7d8921632d675962d4_cdb98559251f45f7fe8f6f691954b21d" depth="" index="" proto="type-parameter-0-1"/>
<ttp name="_Alloc" id="f2e96efeaba09e7d8921632d675962d4_51e3dddc635f482689bf14a3cb9690d1" depth="" index="" proto="type-parameter-0-2"/>
</template_parameters>
<f namespace="std" name="operator+" id="f2e96efeaba09e7d8921632d675962d4_f19d095bb750ed6d31c4b0dcf9a99d7a" file="14" linestart="2362" lineend="2372" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="basic_string&lt;_Elem, _Traits, _Alloc&gt;">
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="_Left" proto="const basic_string&lt;_Elem, _Traits, _Alloc&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
<p name="_Right" proto="const _Elem *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
</f>
</ft>
<f namespace="std" name="operator+" id="f2e96efeaba09e7d8921632d675962d4_19303d183802cb243156fc51150b854b" file="14" linestart="2444" lineend="2450" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="basic_string&lt;_Elem, _Traits, _Alloc&gt;">
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="_Left" proto="basic_string&lt;_Elem, _Traits, _Alloc&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</rrf>
</p>
<p name="_Right" proto="const _Elem *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
</f>
<ft name="operator+" id="f2e96efeaba09e7d8921632d675962d4_7ba2f4a7b438046b66e55d748a951b5c" file="14" linestart="2442" lineend="2450">
<template_parameters>
<ttp name="_Elem" id="f2e96efeaba09e7d8921632d675962d4_5d73b2d28dd85f3fbdac1dda6494c4ed" depth="" index="" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="f2e96efeaba09e7d8921632d675962d4_55384423e49e8a89e4b83a4e066ee5d3" depth="" index="" proto="type-parameter-0-1"/>
<ttp name="_Alloc" id="f2e96efeaba09e7d8921632d675962d4_37faa71a36e96ffec537113cdf680329" depth="" index="" proto="type-parameter-0-2"/>
</template_parameters>
<f namespace="std" name="operator+" id="f2e96efeaba09e7d8921632d675962d4_19303d183802cb243156fc51150b854b" file="14" linestart="2444" lineend="2450" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="basic_string&lt;_Elem, _Traits, _Alloc&gt;">
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</fpt>
<p name="_Left" proto="basic_string&lt;_Elem, _Traits, _Alloc&gt; &amp;&amp;" isRef="true" access2="none">
<rrf>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</rrf>
</p>
<p name="_Right" proto="const _Elem *" isPtr="true" access2="none">
<pt>
<QualType const="true">
<ttp/>
</QualType>
</pt>
</p>
</f>
</ft>
<f namespace="std" name="operator&lt;&lt;" id="4ca9ed490f2174b025fcd4586581c15c_a8b001da139eef9b7b8dd07e8c06f59d" file="16" linestart="783" lineend="828" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="basic_ostream&lt;char, _Traits&gt; &amp;">
<lrf>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<bt name="char"/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</fpt>
<p name="_Ostr" proto="basic_ostream&lt;char, _Traits&gt; &amp;" isRef="true" access2="none">
<lrf>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<bt name="char"/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</p>
<p name="_Val" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<ft name="operator&lt;&lt;" id="4ca9ed490f2174b025fcd4586581c15c_3298dfe44ddb6b69da98967bbc11dbef" file="16" linestart="783" lineend="828">
<template_parameters>
<ttp name="_Traits" id="4ca9ed490f2174b025fcd4586581c15c_29653cbbe518513f057baf83aeea343a" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="std" name="operator&lt;&lt;" id="4ca9ed490f2174b025fcd4586581c15c_a8b001da139eef9b7b8dd07e8c06f59d" file="16" linestart="783" lineend="828" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="basic_ostream&lt;char, _Traits&gt; &amp;">
<lrf>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<bt name="char"/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</fpt>
<p name="_Ostr" proto="basic_ostream&lt;char, _Traits&gt; &amp;" isRef="true" access2="none">
<lrf>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<bt name="char"/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</p>
<p name="_Val" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
</ft>
<f namespace="std" name="operator&lt;&lt;" id="4ca9ed490f2174b025fcd4586581c15c_dee3aef429df9aee004ea7f5e29a8aaf" file="16" linestart="830" lineend="867" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="basic_ostream&lt;char, _Traits&gt; &amp;">
<lrf>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<bt name="char"/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</fpt>
<p name="_Ostr" proto="basic_ostream&lt;char, _Traits&gt; &amp;" isRef="true" access2="none">
<lrf>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<bt name="char"/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</p>
<p name="_Ch" proto="char" isLiteral="true" isPrimitive="true" access2="none">
<bt name="char"/>
</p>
</f>
<ft name="operator&lt;&lt;" id="4ca9ed490f2174b025fcd4586581c15c_3298dfe44ddb6b69da98967bbc11dbef" file="16" linestart="830" lineend="867">
<template_parameters>
<ttp name="_Traits" id="4ca9ed490f2174b025fcd4586581c15c_4b0ad07f29bb555e25e9a46d732c5b0a" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="std" name="operator&lt;&lt;" id="4ca9ed490f2174b025fcd4586581c15c_dee3aef429df9aee004ea7f5e29a8aaf" file="16" linestart="830" lineend="867" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="basic_ostream&lt;char, _Traits&gt; &amp;">
<lrf>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<bt name="char"/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</fpt>
<p name="_Ostr" proto="basic_ostream&lt;char, _Traits&gt; &amp;" isRef="true" access2="none">
<lrf>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<bt name="char"/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</p>
<p name="_Ch" proto="char" isLiteral="true" isPrimitive="true" access2="none">
<bt name="char"/>
</p>
</f>
</ft>
<f namespace="std" name="endl" id="4ca9ed490f2174b025fcd4586581c15c_519f22e86fa75f44ad68a8158aae2a36" file="16" linestart="995" lineend="1002" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="basic_ostream&lt;_Elem, _Traits&gt; &amp;">
<lrf>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</fpt>
<p name="_Ostr" proto="basic_ostream&lt;_Elem, _Traits&gt; &amp;" isRef="true" access2="none">
<lrf>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</p>
</f>
<ft name="endl" id="4ca9ed490f2174b025fcd4586581c15c_74537f44d6cd7a95f2b060cedb35e9d9" file="16" linestart="994" lineend="1002">
<template_parameters>
<ttp name="_Elem" id="4ca9ed490f2174b025fcd4586581c15c_3ebe6248f47274de228e7ab1d4c7f696" depth="" index="" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="4ca9ed490f2174b025fcd4586581c15c_8a9fe01f4f41f3e2862becdd6b274d11" depth="" index="" proto="type-parameter-0-1"/>
</template_parameters>
<f namespace="std" name="endl" id="4ca9ed490f2174b025fcd4586581c15c_519f22e86fa75f44ad68a8158aae2a36" file="16" linestart="995" lineend="1002" access="none" inline="true" hasbody="true" isdef="true">
<fpt cc="cdecl" proto="basic_ostream&lt;_Elem, _Traits&gt; &amp;">
<lrf>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</fpt>
<p name="_Ostr" proto="basic_ostream&lt;_Elem, _Traits&gt; &amp;" isRef="true" access2="none">
<lrf>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</p>
</f>
</ft>
<f namespace="std" name="operator&lt;&lt;" id="a209df7a1a86d471e558d77b627264d2_b80fc58520a6f91294a5020bb40669a5" file="41" linestart="165" lineend="212" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="basic_ostream&lt;_Elem, _Traits&gt; &amp;">
<lrf>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</fpt>
<p name="_Ostr" proto="basic_ostream&lt;_Elem, _Traits&gt; &amp;" isRef="true" access2="none">
<lrf>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</p>
<p name="_Str" proto="const basic_string&lt;_Elem, _Traits, _Alloc&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
</f>
<ft name="operator&lt;&lt;" id="a209df7a1a86d471e558d77b627264d2_3298dfe44ddb6b69da98967bbc11dbef" file="41" linestart="163" lineend="212">
<template_parameters>
<ttp name="_Elem" id="a209df7a1a86d471e558d77b627264d2_f342719bce89f8e97b24611af6682779" depth="" index="" proto="type-parameter-0-0"/>
<ttp name="_Traits" id="a209df7a1a86d471e558d77b627264d2_f48f543d017b5a1d20f9bb1538b91f0d" depth="" index="" proto="type-parameter-0-1"/>
<ttp name="_Alloc" id="a209df7a1a86d471e558d77b627264d2_a7fb9bffd330dba797f5cdf7664ae3c4" depth="" index="" proto="type-parameter-0-2"/>
</template_parameters>
<f namespace="std" name="operator&lt;&lt;" id="a209df7a1a86d471e558d77b627264d2_b80fc58520a6f91294a5020bb40669a5" file="41" linestart="165" lineend="212" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="basic_ostream&lt;_Elem, _Traits&gt; &amp;">
<lrf>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</fpt>
<p name="_Ostr" proto="basic_ostream&lt;_Elem, _Traits&gt; &amp;" isRef="true" access2="none">
<lrf>
<tss>
<templatebase id="4ca9ed490f2174b025fcd4586581c15c_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</lrf>
</p>
<p name="_Str" proto="const basic_string&lt;_Elem, _Traits, _Alloc&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<ttp/>
<ttp/>
<ttp/>
</template_arguments>
</tss>
</QualType>
</lrf>
</p>
</f>
</ft>
<f name="_getcwd" id="ee77826b62a83704d4fc4513f862226d_7cfdbccff2471c83017e0c0691d595b3" file="42" linestart="59" lineend="59" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="char *">
<pt>
<bt name="char"/>
</pt>
</fpt>
<p name="_DstBuf" proto="char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="char"/>
</pt>
</p>
<p name="_SizeInBytes" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f name="_mkdir" id="ee77826b62a83704d4fc4513f862226d_774a4aca522ecffff62fa3b32d6257fc" file="42" linestart="72" lineend="72" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
</fpt>
<p name="_Path" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f name="_open_osfhandle" id="a5a7b6964f8d49b1a838e541bd6f4616_06ba299b4a09d0b5a24aa303303906c4" file="43" linestart="315" lineend="315" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
</fpt>
<p name="_OSFileHandle" proto="intptr_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="int"/>
</Tdef>
</p>
<p name="_Flags" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f name="close" id="a5a7b6964f8d49b1a838e541bd6f4616_acb8f087b90f585fb3974bee19f22448" file="43" linestart="326" lineend="326" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
</fpt>
<p name="_FileHandle" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f name="creat" id="a5a7b6964f8d49b1a838e541bd6f4616_d8fa51c87455b3efb2bff927faddff61" file="43" linestart="327" lineend="327" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
</fpt>
<p name="_Filename" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="_PermissionMode" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f name="dup" id="a5a7b6964f8d49b1a838e541bd6f4616_680ca8ba16741373d7c6f964520a4cf5" file="43" linestart="328" lineend="328" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
</fpt>
<p name="_FileHandle" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f name="dup2" id="a5a7b6964f8d49b1a838e541bd6f4616_0a72bbc80f8c32028810e8d71ac76bd4" file="43" linestart="329" lineend="329" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="int">
<bt name="int"/>
</fpt>
<p name="_FileHandleSrc" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="_FileHandleDst" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f namespace="testing.internal" name="IsTrue" id="0c2fb77eb4696cd7e7faa021a7cafdaf_e079c2e7de04dc93e069d8c58dcd8fce" file="18" linestart="777" lineend="777" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="condition" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
</f>
<f namespace="testing.internal" name="FormatFileLocation" id="0c2fb77eb4696cd7e7faa021a7cafdaf_bd75700de76afda90f829fd4b1eaf4f9" file="18" linestart="894" lineend="894" access="none" hasbody="true">
<fpt proto="::std::string">
<ety>
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<bt name="char"/>
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_bf3447e13ccfc57e5fa847f5d78e7639"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
<tss>
<templatebase id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_07566aa809aee0bdf1c0fac16e19fa85"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</Tdef>
</ety>
</fpt>
<p name="file" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="line" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f namespace="testing.internal" name="FormatCompilerIndependentFileLocation" id="0c2fb77eb4696cd7e7faa021a7cafdaf_142fc0785fdd8023443f23a1366feac3" file="18" linestart="899" lineend="900" access="none" hasbody="true">
<fpt proto="::std::string">
<ety>
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<bt name="char"/>
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_bf3447e13ccfc57e5fa847f5d78e7639"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
<tss>
<templatebase id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_07566aa809aee0bdf1c0fac16e19fa85"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</Tdef>
</ety>
</fpt>
<p name="file" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="line" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f namespace="testing.internal" name="FlushInfoLog" id="0c2fb77eb4696cd7e7faa021a7cafdaf_326eee7d770a46041c0246c525bcde46" file="18" linestart="938" lineend="938" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</f>
<f namespace="testing.internal" name="ImplicitCast_" id="0c2fb77eb4696cd7e7faa021a7cafdaf_c19f7af3251526833c995a3840d5ad89" file="18" linestart="992" lineend="992" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="To">
<ttp/>
</fpt>
<p name="x" proto="To" access2="none">
<ttp/>
</p>
</f>
<ft name="ImplicitCast_" id="0c2fb77eb4696cd7e7faa021a7cafdaf_5933d4797ce38af327ed5547a1a4e388" file="18" linestart="991" lineend="992">
<template_parameters>
<ttp name="To" id="0c2fb77eb4696cd7e7faa021a7cafdaf_02e11507d205931966d69313ac0f932f" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="testing.internal" name="ImplicitCast_" id="0c2fb77eb4696cd7e7faa021a7cafdaf_c19f7af3251526833c995a3840d5ad89" file="18" linestart="992" lineend="992" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="To">
<ttp/>
</fpt>
<p name="x" proto="To" access2="none">
<ttp/>
</p>
</f>
</ft>
<f namespace="testing.internal" name="CaptureStderr" id="0c2fb77eb4696cd7e7faa021a7cafdaf_82d32fe7444eecab5402107bf2c43299" file="18" linestart="1058" lineend="1058" access="none" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</f>
<f namespace="testing.internal" name="GetCapturedStderr" id="0c2fb77eb4696cd7e7faa021a7cafdaf_b3be0695eb869050ff6cc60fa133da5e" file="18" linestart="1059" lineend="1059" access="none" hasbody="true">
<fpt proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fpt>
</f>
<v namespace="testing.internal" name="g_argvs" proto="::std::vector&lt;String&gt;" id="0c2fb77eb4696cd7e7faa021a7cafdaf_776d5b4ec3b7848d3f59e721c2abc330" file="18" linestart="1067" lineend="1067" storage="extern" access2="none">
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</template_arguments>
</tss>
</ety>
</v>
<f namespace="testing.internal" name="IsSpace" id="0c2fb77eb4696cd7e7faa021a7cafdaf_b0a8a1960020c069db3f8b3b83865a87" file="18" linestart="1533" lineend="1535" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="ch" proto="char" isLiteral="true" isPrimitive="true" access2="none">
<bt name="char"/>
</p>
</f>
<f namespace="testing.internal" name="IsXDigit" id="0c2fb77eb4696cd7e7faa021a7cafdaf_4d8c6dbfd1225cfdff8b84584894d036" file="18" linestart="1539" lineend="1541" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="ch" proto="char" isLiteral="true" isPrimitive="true" access2="none">
<bt name="char"/>
</p>
</f>
<f namespace="testing.internal" name="ToUpper" id="0c2fb77eb4696cd7e7faa021a7cafdaf_fb9924faf93615553bc2b73d1fcd177e" file="18" linestart="1546" lineend="1548" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="char">
<bt name="char"/>
</fpt>
<p name="ch" proto="char" isLiteral="true" isPrimitive="true" access2="none">
<bt name="char"/>
</p>
</f>
<f namespace="testing.internal.posix" name="IsATTY" id="0c2fb77eb4696cd7e7faa021a7cafdaf_88e7e826ee0e953213995ef1ec652da5" file="18" linestart="1574" lineend="1574" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="int">
<bt name="int"/>
</fpt>
<p name="fd" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f namespace="testing.internal.posix" name="StrCaseCmp" id="0c2fb77eb4696cd7e7faa021a7cafdaf_f07cc3dae93dc226effbaf9691720d4f" file="18" linestart="1576" lineend="1578" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="int">
<bt name="int"/>
</fpt>
<p name="s1" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="s2" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f namespace="testing.internal.posix" name="StrDup" id="0c2fb77eb4696cd7e7faa021a7cafdaf_c42d551976b0b62e4c3cea84af3254be" file="18" linestart="1579" lineend="1579" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="char *">
<pt>
<bt name="char"/>
</pt>
</fpt>
<p name="src" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f namespace="testing.internal.posix" name="FileNo" id="0c2fb77eb4696cd7e7faa021a7cafdaf_226d3b4f067ba42193c5c47f1a6e1770" file="18" linestart="1587" lineend="1587" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="int">
<bt name="int"/>
</fpt>
<p name="file" proto="FILE *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<ety>
<rt>
<cr id="cdea8aa8302602a6a955aadc09f445e4_9b75e14604360f7936837e5997e12eba"/>
</rt>
</ety>
</Tdef>
</pt>
</p>
</f>
<f namespace="testing.internal.posix" name="Stat" id="0c2fb77eb4696cd7e7faa021a7cafdaf_6a0427a52f87695ea8d2a9edc6ee323b" file="18" linestart="1588" lineend="1588" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="int">
<bt name="int"/>
</fpt>
<p name="path" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="buf" proto="StatStruct *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<ety>
<rt>
<cr id="cdea8aa8302602a6a955aadc09f445e4_0b7cf359f889fb602d2f4fb1e94bb67f"/>
</rt>
</ety>
</Tdef>
</pt>
</p>
</f>
<f namespace="testing.internal.posix" name="IsDir" id="0c2fb77eb4696cd7e7faa021a7cafdaf_3adec98dc0c60a8d1bcb63af1491f5f6" file="18" linestart="1590" lineend="1592" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="st" proto="const StatStruct &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<Tdef>
<ety>
<rt>
<cr id="cdea8aa8302602a6a955aadc09f445e4_0b7cf359f889fb602d2f4fb1e94bb67f"/>
</rt>
</ety>
</Tdef>
</QualType>
</lrf>
</p>
</f>
<f namespace="testing.internal.posix" name="StrNCpy" id="0c2fb77eb4696cd7e7faa021a7cafdaf_16425627aaff3667ce30c534d33581ff" file="18" linestart="1619" lineend="1621" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
<p name="dest" proto="char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="char"/>
</pt>
</p>
<p name="src" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="n" proto="size_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</p>
</f>
<f namespace="testing.internal.posix" name="FOpen" id="0c2fb77eb4696cd7e7faa021a7cafdaf_0abe21b1b5f29ad52be8bc9250bc323b" file="18" linestart="1630" lineend="1632" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="FILE *">
<pt>
<Tdef>
<ety>
<rt>
<cr id="cdea8aa8302602a6a955aadc09f445e4_9b75e14604360f7936837e5997e12eba"/>
</rt>
</ety>
</Tdef>
</pt>
</fpt>
<p name="path" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="mode" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f namespace="testing.internal.posix" name="FDOpen" id="0c2fb77eb4696cd7e7faa021a7cafdaf_1788d8112b1f08628649e3b42b05bb65" file="18" linestart="1637" lineend="1637" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="FILE *">
<pt>
<Tdef>
<ety>
<rt>
<cr id="cdea8aa8302602a6a955aadc09f445e4_9b75e14604360f7936837e5997e12eba"/>
</rt>
</ety>
</Tdef>
</pt>
</fpt>
<p name="fd" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="mode" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f namespace="testing.internal.posix" name="FClose" id="0c2fb77eb4696cd7e7faa021a7cafdaf_187648cbe313f69156df3f82f41bdefe" file="18" linestart="1639" lineend="1639" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="int">
<bt name="int"/>
</fpt>
<p name="fp" proto="FILE *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<ety>
<rt>
<cr id="cdea8aa8302602a6a955aadc09f445e4_9b75e14604360f7936837e5997e12eba"/>
</rt>
</ety>
</Tdef>
</pt>
</p>
</f>
<f namespace="testing.internal.posix" name="Read" id="0c2fb77eb4696cd7e7faa021a7cafdaf_306bb97ffd16282bba49d89c002505d1" file="18" linestart="1641" lineend="1643" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="int">
<bt name="int"/>
</fpt>
<p name="fd" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="buf" proto="void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="void"/>
</pt>
</p>
<p name="count" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
</p>
</f>
<f namespace="testing.internal.posix" name="Write" id="0c2fb77eb4696cd7e7faa021a7cafdaf_8c59e241bbb9cc494348f6e6b4b3ee67" file="18" linestart="1644" lineend="1646" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="int">
<bt name="int"/>
</fpt>
<p name="fd" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="buf" proto="const void *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</p>
<p name="count" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
</p>
</f>
<f namespace="testing.internal.posix" name="Close" id="0c2fb77eb4696cd7e7faa021a7cafdaf_e4601d783a1682240e0f8e42592dd5cf" file="18" linestart="1647" lineend="1647" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="int">
<bt name="int"/>
</fpt>
<p name="fd" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f namespace="testing.internal.posix" name="StrError" id="0c2fb77eb4696cd7e7faa021a7cafdaf_4998e11d22d772e3162dff9a4402daf2" file="18" linestart="1648" lineend="1648" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
<p name="errnum" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f namespace="testing.internal.posix" name="GetEnv" id="0c2fb77eb4696cd7e7faa021a7cafdaf_f8f052924972793380e0fb37fb1714a0" file="18" linestart="1650" lineend="1662" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
<p name="name" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f namespace="testing.internal.posix" name="Abort" id="0c2fb77eb4696cd7e7faa021a7cafdaf_5caf715f3786ff742044c249ce80967c" file="18" linestart="1674" lineend="1674" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</f>
<f namespace="testing.internal" name="ParseInt32" id="0c2fb77eb4696cd7e7faa021a7cafdaf_7ff44f71307b8674f008941c96533fe4" file="18" linestart="1774" lineend="1774" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="src_text" proto="const testing::Message &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="d6da877cd43d9ea62976e055cbb7a3f4_a57271b22cdb2fdb3d50588243bf5562"/>
</rt>
</QualType>
</lrf>
</p>
<p name="str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="value" proto="Int32 *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<ety>
<Tdef>
<bt name="int"/>
</Tdef>
</ety>
</Tdef>
</pt>
</p>
</f>
<f namespace="testing.internal" name="BoolFromGTestEnv" id="0c2fb77eb4696cd7e7faa021a7cafdaf_054fdab70b2e33f4b89c374407aa6704" file="18" linestart="1778" lineend="1778" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="flag" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="default_val" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
</f>
<f namespace="testing.internal" name="Int32FromGTestEnv" id="0c2fb77eb4696cd7e7faa021a7cafdaf_d1f71d71c52cd02ea75e9f1e3b78fb5b" file="18" linestart="1779" lineend="1779" access="none" hasbody="true">
<fpt proto="Int32">
<Tdef>
<ety>
<Tdef>
<bt name="int"/>
</Tdef>
</ety>
</Tdef>
</fpt>
<p name="flag" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="default_val" proto="Int32" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<ety>
<Tdef>
<bt name="int"/>
</Tdef>
</ety>
</Tdef>
</p>
</f>
<f namespace="testing.internal" name="StringFromGTestEnv" id="0c2fb77eb4696cd7e7faa021a7cafdaf_e87ca0dd8e5c45fadc7eb2146740b181" file="18" linestart="1780" lineend="1780" access="none" hasbody="true">
<fpt proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
<p name="flag" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="default_val" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f namespace="std" name="setbase" id="b9ca03278036b25ad6754b034732256e_fabab595a92e7e23237f5a945deef0ab" file="19" linestart="284" lineend="284" imported="true" access="none">
<fpt cc="cdecl" proto="_Smanip&lt;int&gt;">
<tss>
<templatebase id="b9ca03278036b25ad6754b034732256e_adb9486b1bef17a97e5f0cafa22c6ea5"/>
<template_arguments>
<bt name="int"/>
</template_arguments>
</tss>
</fpt>
<p name="" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f namespace="std" name="setprecision" id="b9ca03278036b25ad6754b034732256e_2655ff8fa9d206c9e93928e5e610da92" file="19" linestart="285" lineend="285" imported="true" access="none">
<fpt cc="cdecl" proto="_Smanip&lt;streamsize&gt;">
<tss>
<templatebase id="b9ca03278036b25ad6754b034732256e_adb9486b1bef17a97e5f0cafa22c6ea5"/>
<template_arguments>
<Tdef>
<Tdef>
<bt name="long long"/>
</Tdef>
</Tdef>
</template_arguments>
</tss>
</fpt>
<p name="" proto="streamsize" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<Tdef>
<bt name="long long"/>
</Tdef>
</Tdef>
</p>
</f>
<f namespace="testing.internal" name="operator&lt;&lt;" id="062315ef9bdab19c3cabee16a5b6d183_78add10ea61f9fb354d5ef5034505631" file="22" linestart="316" lineend="330" operator="true" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="::std::ostream &amp;">
<lrf>
<ety>
<Tdef>
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<bt name="char"/>
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_bf3447e13ccfc57e5fa847f5d78e7639"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</Tdef>
</ety>
</lrf>
</fpt>
<p name="os" proto="::std::ostream &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<ety>
<Tdef>
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_7df99f34c778205aaa2e1759bec30243"/>
<template_arguments>
<bt name="char"/>
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_bf3447e13ccfc57e5fa847f5d78e7639"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</Tdef>
</ety>
</lrf>
</p>
<p name="str" proto="const testing::internal::String &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</QualType>
</lrf>
</p>
</f>
<f namespace="testing.internal" name="StringStreamToString" id="062315ef9bdab19c3cabee16a5b6d183_c5ab42a2832ac7a090d7dc9746442005" file="22" linestart="334" lineend="334" access="none" hasbody="true">
<fpt proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fpt>
<p name="stream" proto="::std::stringstream *" isPtr="true" isLiteral="true" access2="none">
<pt>
<ety>
<Tdef>
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_aba35b20ea03dd03e503380b9186c293"/>
<template_arguments>
<bt name="char"/>
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_bf3447e13ccfc57e5fa847f5d78e7639"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_07566aa809aee0bdf1c0fac16e19fa85"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</Tdef>
</ety>
</pt>
</p>
</f>
<f namespace="std" name="for_each" id="94a7e75d7a66258cfa0b786887370f56_7fb296f954af8a412b7d6b871680843a" file="44" linestart="28" lineend="36" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="_Fn1">
<ttp/>
</fpt>
<p name="_First" proto="_InIt" access2="none">
<ttp/>
</p>
<p name="_Last" proto="_InIt" access2="none">
<ttp/>
</p>
<p name="_Func" proto="_Fn1" access2="none">
<ttp/>
</p>
</f>
<ft name="for_each" id="94a7e75d7a66258cfa0b786887370f56_ce46380fcc81784fdea65183845c58fc" file="44" linestart="27" lineend="36">
<template_parameters>
<ttp name="_InIt" id="94a7e75d7a66258cfa0b786887370f56_34c9b4b181335163ea60aa5c6e8e1ba4" depth="" index="" proto="type-parameter-0-0"/>
<ttp name="_Fn1" id="94a7e75d7a66258cfa0b786887370f56_231eaff65926b233f9a55300c5664a09" depth="" index="" proto="type-parameter-0-1"/>
</template_parameters>
<f namespace="std" name="for_each" id="94a7e75d7a66258cfa0b786887370f56_7fb296f954af8a412b7d6b871680843a" file="44" linestart="28" lineend="36" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="_Fn1">
<ttp/>
</fpt>
<p name="_First" proto="_InIt" access2="none">
<ttp/>
</p>
<p name="_Last" proto="_InIt" access2="none">
<ttp/>
</p>
<p name="_Func" proto="_Fn1" access2="none">
<ttp/>
</p>
</f>
</ft>
<f namespace="std" name="find_if" id="94a7e75d7a66258cfa0b786887370f56_e92274f22dace3781fd703caa972ee18" file="44" linestart="50" lineend="57" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="_InIt">
<ttp/>
</fpt>
<p name="_First" proto="_InIt" access2="none">
<ttp/>
</p>
<p name="_Last" proto="_InIt" access2="none">
<ttp/>
</p>
<p name="_Pred" proto="_Pr" access2="none">
<ttp/>
</p>
</f>
<ft name="find_if" id="94a7e75d7a66258cfa0b786887370f56_309ba656abdb5001f47b3af1e0a9a7a2" file="44" linestart="49" lineend="57">
<template_parameters>
<ttp name="_InIt" id="94a7e75d7a66258cfa0b786887370f56_0d20ebd42448a2b4c1b2b50401a3b8a7" depth="" index="" proto="type-parameter-0-0"/>
<ttp name="_Pr" id="94a7e75d7a66258cfa0b786887370f56_98a5bd28921c9080e06636e593098675" depth="" index="" proto="type-parameter-0-1"/>
</template_parameters>
<f namespace="std" name="find_if" id="94a7e75d7a66258cfa0b786887370f56_e92274f22dace3781fd703caa972ee18" file="44" linestart="50" lineend="57" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="_InIt">
<ttp/>
</fpt>
<p name="_First" proto="_InIt" access2="none">
<ttp/>
</p>
<p name="_Last" proto="_InIt" access2="none">
<ttp/>
</p>
<p name="_Pred" proto="_Pr" access2="none">
<ttp/>
</p>
</f>
</ft>
<f namespace="testing.internal" name="AppendUserMessage" id="361592d094a324447c0b12d8c282c7d5_d997324f8ae5c8dcb43174797ab55d60" file="24" linestart="195" lineend="196" access="none" hasbody="true">
<fpt proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fpt>
<p name="gtest_msg" proto="const testing::internal::String &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</QualType>
</lrf>
</p>
<p name="user_msg" proto="const testing::Message &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="d6da877cd43d9ea62976e055cbb7a3f4_a57271b22cdb2fdb3d50588243bf5562"/>
</rt>
</QualType>
</lrf>
</p>
</f>
<f namespace="testing.internal" name="EqFailure" id="361592d094a324447c0b12d8c282c7d5_468181dc3bfc4b19fd2982ec845876cd" file="24" linestart="303" lineend="307" access="none" hasbody="true">
<fpt proto="testing::AssertionResult">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_1b0b5edb5a536c8577b46f6e0d5d791d"/>
</rt>
</fpt>
<p name="expected_expression" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="actual_expression" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="expected_value" proto="const testing::internal::String &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</QualType>
</lrf>
</p>
<p name="actual_value" proto="const testing::internal::String &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</QualType>
</lrf>
</p>
<p name="ignoring_case" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
</f>
<f namespace="testing.internal" name="GetTypeId" id="361592d094a324447c0b12d8c282c7d5_cd22e86b89489732011436ed2fb38102" file="24" linestart="521" lineend="527" access="none" hasbody="true" isdef="true">
<fpt proto="TypeId">
<Tdef>
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</Tdef>
</fpt>
</f>
<ft name="GetTypeId" id="361592d094a324447c0b12d8c282c7d5_052a6ecf837d2e7f20ff29949633ce7f" file="24" linestart="520" lineend="527">
<template_parameters>
<ttp name="T" id="361592d094a324447c0b12d8c282c7d5_2a19de33240aa5b51ea37b266dd22518" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="testing.internal" name="GetTypeId" id="361592d094a324447c0b12d8c282c7d5_cd22e86b89489732011436ed2fb38102" file="24" linestart="521" lineend="527" access="none" hasbody="true" isdef="true">
<fpt proto="TypeId">
<Tdef>
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</Tdef>
</fpt>
</f>
</ft>
<f namespace="testing.internal" name="GetTestTypeId" id="361592d094a324447c0b12d8c282c7d5_e8ecc4c7ff1c3d40cce55780474106a4" file="24" linestart="534" lineend="534" access="none" hasbody="true">
<fpt proto="TypeId">
<Tdef>
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</Tdef>
</fpt>
</f>
<f namespace="testing.internal" name="SkipPrefix" id="361592d094a324447c0b12d8c282c7d5_c09f972d4759fc710840b449a0b2f1ee" file="24" linestart="607" lineend="607" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="prefix" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="pstr" proto="const char **" isPtr="true" isLiteral="true" access2="none">
<pt>
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</pt>
</p>
</f>
<f namespace="testing.internal" name="SkipComma" id="361592d094a324447c0b12d8c282c7d5_be7f771dca62f24a031db006e65d7416" file="24" linestart="645" lineend="652" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="const char *">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</fpt>
<p name="str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f namespace="testing.internal" name="GetPrefixUntilComma" id="361592d094a324447c0b12d8c282c7d5_0bea242a7c3c282b80ed9e6bd3eddd0b" file="24" linestart="656" lineend="659" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fpt>
<p name="str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f namespace="testing.internal" name="AlwaysTrue" id="361592d094a324447c0b12d8c282c7d5_b061c53aa5ce5e42d26ae10e46ba8749" file="24" linestart="760" lineend="760" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
</f>
<f namespace="testing.internal" name="AlwaysFalse" id="361592d094a324447c0b12d8c282c7d5_1dd208f24ad527c7e4778bc857650b08" file="24" linestart="763" lineend="763" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
</f>
<v namespace="testing.internal" name="FLAGS_gtest_internal_run_death_test" proto="::testing::internal::String" id="a5e1300df8ffa37265adb036c8d3b481_3915d40c5e27031429bfaf12b7b941c8" file="25" linestart="47" lineend="47" storage="extern" access2="none">
<ety>
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</ety>
</v>
<v namespace="testing.internal" name="kDeathTestStyleFlag" proto="const char [17]" isArray="true" isLiteral="true" id="a5e1300df8ffa37265adb036c8d3b481_28068b1ffe1fdd54ed8c5203394e1f68" file="25" linestart="50" lineend="50" init="true" access2="none">
<at>
<QualType const="true">
<bt name="char"/>
</QualType>
</at>
</v>
<v namespace="testing.internal" name="kDeathTestUseFork" proto="const char [20]" isArray="true" isLiteral="true" id="a5e1300df8ffa37265adb036c8d3b481_0a24e17f5978a789b220c3e3218cad44" file="25" linestart="51" lineend="51" init="true" access2="none">
<at>
<QualType const="true">
<bt name="char"/>
</QualType>
</at>
</v>
<v namespace="testing.internal" name="kInternalRunDeathTestFlag" proto="const char [24]" isArray="true" isLiteral="true" id="a5e1300df8ffa37265adb036c8d3b481_2a92bf02f24c5ad99b90aac6730eda3b" file="25" linestart="52" lineend="52" init="true" access2="none">
<at>
<QualType const="true">
<bt name="char"/>
</QualType>
</at>
</v>
<v namespace="testing" name="FLAGS_gtest_death_test_style" proto="::testing::internal::String" id="968f001f49ab9e1602e0026497dbac2b_b1267d7d428fa5967eef91a115ef8e86" file="26" linestart="50" lineend="50" storage="extern" access2="none">
<ety>
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</ety>
</v>
<v namespace="testing" name="kMaxStackTraceDepth" proto="const int" const="true" isLiteral="true" isPrimitive="true" id="0dc4cd8d4d61c13ddce2ee0effc89eca_489d8b40f835c325b24fb8841257df21" file="30" linestart="146" lineend="146" init="true" access2="none">
<QualType const="true">
<bt name="int"/>
</QualType>
</v>
<f namespace="testing.internal" name="StreamableToString" id="0dc4cd8d4d61c13ddce2ee0effc89eca_f46663b25d20a831dcb5dbfb250dd986" file="30" linestart="172" lineend="174" previous="361592d094a324447c0b12d8c282c7d5_f46663b25d20a831dcb5dbfb250dd986" access="none" hasbody="true" isdef="true">
<fpt proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fpt>
<p name="streamable" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
<ft name="StreamableToString" id="0dc4cd8d4d61c13ddce2ee0effc89eca_8e7d4c9bf944c0d863866fed7915cc53" file="30" linestart="171" lineend="174" previous="361592d094a324447c0b12d8c282c7d5_8e7d4c9bf944c0d863866fed7915cc53">
<template_parameters>
<ttp name="T" id="0dc4cd8d4d61c13ddce2ee0effc89eca_7e6f6696d8d7d096b77deba2b1c02b75" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="testing.internal" name="StreamableToString" id="0dc4cd8d4d61c13ddce2ee0effc89eca_f46663b25d20a831dcb5dbfb250dd986" file="30" linestart="172" lineend="174" previous="361592d094a324447c0b12d8c282c7d5_f46663b25d20a831dcb5dbfb250dd986" access="none" hasbody="true" isdef="true">
<fpt proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fpt>
<p name="streamable" proto="const T &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
</ft>
<f namespace="testing" name="AssertionSuccess" id="0dc4cd8d4d61c13ddce2ee0effc89eca_cf19ab27d295998d99a332685b7d1689" file="30" linestart="324" lineend="324" access="none" hasbody="true">
<fpt proto="testing::AssertionResult">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_1b0b5edb5a536c8577b46f6e0d5d791d"/>
</rt>
</fpt>
</f>
<f namespace="testing" name="AssertionFailure" id="0dc4cd8d4d61c13ddce2ee0effc89eca_cb94dd63061aed6547fb0dd3387a78e4" file="30" linestart="327" lineend="327" access="none" hasbody="true">
<fpt proto="testing::AssertionResult">
<rt>
<cr id="0dc4cd8d4d61c13ddce2ee0effc89eca_1b0b5edb5a536c8577b46f6e0d5d791d"/>
</rt>
</fpt>
</f>
<f namespace="testing.internal" name="GetUnitTestImpl" id="0dc4cd8d4d61c13ddce2ee0effc89eca_f8f1993df3f89c4be0d33ce216eab164" file="30" linestart="1214" lineend="1214" previous="0dc4cd8d4d61c13ddce2ee0effc89eca_f8f1993df3f89c4be0d33ce216eab164" access="none" hasbody="true">
<fpt proto="internal::UnitTestImpl *">
<pt>
<ety>
<rt>
<cr id="af5d4310224b86b937fe98ebc412e239_ad4fe9f3b1b13071807e0902d86c1340"/>
</rt>
</ety>
</pt>
</fpt>
</f>
<f namespace="testing.internal" name="ReportFailureInUnknownLocation" id="0dc4cd8d4d61c13ddce2ee0effc89eca_ff7ebd2640f47f7046d650adb1896cff" file="30" linestart="1215" lineend="1217" previous="0dc4cd8d4d61c13ddce2ee0effc89eca_ff7ebd2640f47f7046d650adb1896cff" access="none" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="result_type" proto="TestPartResult::Type" isLiteral="true" access2="none">
<ety>
<et>
<e id="562ee964b610e766d302b8dfed46fd41_67f4b207fbe04cf7dec53cc0d08539d1"/>
</et>
</ety>
</p>
<p name="message" proto="const internal::String &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</ety>
</QualType>
</lrf>
</p>
</f>
<f namespace="testing.internal" name="FormatForComparisonFailureMessage" id="0dc4cd8d4d61c13ddce2ee0effc89eca_e46dd7427a72c94b962bd536d72f91ba" file="30" linestart="1298" lineend="1303" access="none" hasbody="true" isdef="true">
<fpt proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fpt>
<p name="value" proto="const T1 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="" proto="const T2 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
<ft name="FormatForComparisonFailureMessage" id="0dc4cd8d4d61c13ddce2ee0effc89eca_ea1acd0593c7aa55cc2b0c2d3771f43c" file="30" linestart="1297" lineend="1303">
<template_parameters>
<ttp name="T1" id="0dc4cd8d4d61c13ddce2ee0effc89eca_b22e6b19adbd71261c1357f95d4f3018" depth="" index="" proto="type-parameter-0-0"/>
<ttp name="T2" id="0dc4cd8d4d61c13ddce2ee0effc89eca_3592798cf9c0a277f850df681240958f" depth="" index="" proto="type-parameter-0-1"/>
</template_parameters>
<f namespace="testing.internal" name="FormatForComparisonFailureMessage" id="0dc4cd8d4d61c13ddce2ee0effc89eca_e46dd7427a72c94b962bd536d72f91ba" file="30" linestart="1298" lineend="1303" access="none" hasbody="true" isdef="true">
<fpt proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fpt>
<p name="value" proto="const T1 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="" proto="const T2 &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
</f>
</ft>
<f name="_ftime64" id="524979fd301a16288a955eea2a6069a1_93a7d3df5780fa6d47818d06a72bc53b" file="32" linestart="131" lineend="131" extC="true" imported="true" access="none">
<fpt cc="cdecl" proto="void">
<bt name="void"/>
</fpt>
<p name="_Time" proto="struct __timeb64 *" isPtr="true" isLiteral="true" access2="none">
<pt>
<ety>
<rt>
<cr id="524979fd301a16288a955eea2a6069a1_69dbd5cd651e16ed4f8211f076d1ad76"/>
</rt>
</ety>
</pt>
</p>
</f>
<f name="_exception_code" id="be125b01ab13538c1c17e35cae8cec0b_f98960d6d6395141513b02f87291949b" file="45" linestart="96" lineend="96" extC="true" access="none">
<fpt cc="cdecl" proto="unsigned long">
<bt name="unsigned long"/>
</fpt>
</f>
<f name="GetStdHandle" id="d02865d0c75bd6551ce95ed1b9170eb4_d0ea8905a58d46388de3817f8542a4b2" file="46" linestart="105" lineend="110" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="HANDLE">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</fpt>
<p name="nStdHandle" proto="DWORD" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</p>
</f>
<f name="GetCommandLineA" id="d02865d0c75bd6551ce95ed1b9170eb4_b34a60d0ad7a038a48768728737b186c" file="46" linestart="148" lineend="153" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="LPSTR">
<Tdef>
<pt>
<Tdef>
<bt name="char"/>
</Tdef>
</pt>
</Tdef>
</fpt>
</f>
<f name="DebugBreak" id="b9466cfb90b327ddc96d8a086bf51936_8fa0a93e6480238da85fd5c3ed94d5d2" file="47" linestart="67" lineend="72" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="void">
<bt name="void"/>
</fpt>
</f>
<f name="OutputDebugStringA" id="b9466cfb90b327ddc96d8a086bf51936_700b04b3ab1468927d9254aa71372d1b" file="47" linestart="82" lineend="87" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="void">
<bt name="void"/>
</fpt>
<p name="lpOutputString" proto="LPCSTR" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<QualType const="true">
<Tdef>
<bt name="char"/>
</Tdef>
</QualType>
</pt>
</Tdef>
</p>
</f>
<f name="CloseHandle" id="9fef75b29598c55feef49712c0481ccb_8a63bd45e91d5e66387bd687095c6b3d" file="48" linestart="47" lineend="52" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="BOOL">
<Tdef>
<bt name="int"/>
</Tdef>
</fpt>
<p name="hObject" proto="HANDLE" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</p>
</f>
<f name="DuplicateHandle" id="9fef75b29598c55feef49712c0481ccb_4c293751348c56d87f2a415a3a5a03cb" file="48" linestart="55" lineend="66" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="BOOL">
<Tdef>
<bt name="int"/>
</Tdef>
</fpt>
<p name="hSourceProcessHandle" proto="HANDLE" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</p>
<p name="hSourceHandle" proto="HANDLE" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</p>
<p name="hTargetProcessHandle" proto="HANDLE" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</p>
<p name="lpTargetHandle" proto="LPHANDLE" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</pt>
</Tdef>
</p>
<p name="dwDesiredAccess" proto="DWORD" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</p>
<p name="bInheritHandle" proto="BOOL" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="int"/>
</Tdef>
</p>
<p name="dwOptions" proto="DWORD" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</p>
</f>
<f name="SetErrorMode" id="48084dce96c1f5d3536e8c6fed1c22de_be8e839fafe700f00a982191563bf523" file="49" linestart="153" lineend="158" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="UINT">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</fpt>
<p name="uMode" proto="UINT" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</p>
</f>
<f name="CreatePipe" id="dfb0f98f1ddc3a247fe6dccaf8cbc549_9610b70f2a266531e1ed79bcead066ad" file="50" linestart="47" lineend="55" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="BOOL">
<Tdef>
<bt name="int"/>
</Tdef>
</fpt>
<p name="hReadPipe" proto="PHANDLE" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</pt>
</Tdef>
</p>
<p name="hWritePipe" proto="PHANDLE" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</pt>
</Tdef>
</p>
<p name="lpPipeAttributes" proto="LPSECURITY_ATTRIBUTES" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<ety>
<rt>
<cr id="12bc8c7c006535ee99918a8866a82953_5b0201dc167ec7e3feddfb1bdd71bf9f"/>
</rt>
</ety>
</pt>
</Tdef>
</p>
<p name="nSize" proto="DWORD" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</p>
</f>
<f name="SetEvent" id="59a1102e5e331baed076bd620751be0b_ddc78c6d1df8964ed1448bdda49ee370" file="51" linestart="429" lineend="434" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="BOOL">
<Tdef>
<bt name="int"/>
</Tdef>
</fpt>
<p name="hEvent" proto="HANDLE" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</p>
</f>
<f name="WaitForSingleObject" id="59a1102e5e331baed076bd620751be0b_21e2f406b6230290b56454ee17f6fac6" file="51" linestart="470" lineend="476" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="DWORD">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</fpt>
<p name="hHandle" proto="HANDLE" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</p>
<p name="dwMilliseconds" proto="DWORD" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</p>
</f>
<f name="CreateEventA" id="59a1102e5e331baed076bd620751be0b_e08a3752da5704e2c4161672b92b1db7" file="51" linestart="586" lineend="595" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="HANDLE">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</fpt>
<p name="lpEventAttributes" proto="LPSECURITY_ATTRIBUTES" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<ety>
<rt>
<cr id="12bc8c7c006535ee99918a8866a82953_5b0201dc167ec7e3feddfb1bdd71bf9f"/>
</rt>
</ety>
</pt>
</Tdef>
</p>
<p name="bManualReset" proto="BOOL" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="int"/>
</Tdef>
</p>
<p name="bInitialState" proto="BOOL" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="int"/>
</Tdef>
</p>
<p name="lpName" proto="LPCSTR" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<QualType const="true">
<Tdef>
<bt name="char"/>
</Tdef>
</QualType>
</pt>
</Tdef>
</p>
</f>
<f name="GetCurrentProcess" id="7c3f588186e6e5cc5102f416c85e05d7_937fd1024deca25b56b6ec4f3d64cd93" file="34" linestart="142" lineend="147" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="HANDLE">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</fpt>
</f>
<f name="GetCurrentProcessId" id="7c3f588186e6e5cc5102f416c85e05d7_0a8dd7d1a264ba1c2d501ad99674db00" file="34" linestart="150" lineend="155" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="DWORD">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</fpt>
</f>
<f name="GetExitCodeProcess" id="7c3f588186e6e5cc5102f416c85e05d7_41cfe442e5f97a54a2482b3b745df9a2" file="34" linestart="183" lineend="189" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="BOOL">
<Tdef>
<bt name="int"/>
</Tdef>
</fpt>
<p name="hProcess" proto="HANDLE" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</p>
<p name="lpExitCode" proto="LPDWORD" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</pt>
</Tdef>
</p>
</f>
<f name="CreateProcessA" id="7c3f588186e6e5cc5102f416c85e05d7_e8d02395832bc3c47393f340594fc681" file="34" linestart="391" lineend="405" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="BOOL">
<Tdef>
<bt name="int"/>
</Tdef>
</fpt>
<p name="lpApplicationName" proto="LPCSTR" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<QualType const="true">
<Tdef>
<bt name="char"/>
</Tdef>
</QualType>
</pt>
</Tdef>
</p>
<p name="lpCommandLine" proto="LPSTR" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<Tdef>
<bt name="char"/>
</Tdef>
</pt>
</Tdef>
</p>
<p name="lpProcessAttributes" proto="LPSECURITY_ATTRIBUTES" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<ety>
<rt>
<cr id="12bc8c7c006535ee99918a8866a82953_5b0201dc167ec7e3feddfb1bdd71bf9f"/>
</rt>
</ety>
</pt>
</Tdef>
</p>
<p name="lpThreadAttributes" proto="LPSECURITY_ATTRIBUTES" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<ety>
<rt>
<cr id="12bc8c7c006535ee99918a8866a82953_5b0201dc167ec7e3feddfb1bdd71bf9f"/>
</rt>
</ety>
</pt>
</Tdef>
</p>
<p name="bInheritHandles" proto="BOOL" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="int"/>
</Tdef>
</p>
<p name="dwCreationFlags" proto="DWORD" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</p>
<p name="lpEnvironment" proto="LPVOID" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</p>
<p name="lpCurrentDirectory" proto="LPCSTR" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<QualType const="true">
<Tdef>
<bt name="char"/>
</Tdef>
</QualType>
</pt>
</Tdef>
</p>
<p name="lpStartupInfo" proto="LPSTARTUPINFOA" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<ety>
<rt>
<cr id="7c3f588186e6e5cc5102f416c85e05d7_92e856a56d2837ff4ea08210179e9eb6"/>
</rt>
</ety>
</pt>
</Tdef>
</p>
<p name="lpProcessInformation" proto="LPPROCESS_INFORMATION" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<ety>
<rt>
<cr id="7c3f588186e6e5cc5102f416c85e05d7_43075a0d51fdbb2d3c0a4fd668adc58a"/>
</rt>
</ety>
</pt>
</Tdef>
</p>
</f>
<f name="OpenProcess" id="7c3f588186e6e5cc5102f416c85e05d7_a1ccec3f17488a4d98411c6c80f09a5d" file="34" linestart="827" lineend="834" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="HANDLE">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</fpt>
<p name="dwDesiredAccess" proto="DWORD" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</p>
<p name="bInheritHandle" proto="BOOL" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="int"/>
</Tdef>
</p>
<p name="dwProcessId" proto="DWORD" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</p>
</f>
<f name="GetModuleFileNameA" id="db8f24f193e3d34c62aac4b3262476af_1b473134ed79a2a85fc7c627285b88cd" file="52" linestart="243" lineend="252" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="DWORD">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</fpt>
<p name="hModule" proto="HMODULE" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<Tdef>
<pt>
<ety>
<rt>
<cr id="67cd0a0647400f00ec93fad222d7460f_b32e96600c60ce6f9f5e96e0415e5440"/>
</rt>
</ety>
</pt>
</Tdef>
</Tdef>
</p>
<p name="lpFilename" proto="LPSTR" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<Tdef>
<bt name="char"/>
</Tdef>
</pt>
</Tdef>
</p>
<p name="nSize" proto="DWORD" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</p>
</f>
<f name="WaitForMultipleObjects" id="746ca71b7b8f0d1688711b8ebf7daf7b_3f36ffdbe112599107a0f18763558fcd" file="53" linestart="1880" lineend="1888" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="DWORD">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</fpt>
<p name="nCount" proto="DWORD" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</p>
<p name="lpHandles" proto="const HANDLE *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</QualType>
</pt>
</p>
<p name="bWaitAll" proto="BOOL" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="int"/>
</Tdef>
</p>
<p name="dwMilliseconds" proto="DWORD" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</p>
</f>
<f name="FormatMessageA" id="746ca71b7b8f0d1688711b8ebf7daf7b_7012e515ce2425812ff03d74e8ec0d36" file="53" linestart="2316" lineend="2328" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="DWORD">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</fpt>
<p name="dwFlags" proto="DWORD" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</p>
<p name="lpSource" proto="LPCVOID" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<QualType const="true">
<bt name="void"/>
</QualType>
</pt>
</Tdef>
</p>
<p name="dwMessageId" proto="DWORD" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</p>
<p name="dwLanguageId" proto="DWORD" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</p>
<p name="lpBuffer" proto="LPSTR" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<Tdef>
<bt name="char"/>
</Tdef>
</pt>
</Tdef>
</p>
<p name="nSize" proto="DWORD" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</p>
<p name="Arguments" proto="va_list *" isPtr="true" isLiteral="true" access2="none">
<pt>
<Tdef>
<pt>
<bt name="char"/>
</pt>
</Tdef>
</pt>
</p>
</f>
<f name="GetTempPathA" id="746ca71b7b8f0d1688711b8ebf7daf7b_1fb4afeb3f44335ce2771d336bccaab2" file="53" linestart="4402" lineend="4408" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="DWORD">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</fpt>
<p name="nBufferLength" proto="DWORD" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned long"/>
</Tdef>
</p>
<p name="lpBuffer" proto="LPSTR" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<Tdef>
<bt name="char"/>
</Tdef>
</pt>
</Tdef>
</p>
</f>
<f name="GetTempFileNameA" id="746ca71b7b8f0d1688711b8ebf7daf7b_902a292a447e68928d1c5c6eee87deb2" file="53" linestart="4413" lineend="4421" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="UINT">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</fpt>
<p name="lpPathName" proto="LPCSTR" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<QualType const="true">
<Tdef>
<bt name="char"/>
</Tdef>
</QualType>
</pt>
</Tdef>
</p>
<p name="lpPrefixString" proto="LPCSTR" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<QualType const="true">
<Tdef>
<bt name="char"/>
</Tdef>
</QualType>
</pt>
</Tdef>
</p>
<p name="uUnique" proto="UINT" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</p>
<p name="lpTempFileName" proto="LPSTR" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<Tdef>
<bt name="char"/>
</Tdef>
</pt>
</Tdef>
</p>
</f>
<f name="GetConsoleScreenBufferInfo" id="864efa2a75b12b62d2a6f16bfeabd92b_0d3218df62af40e68e2d5353321e819b" file="35" linestart="533" lineend="539" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="BOOL">
<Tdef>
<bt name="int"/>
</Tdef>
</fpt>
<p name="hConsoleOutput" proto="HANDLE" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</p>
<p name="lpConsoleScreenBufferInfo" proto="PCONSOLE_SCREEN_BUFFER_INFO" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<ety>
<rt>
<cr id="864efa2a75b12b62d2a6f16bfeabd92b_0e97a372edcec65b94a039f853794dd7"/>
</rt>
</ety>
</pt>
</Tdef>
</p>
</f>
<f name="SetConsoleTextAttribute" id="864efa2a75b12b62d2a6f16bfeabd92b_73c7403c67da00fa567d685eb69ed40b" file="35" linestart="708" lineend="714" extC="true" imported="true" access="none">
<fpt cc="x86_stdcall" proto="BOOL">
<Tdef>
<bt name="int"/>
</Tdef>
</fpt>
<p name="hConsoleOutput" proto="HANDLE" isPtr="true" isLiteral="true" access2="none">
<Tdef>
<pt>
<bt name="void"/>
</pt>
</Tdef>
</p>
<p name="wAttributes" proto="WORD" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="unsigned short"/>
</Tdef>
</p>
</f>
<v namespace="testing" name="FLAGS_gtest_death_test_use_fork" proto="bool" isLiteral="true" isPrimitive="true" id="af5d4310224b86b937fe98ebc412e239_ea6488b993bf81ebc6bb1f1d5adfd0d8" file="36" linestart="75" lineend="75" storage="extern" access2="none">
<bt name="bool"/>
</v>
<v namespace="testing.internal" name="kAlsoRunDisabledTestsFlag" proto="const char [24]" isArray="true" isLiteral="true" id="af5d4310224b86b937fe98ebc412e239_73f027b45bde3d55b6d1e49fc7b678b7" file="36" linestart="84" lineend="84" init="true" access2="none">
<at>
<QualType const="true">
<bt name="char"/>
</QualType>
</at>
</v>
<v namespace="testing.internal" name="kBreakOnFailureFlag" proto="const char [17]" isArray="true" isLiteral="true" id="af5d4310224b86b937fe98ebc412e239_9d163f60e71339cad8dd9a5eedd65f00" file="36" linestart="85" lineend="85" init="true" access2="none">
<at>
<QualType const="true">
<bt name="char"/>
</QualType>
</at>
</v>
<v namespace="testing.internal" name="kCatchExceptionsFlag" proto="const char [17]" isArray="true" isLiteral="true" id="af5d4310224b86b937fe98ebc412e239_d8b548d525edef17b35843debc1b966e" file="36" linestart="86" lineend="86" init="true" access2="none">
<at>
<QualType const="true">
<bt name="char"/>
</QualType>
</at>
</v>
<v namespace="testing.internal" name="kColorFlag" proto="const char [6]" isArray="true" isLiteral="true" id="af5d4310224b86b937fe98ebc412e239_6609942ba5a93151fbedf713bab693d6" file="36" linestart="87" lineend="87" init="true" access2="none">
<at>
<QualType const="true">
<bt name="char"/>
</QualType>
</at>
</v>
<v namespace="testing.internal" name="kFilterFlag" proto="const char [7]" isArray="true" isLiteral="true" id="af5d4310224b86b937fe98ebc412e239_bc8b7c2b00f14350ef5fae8da89afc18" file="36" linestart="88" lineend="88" init="true" access2="none">
<at>
<QualType const="true">
<bt name="char"/>
</QualType>
</at>
</v>
<v namespace="testing.internal" name="kListTestsFlag" proto="const char [11]" isArray="true" isLiteral="true" id="af5d4310224b86b937fe98ebc412e239_7933110d52d004e3a06aff7ca0817dd0" file="36" linestart="89" lineend="89" init="true" access2="none">
<at>
<QualType const="true">
<bt name="char"/>
</QualType>
</at>
</v>
<v namespace="testing.internal" name="kOutputFlag" proto="const char [7]" isArray="true" isLiteral="true" id="af5d4310224b86b937fe98ebc412e239_764d950edf7dea0d40a4e456833a900f" file="36" linestart="90" lineend="90" init="true" access2="none">
<at>
<QualType const="true">
<bt name="char"/>
</QualType>
</at>
</v>
<v namespace="testing.internal" name="kPrintTimeFlag" proto="const char [11]" isArray="true" isLiteral="true" id="af5d4310224b86b937fe98ebc412e239_f3894f1226c87d1cfb076059974a2639" file="36" linestart="91" lineend="91" init="true" access2="none">
<at>
<QualType const="true">
<bt name="char"/>
</QualType>
</at>
</v>
<v namespace="testing.internal" name="kRandomSeedFlag" proto="const char [12]" isArray="true" isLiteral="true" id="af5d4310224b86b937fe98ebc412e239_7471d0078f02a5b4917a3f55cba9c865" file="36" linestart="92" lineend="92" init="true" access2="none">
<at>
<QualType const="true">
<bt name="char"/>
</QualType>
</at>
</v>
<v namespace="testing.internal" name="kRepeatFlag" proto="const char [7]" isArray="true" isLiteral="true" id="af5d4310224b86b937fe98ebc412e239_55ef78cde0e1d33949cce32e7e1dd6b1" file="36" linestart="93" lineend="93" init="true" access2="none">
<at>
<QualType const="true">
<bt name="char"/>
</QualType>
</at>
</v>
<v namespace="testing.internal" name="kShuffleFlag" proto="const char [8]" isArray="true" isLiteral="true" id="af5d4310224b86b937fe98ebc412e239_73fd4a89ebfdfc7c799c7e24644fdcbd" file="36" linestart="94" lineend="94" init="true" access2="none">
<at>
<QualType const="true">
<bt name="char"/>
</QualType>
</at>
</v>
<v namespace="testing.internal" name="kStackTraceDepthFlag" proto="const char [18]" isArray="true" isLiteral="true" id="af5d4310224b86b937fe98ebc412e239_11b70fa1cdc4ae00151917ea630c0be5" file="36" linestart="95" lineend="95" init="true" access2="none">
<at>
<QualType const="true">
<bt name="char"/>
</QualType>
</at>
</v>
<v namespace="testing.internal" name="kStreamResultToFlag" proto="const char [17]" isArray="true" isLiteral="true" id="af5d4310224b86b937fe98ebc412e239_4f09d400100fd4dd89a55b276d244ffe" file="36" linestart="96" lineend="96" init="true" access2="none">
<at>
<QualType const="true">
<bt name="char"/>
</QualType>
</at>
</v>
<v namespace="testing.internal" name="kThrowOnFailureFlag" proto="const char [17]" isArray="true" isLiteral="true" id="af5d4310224b86b937fe98ebc412e239_fe4e1e3c925460cd03cae2927f737045" file="36" linestart="97" lineend="97" init="true" access2="none">
<at>
<QualType const="true">
<bt name="char"/>
</QualType>
</at>
</v>
<f namespace="testing.internal" name="GetTimeInMillis" id="af5d4310224b86b937fe98ebc412e239_7b90092544a69a7c13ea107c04ed100b" file="36" linestart="107" lineend="107" access="none" hasbody="true">
<fpt proto="TimeInMillis">
<Tdef>
<ety>
<Tdef>
<bt name="long long"/>
</Tdef>
</ety>
</Tdef>
</fpt>
</f>
<f namespace="testing.internal" name="ShouldUseColor" id="af5d4310224b86b937fe98ebc412e239_03dde2a3ab511f3d602b7df7171c4333" file="36" linestart="110" lineend="110" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="stdout_is_tty" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
</f>
<f namespace="testing.internal" name="FormatTimeInMillisAsSeconds" id="af5d4310224b86b937fe98ebc412e239_bffd14ea48fa3aaf073b9dd729043b43" file="36" linestart="113" lineend="113" access="none" hasbody="true">
<fpt proto="std::string">
<ety>
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<bt name="char"/>
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_bf3447e13ccfc57e5fa847f5d78e7639"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
<tss>
<templatebase id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_07566aa809aee0bdf1c0fac16e19fa85"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</Tdef>
</ety>
</fpt>
<p name="ms" proto="TimeInMillis" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<ety>
<Tdef>
<bt name="long long"/>
</Tdef>
</ety>
</Tdef>
</p>
</f>
<f namespace="testing.internal" name="GetRandomSeedFromFlag" id="af5d4310224b86b937fe98ebc412e239_c4d1c5bad98df60f38f9a0e9e65a2ae0" file="36" linestart="124" lineend="135" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="int">
<bt name="int"/>
</fpt>
<p name="random_seed_flag" proto="Int32" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<ety>
<Tdef>
<bt name="int"/>
</Tdef>
</ety>
</Tdef>
</p>
</f>
<f namespace="testing.internal" name="GetNextRandomSeed" id="af5d4310224b86b937fe98ebc412e239_0ac7d4fc2c0e9aa3412c4caddbc7b69f" file="36" linestart="140" lineend="146" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="int">
<bt name="int"/>
</fpt>
<p name="seed" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f namespace="testing.internal" name="CodePointToUtf8" id="af5d4310224b86b937fe98ebc412e239_9f3696f5f446adb28b15dac862461a65" file="36" linestart="222" lineend="222" access="none" hasbody="true">
<fpt proto="char *">
<pt>
<bt name="char"/>
</pt>
</fpt>
<p name="code_point" proto="UInt32" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<ety>
<Tdef>
<bt name="unsigned int"/>
</Tdef>
</ety>
</Tdef>
</p>
<p name="str" proto="char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="char"/>
</pt>
</p>
</f>
<f namespace="testing.internal" name="WideStringToUtf8" id="af5d4310224b86b937fe98ebc412e239_4873792926a600b7cd79160a234e9dfd" file="36" linestart="237" lineend="237" access="none" hasbody="true">
<fpt proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fpt>
<p name="str" proto="const wchar_t *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="wchar_t"/>
</QualType>
</pt>
</p>
<p name="num_chars" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f namespace="testing.internal" name="WriteToShardStatusFileIfNeeded" id="af5d4310224b86b937fe98ebc412e239_3b72afe5e53d625faf991dfd25ca5153" file="36" linestart="243" lineend="243" access="none" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
</f>
<f namespace="testing.internal" name="ShouldShard" id="af5d4310224b86b937fe98ebc412e239_8d4a7ec554319daa8148d77c259c078d" file="36" linestart="251" lineend="253" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="total_shards_str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="shard_index_str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="in_subprocess_for_death_test" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
</f>
<f namespace="testing.internal" name="Int32FromEnvOrDie" id="af5d4310224b86b937fe98ebc412e239_ca92b140daaa9d457452b082c9507256" file="36" linestart="258" lineend="258" access="none" hasbody="true">
<fpt proto="Int32">
<Tdef>
<ety>
<Tdef>
<bt name="int"/>
</Tdef>
</ety>
</Tdef>
</fpt>
<p name="env_var" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="default_val" proto="Int32" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<ety>
<Tdef>
<bt name="int"/>
</Tdef>
</ety>
</Tdef>
</p>
</f>
<f namespace="testing.internal" name="ShouldRunTestOnShard" id="af5d4310224b86b937fe98ebc412e239_6253f7028e51510dbdbdb1aba2a6c141" file="36" linestart="264" lineend="265" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="total_shards" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="shard_index" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="test_id" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
</f>
<f namespace="testing.internal" name="CountIf" id="af5d4310224b86b937fe98ebc412e239_acac2fea4be340486cc0643887f0dcfc" file="36" linestart="272" lineend="281" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="int">
<bt name="int"/>
</fpt>
<p name="c" proto="const Container &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="predicate" proto="Predicate" access2="none">
<ttp/>
</p>
</f>
<ft name="CountIf" id="af5d4310224b86b937fe98ebc412e239_a09476dadbd1734f5028be595e28d94a" file="36" linestart="271" lineend="281">
<template_parameters>
<ttp name="Container" id="af5d4310224b86b937fe98ebc412e239_766154489fcbd85c9e59e9eccd296f3e" depth="" index="" proto="type-parameter-0-0"/>
<ttp name="Predicate" id="af5d4310224b86b937fe98ebc412e239_c11558a2271c1875ea8394bb8add4b2e" depth="" index="" proto="type-parameter-0-1"/>
</template_parameters>
<f namespace="testing.internal" name="CountIf" id="af5d4310224b86b937fe98ebc412e239_acac2fea4be340486cc0643887f0dcfc" file="36" linestart="272" lineend="281" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="int">
<bt name="int"/>
</fpt>
<p name="c" proto="const Container &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="predicate" proto="Predicate" access2="none">
<ttp/>
</p>
</f>
</ft>
<f namespace="testing.internal" name="ForEach" id="af5d4310224b86b937fe98ebc412e239_a7974861f985f2bc913ebf46f6e3f729" file="36" linestart="285" lineend="287" access="none" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="c" proto="const Container &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="functor" proto="Functor" access2="none">
<ttp/>
</p>
</f>
<ft name="ForEach" id="af5d4310224b86b937fe98ebc412e239_ff6e13afbe56a2974478bd94c570a19a" file="36" linestart="284" lineend="287">
<template_parameters>
<ttp name="Container" id="af5d4310224b86b937fe98ebc412e239_a9ea2d0b18306a5a21e797849e54c415" depth="" index="" proto="type-parameter-0-0"/>
<ttp name="Functor" id="af5d4310224b86b937fe98ebc412e239_b13eb8b9882de14d68b4b6204cd1e426" depth="" index="" proto="type-parameter-0-1"/>
</template_parameters>
<f namespace="testing.internal" name="ForEach" id="af5d4310224b86b937fe98ebc412e239_a7974861f985f2bc913ebf46f6e3f729" file="36" linestart="285" lineend="287" access="none" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="c" proto="const Container &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ttp/>
</QualType>
</lrf>
</p>
<p name="functor" proto="Functor" access2="none">
<ttp/>
</p>
</f>
</ft>
<f namespace="testing.internal" name="GetElementOr" id="af5d4310224b86b937fe98ebc412e239_7441d9e318a10c58fc5f3c474f9979cb" file="36" linestart="292" lineend="294" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="E">
<ttp/>
</fpt>
<p name="v" proto="const std::vector&lt;E&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</ety>
</QualType>
</lrf>
</p>
<p name="i" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="default_value" proto="E" access2="none">
<ttp/>
</p>
</f>
<ft name="GetElementOr" id="af5d4310224b86b937fe98ebc412e239_bd674af3f21c46083dfe184183f65648" file="36" linestart="291" lineend="294">
<template_parameters>
<ttp name="E" id="af5d4310224b86b937fe98ebc412e239_6b14489ed1ac62ce49cf8755bd342d34" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="testing.internal" name="GetElementOr" id="af5d4310224b86b937fe98ebc412e239_7441d9e318a10c58fc5f3c474f9979cb" file="36" linestart="292" lineend="294" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="E">
<ttp/>
</fpt>
<p name="v" proto="const std::vector&lt;E&gt; &amp;" isRef="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</ety>
</QualType>
</lrf>
</p>
<p name="i" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="default_value" proto="E" access2="none">
<ttp/>
</p>
</f>
</ft>
<f namespace="testing.internal" name="ShuffleRange" id="af5d4310224b86b937fe98ebc412e239_f7414b5d549d366670d68c16758eee44" file="36" linestart="301" lineend="318" access="none" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="random" proto="internal::Random *" isPtr="true" isLiteral="true" access2="none">
<pt>
<ety>
<rt>
<cr id="361592d094a324447c0b12d8c282c7d5_a1fb83d720e6b12a8b1e03d27d046934"/>
</rt>
</ety>
</pt>
</p>
<p name="begin" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="end" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="v" proto="std::vector&lt;E&gt; *" isPtr="true" access2="none">
<pt>
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</ety>
</pt>
</p>
</f>
<ft name="ShuffleRange" id="af5d4310224b86b937fe98ebc412e239_7ea37c3f2be8347256f09798cd5925fd" file="36" linestart="300" lineend="318">
<template_parameters>
<ttp name="E" id="af5d4310224b86b937fe98ebc412e239_d38c8241b4411fec3b30eab11fcd549e" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="testing.internal" name="ShuffleRange" id="af5d4310224b86b937fe98ebc412e239_f7414b5d549d366670d68c16758eee44" file="36" linestart="301" lineend="318" access="none" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="random" proto="internal::Random *" isPtr="true" isLiteral="true" access2="none">
<pt>
<ety>
<rt>
<cr id="361592d094a324447c0b12d8c282c7d5_a1fb83d720e6b12a8b1e03d27d046934"/>
</rt>
</ety>
</pt>
</p>
<p name="begin" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="end" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
</p>
<p name="v" proto="std::vector&lt;E&gt; *" isPtr="true" access2="none">
<pt>
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</ety>
</pt>
</p>
</f>
</ft>
<f namespace="testing.internal" name="Shuffle" id="af5d4310224b86b937fe98ebc412e239_4c36bb9a6af4cd9b4fa2ea1fbb5e4d27" file="36" linestart="322" lineend="324" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="random" proto="internal::Random *" isPtr="true" isLiteral="true" access2="none">
<pt>
<ety>
<rt>
<cr id="361592d094a324447c0b12d8c282c7d5_a1fb83d720e6b12a8b1e03d27d046934"/>
</rt>
</ety>
</pt>
</p>
<p name="v" proto="std::vector&lt;E&gt; *" isPtr="true" access2="none">
<pt>
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</ety>
</pt>
</p>
</f>
<ft name="Shuffle" id="af5d4310224b86b937fe98ebc412e239_c7abc0462df3523064bbc6377bb62ce2" file="36" linestart="321" lineend="324">
<template_parameters>
<ttp name="E" id="af5d4310224b86b937fe98ebc412e239_2f8bcfa0ee0961aab1e5014ebd3fc3e9" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="testing.internal" name="Shuffle" id="af5d4310224b86b937fe98ebc412e239_4c36bb9a6af4cd9b4fa2ea1fbb5e4d27" file="36" linestart="322" lineend="324" access="none" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="random" proto="internal::Random *" isPtr="true" isLiteral="true" access2="none">
<pt>
<ety>
<rt>
<cr id="361592d094a324447c0b12d8c282c7d5_a1fb83d720e6b12a8b1e03d27d046934"/>
</rt>
</ety>
</pt>
</p>
<p name="v" proto="std::vector&lt;E&gt; *" isPtr="true" access2="none">
<pt>
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<ttp/>
</template_arguments>
</tss>
</ety>
</pt>
</p>
</f>
</ft>
<f namespace="testing.internal" name="Delete" id="af5d4310224b86b937fe98ebc412e239_8721ad67452fe3f2d7325b7231c75557" file="36" linestart="329" lineend="331" access="none" storage="static" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="x" proto="T *" isPtr="true" access2="none">
<pt>
<ttp/>
</pt>
</p>
</f>
<ft name="Delete" id="af5d4310224b86b937fe98ebc412e239_e304afce7f350bcd9db8a313d12f6f65" file="36" linestart="328" lineend="331">
<template_parameters>
<ttp name="T" id="af5d4310224b86b937fe98ebc412e239_a5962253dd354e1804275316773c1089" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="testing.internal" name="Delete" id="af5d4310224b86b937fe98ebc412e239_8721ad67452fe3f2d7325b7231c75557" file="36" linestart="329" lineend="331" access="none" storage="static" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="x" proto="T *" isPtr="true" access2="none">
<pt>
<ttp/>
</pt>
</p>
</f>
</ft>
<f namespace="testing.internal" name="GetCurrentExecutableName" id="af5d4310224b86b937fe98ebc412e239_60c730936014fad5aa1870333ec25ebc" file="36" linestart="405" lineend="405" access="none" hasbody="true">
<fpt proto="testing::internal::FilePath">
<rt>
<cr id="76a971fe2586f5579f5c582c96be5ea1_92c5d28c5da2d5b9e6c8893e5e28f941"/>
</rt>
</fpt>
</f>
<f namespace="testing.internal" name="IsInSet" id="af5d4310224b86b937fe98ebc412e239_ed9928bba2093fc405d2110ed102e2df" file="36" linestart="912" lineend="912" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="ch" proto="char" isLiteral="true" isPrimitive="true" access2="none">
<bt name="char"/>
</p>
<p name="str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f namespace="testing.internal" name="IsAsciiDigit" id="af5d4310224b86b937fe98ebc412e239_211a01579333fbf275bacf8644f0d933" file="36" linestart="913" lineend="913" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="ch" proto="char" isLiteral="true" isPrimitive="true" access2="none">
<bt name="char"/>
</p>
</f>
<f namespace="testing.internal" name="IsAsciiPunct" id="af5d4310224b86b937fe98ebc412e239_0b305b6f76bc929430ee239d89cdba57" file="36" linestart="914" lineend="914" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="ch" proto="char" isLiteral="true" isPrimitive="true" access2="none">
<bt name="char"/>
</p>
</f>
<f namespace="testing.internal" name="IsRepeat" id="af5d4310224b86b937fe98ebc412e239_1ed7cf2f64f2f263e1994d76b9a47d35" file="36" linestart="915" lineend="915" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="ch" proto="char" isLiteral="true" isPrimitive="true" access2="none">
<bt name="char"/>
</p>
</f>
<f namespace="testing.internal" name="IsAsciiWhiteSpace" id="af5d4310224b86b937fe98ebc412e239_b9352d7a191c49b8a82050b8de6ac41a" file="36" linestart="916" lineend="916" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="ch" proto="char" isLiteral="true" isPrimitive="true" access2="none">
<bt name="char"/>
</p>
</f>
<f namespace="testing.internal" name="IsAsciiWordChar" id="af5d4310224b86b937fe98ebc412e239_231b66711e9a2764e2be2e9f8dd13f52" file="36" linestart="917" lineend="917" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="ch" proto="char" isLiteral="true" isPrimitive="true" access2="none">
<bt name="char"/>
</p>
</f>
<f namespace="testing.internal" name="IsValidEscape" id="af5d4310224b86b937fe98ebc412e239_1011a8c62a2b685ac9e6270e0847e665" file="36" linestart="918" lineend="918" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="ch" proto="char" isLiteral="true" isPrimitive="true" access2="none">
<bt name="char"/>
</p>
</f>
<f namespace="testing.internal" name="AtomMatchesChar" id="af5d4310224b86b937fe98ebc412e239_8937880004a221ffa00005e9175d1f3b" file="36" linestart="919" lineend="919" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="escaped" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
<p name="pattern" proto="char" isLiteral="true" isPrimitive="true" access2="none">
<bt name="char"/>
</p>
<p name="ch" proto="char" isLiteral="true" isPrimitive="true" access2="none">
<bt name="char"/>
</p>
</f>
<f namespace="testing.internal" name="ValidateRegex" id="af5d4310224b86b937fe98ebc412e239_29d2950838f37cbe3f40e52efafc58c0" file="36" linestart="920" lineend="920" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="regex" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f namespace="testing.internal" name="MatchRegexAtHead" id="af5d4310224b86b937fe98ebc412e239_a78f708bdcdbf678eaec9ef06d8d68f3" file="36" linestart="921" lineend="921" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="regex" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f namespace="testing.internal" name="MatchRepetitionAndRegexAtHead" id="af5d4310224b86b937fe98ebc412e239_a8f14eb304d8fe0515fabfe3e1a6dc2a" file="36" linestart="922" lineend="923" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="escaped" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
</p>
<p name="ch" proto="char" isLiteral="true" isPrimitive="true" access2="none">
<bt name="char"/>
</p>
<p name="repeat" proto="char" isLiteral="true" isPrimitive="true" access2="none">
<bt name="char"/>
</p>
<p name="regex" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f namespace="testing.internal" name="MatchRegexAnywhere" id="af5d4310224b86b937fe98ebc412e239_39d530aaf830c78964e458fc167f7ded" file="36" linestart="924" lineend="924" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="regex" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
<p name="str" proto="const char *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<bt name="char"/>
</QualType>
</pt>
</p>
</f>
<f namespace="testing.internal" name="GetLastErrnoDescription" id="af5d4310224b86b937fe98ebc412e239_b0e558fa7ddbe023df10f53ddfb6a71e" file="36" linestart="937" lineend="937" access="none" hasbody="true">
<fpt proto="testing::internal::String">
<rt>
<cr id="062315ef9bdab19c3cabee16a5b6d183_29162408a07bf0ba0270baefa060f9ab"/>
</rt>
</fpt>
</f>
<f namespace="testing.internal" name="ParseNaturalNumber" id="af5d4310224b86b937fe98ebc412e239_14aeb9c05d625a199124abaad8c9ac0a" file="36" linestart="970" lineend="1008" access="none" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="str" proto="const ::std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<bt name="char"/>
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_bf3447e13ccfc57e5fa847f5d78e7639"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
<tss>
<templatebase id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_07566aa809aee0bdf1c0fac16e19fa85"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
<p name="number" proto="Integer *" isPtr="true" access2="none">
<pt>
<ttp/>
</pt>
</p>
</f>
<ft name="ParseNaturalNumber" id="af5d4310224b86b937fe98ebc412e239_ad8f8386563aa2e8749fbff728febf1e" file="36" linestart="969" lineend="1008">
<template_parameters>
<ttp name="Integer" id="af5d4310224b86b937fe98ebc412e239_8705cba10383789c6601a72cb8000dd0" depth="" index="" proto="type-parameter-0-0"/>
</template_parameters>
<f namespace="testing.internal" name="ParseNaturalNumber" id="af5d4310224b86b937fe98ebc412e239_14aeb9c05d625a199124abaad8c9ac0a" file="36" linestart="970" lineend="1008" access="none" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="str" proto="const ::std::string &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<ety>
<Tdef>
<tss>
<templatebase id="f2e96efeaba09e7d8921632d675962d4_6ecc822215ca97386606c5e8e95c56fb"/>
<template_arguments>
<bt name="char"/>
<tss>
<templatebase id="dc6a030260fdce02a4552ddbd0ff2ec9_bf3447e13ccfc57e5fa847f5d78e7639"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
<tss>
<templatebase id="e709ea4c3e9ceb4cc0600c1bf8d29ceb_07566aa809aee0bdf1c0fac16e19fa85"/>
<template_arguments>
<bt name="char"/>
</template_arguments>
</tss>
</template_arguments>
</tss>
</Tdef>
</ety>
</QualType>
</lrf>
</p>
<p name="number" proto="Integer *" isPtr="true" access2="none">
<pt>
<ttp/>
</pt>
</p>
</f>
</ft>
</Externals>
