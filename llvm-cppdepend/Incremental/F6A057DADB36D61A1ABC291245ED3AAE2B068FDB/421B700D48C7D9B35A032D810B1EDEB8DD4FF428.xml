<Root>
<Comments>
<c f="1" b="1" e="1"/>
<c f="1" b="2" e="2"/>
<c f="1" b="3" e="3"/>
<c f="1" b="4" e="4"/>
<c f="1" b="5" e="5"/>
<c f="1" b="6" e="6"/>
<c f="1" b="7" e="7"/>
<c f="1" b="8" e="8"/>
<c f="1" b="9" e="9"/>
<c f="1" b="10" e="10"/>
<c f="1" b="11" e="11"/>
<c f="1" b="12" e="12"/>
<c f="1" b="14" e="12"/>
<c f="1" b="36" e="36"/>
<c f="1" b="37" e="36"/>
<c f="1" b="45" e="45"/>
<c f="1" b="46" e="45"/>
<c f="1" b="59" e="59"/>
<c f="1" b="60" e="60"/>
<c f="1" b="61" e="60"/>
<c f="1" b="65" e="65"/>
<c f="1" b="66" e="65"/>
<c f="1" b="68" e="68"/>
<c f="1" b="69" e="68"/>
<c f="1" b="71" e="71"/>
<c f="1" b="72" e="71"/>
<c f="1" b="74" e="74"/>
<c f="1" b="75" e="74"/>
<c f="1" b="95" e="95"/>
<c f="1" b="96" e="96"/>
<c f="1" b="97" e="96"/>
<c f="1" b="117" e="117"/>
<c f="1" b="118" e="117"/>
<c f="1" b="151" e="151"/>
<c f="1" b="152" e="152"/>
<c f="1" b="153" e="153"/>
<c f="1" b="154" e="153"/>
<c f="1" b="192" e="192"/>
<c f="1" b="193" e="193"/>
<c f="1" b="194" e="194"/>
<c f="1" b="195" e="194"/>
<c f="1" b="227" e="227"/>
<c f="1" b="228" e="228"/>
<c f="1" b="229" e="228"/>
<c f="1" b="234" e="234"/>
<c f="1" b="235" e="234"/>
<c f="1" b="240" e="240"/>
<c f="1" b="241" e="240"/>
<c f="1" b="270" e="270"/>
<c f="1" b="271" e="270"/>
<c f="1" b="279" e="279"/>
<c f="1" b="280" e="279"/>
<c f="1" b="289" e="289"/>
<c f="1" b="290" e="289"/>
<c f="1" b="294" e="294"/>
<c f="1" b="295" e="294"/>
<c f="1" b="311" e="311"/>
<c f="1" b="312" e="311"/>
<c f="1" b="320" e="320"/>
<c f="1" b="321" e="320"/>
<c f="1" b="445" e="445"/>
<c f="1" b="446" e="445"/>
<c f="1" b="447" e="447"/>
<c f="1" b="449" e="447"/>
<c f="1" b="454" e="454"/>
<c f="1" b="455" e="454"/>
<c f="1" b="457" e="457"/>
<c f="1" b="458" e="457"/>
<c f="1" b="475" e="475"/>
<c f="1" b="476" e="475"/>
<c f="1" b="479" e="479"/>
<c f="1" b="480" e="479"/>
<c f="1" b="485" e="485"/>
<c f="1" b="486" e="485"/>
<c f="1" b="492" e="492"/>
<c f="1" b="493" e="492"/>
<c f="1" b="499" e="499"/>
<c f="1" b="500" e="500"/>
<c f="1" b="501" e="500"/>
<c f="1" b="504" e="504"/>
<c f="1" b="505" e="504"/>
<c f="1" b="510" e="510"/>
<c f="1" b="511" e="510"/>
<c f="1" b="516" e="516"/>
<c f="1" b="517" e="516"/>
<c f="1" b="520" e="520"/>
<c f="1" b="521" e="521"/>
<c f="1" b="522" e="521"/>
<c f="1" b="539" e="539"/>
<c f="1" b="540" e="540"/>
<c f="1" b="541" e="541"/>
<c f="1" b="542" e="541"/>
<c f="1" b="553" e="553"/>
<c f="1" b="554" e="553"/>
<c f="1" b="569" e="569"/>
<c f="1" b="570" e="569"/>
<c f="1" b="584" e="584"/>
<c f="1" b="585" e="585"/>
<c f="1" b="586" e="585"/>
<c f="1" b="589" e="589"/>
<c f="1" b="590" e="589"/>
<c f="1" b="593" e="593"/>
<c f="1" b="594" e="593"/>
<c f="1" b="603" e="603"/>
<c f="1" b="604" e="603"/>
<c f="1" b="607" e="607"/>
<c f="1" b="608" e="607"/>
<c f="1" b="612" e="612"/>
<c f="1" b="613" e="612"/>
</Comments>
<Macros>
<m f="1" bl="281" bc="9" el="281" ec="74"/>
<m f="1" bl="298" bc="9" el="299" ec="45"/>
<m f="1" bl="302" bc="7" el="302" ec="54"/>
<m f="1" bl="315" bc="9" el="316" ec="45"/>
<m f="1" bl="507" bc="5" el="508" ec="41"/>
<m f="1" bl="561" bc="7" el="561" ec="70"/>
<m f="1" bl="576" bc="7" el="576" ec="54"/>
</Macros>
<Comments>
<c f="2" b="1" e="1"/>
<c f="2" b="2" e="2"/>
<c f="2" b="3" e="3"/>
<c f="2" b="4" e="4"/>
<c f="2" b="5" e="5"/>
<c f="2" b="6" e="6"/>
<c f="2" b="7" e="7"/>
<c f="2" b="8" e="8"/>
<c f="2" b="9" e="9"/>
<c f="2" b="10" e="10"/>
<c f="2" b="11" e="11"/>
<c f="2" b="12" e="12"/>
<c f="2" b="14" e="12"/>
<c f="2" b="34" e="34"/>
<c f="2" b="35" e="34"/>
<c f="2" b="38" e="38"/>
<c f="2" b="39" e="38"/>
<c f="2" b="41" e="41"/>
<c f="2" b="42" e="42"/>
<c f="2" b="43" e="42"/>
<c f="2" b="60" e="60"/>
<c f="2" b="61" e="60"/>
<c f="2" b="74" e="74"/>
<c f="2" b="75" e="74"/>
<c f="2" b="94" e="94"/>
<c f="2" b="95" e="95"/>
<c f="2" b="96" e="95"/>
<c f="2" b="143" e="143"/>
<c f="2" b="144" e="144"/>
<c f="2" b="145" e="145"/>
<c f="2" b="146" e="146"/>
<c f="2" b="147" e="147"/>
<c f="2" b="148" e="147"/>
<c f="2" b="151" e="151"/>
<c f="2" b="152" e="152"/>
<c f="2" b="153" e="153"/>
<c f="2" b="154" e="154"/>
<c f="2" b="155" e="155"/>
<c f="2" b="156" e="156"/>
<c f="2" b="157" e="157"/>
<c f="2" b="158" e="158"/>
<c f="2" b="159" e="158"/>
<c f="2" b="184" e="184"/>
<c f="2" b="185" e="185"/>
<c f="2" b="186" e="186"/>
<c f="2" b="187" e="187"/>
<c f="2" b="188" e="187"/>
<c f="2" b="192" e="192"/>
<c f="2" b="193" e="193"/>
<c f="2" b="194" e="194"/>
<c f="2" b="195" e="195"/>
<c f="2" b="196" e="195"/>
<c f="2" b="207" e="207"/>
<c f="2" b="208" e="208"/>
<c f="2" b="209" e="208"/>
<c f="2" b="223" e="223"/>
<c f="2" b="224" e="223"/>
<c f="2" b="239" e="239"/>
<c f="2" b="240" e="239"/>
<c f="2" b="285" e="285"/>
<c f="2" b="286" e="285"/>
<c f="2" b="290" e="290"/>
<c f="2" b="292" e="292"/>
<c f="2" b="293" e="293"/>
<c f="2" b="294" e="293"/>
<c f="2" b="296" e="296"/>
<c f="2" b="297" e="297"/>
<c f="2" b="298" e="297"/>
<c f="2" b="301" e="301"/>
<c f="2" b="302" e="302"/>
<c f="2" b="303" e="302"/>
<c f="2" b="307" e="307"/>
<c f="2" b="308" e="308"/>
<c f="2" b="309" e="309"/>
<c f="2" b="310" e="309"/>
<c f="2" b="314" e="314"/>
<c f="2" b="315" e="315"/>
<c f="2" b="316" e="316"/>
<c f="2" b="317" e="316"/>
<c f="2" b="321" e="321"/>
<c f="2" b="322" e="322"/>
<c f="2" b="323" e="322"/>
<c f="2" b="379" e="379"/>
<c f="2" b="380" e="380"/>
<c f="2" b="381" e="381"/>
<c f="2" b="382" e="381"/>
<c f="2" b="386" e="386"/>
<c f="2" b="387" e="387"/>
<c f="2" b="388" e="387"/>
<c f="2" b="392" e="392"/>
<c f="2" b="393" e="393"/>
<c f="2" b="394" e="394"/>
<c f="2" b="395" e="394"/>
<c f="2" b="397" e="397"/>
<c f="2" b="398" e="398"/>
<c f="2" b="399" e="399"/>
<c f="2" b="400" e="399"/>
<c f="2" b="418" e="418"/>
<c f="2" b="419" e="419"/>
<c f="2" b="420" e="420"/>
<c f="2" b="421" e="421"/>
<c f="2" b="422" e="422"/>
<c f="2" b="423" e="422"/>
<c f="2" b="427" e="427"/>
<c f="2" b="428" e="428"/>
<c f="2" b="429" e="429"/>
<c f="2" b="430" e="430"/>
<c f="2" b="431" e="430"/>
<c f="2" b="439" e="439"/>
<c f="2" b="441" e="439"/>
</Comments>
<Macros/>
<Comments>
<c f="3" b="1" e="1"/>
<c f="3" b="2" e="2"/>
<c f="3" b="3" e="3"/>
<c f="3" b="4" e="4"/>
<c f="3" b="5" e="5"/>
<c f="3" b="6" e="6"/>
<c f="3" b="7" e="7"/>
<c f="3" b="8" e="8"/>
<c f="3" b="9" e="9"/>
<c f="3" b="10" e="10"/>
<c f="3" b="11" e="11"/>
<c f="3" b="12" e="12"/>
<c f="3" b="14" e="12"/>
<c f="3" b="29" e="29"/>
<c f="3" b="30" e="29"/>
<c f="3" b="32" e="32"/>
<c f="3" b="33" e="33"/>
<c f="3" b="34" e="33"/>
<c f="3" b="59" e="59"/>
<c f="3" b="60" e="60"/>
<c f="3" b="61" e="61"/>
<c f="3" b="62" e="62"/>
<c f="3" b="63" e="62"/>
<c f="3" b="66" e="66"/>
<c f="3" b="67" e="67"/>
<c f="3" b="68" e="68"/>
<c f="3" b="69" e="68"/>
</Comments>
<Macros/>
<tun>
<ns name="llvm" id="b08ee5109a4d2aea3d861667cfd23aaf_544dadc8774ac7e8cdf9804c9bca3e1f" file="2" linestart="26" lineend="439" original="">
<cr namespace="llvm" access="none" kind="class" name="ARMSubtarget" id="b08ee5109a4d2aea3d861667cfd23aaf_3177358262ca7f653e8cfe41aac6f52e" file="2" linestart="27" lineend="27"/>
<cr namespace="llvm" access="none" kind="class" name="ARMBaseRegisterInfo" id="b08ee5109a4d2aea3d861667cfd23aaf_f6e17bef111765358104a716f11a8f14" file="2" linestart="28" lineend="28"/>
<cr namespace="llvm" access="none" depth="0" kind="class" name="ARMBaseInstrInfo" id="b08ee5109a4d2aea3d861667cfd23aaf_9b505b831079eb1a273b49419189db5b" file="2" linestart="30" lineend="324">
<cr access="public" kind="class" name="ARMBaseInstrInfo" id="b08ee5109a4d2aea3d861667cfd23aaf_f159c958b8abef8d8a79dbf956efd797" file="2" linestart="30" lineend="30"/>
<fl name="Subtarget" id="b08ee5109a4d2aea3d861667cfd23aaf_01f3e709a687500195c75f5d65098d98" file="2" linestart="31" lineend="31" isLiteral="true" isRef="true" access="private" proto="const llvm::ARMSubtarget &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="d83bca43e3c159dd5e5469a047faa0b0_3177358262ca7f653e8cfe41aac6f52e"/>
</rt>
</QualType>
</lrf>
</fl>
<Decl access="protected"/>
<c name="ARMBaseInstrInfo" id="b08ee5109a4d2aea3d861667cfd23aaf_85fcc8be71b8458b24776179863b5269" file="2" linestart="35" lineend="35" explicit="true" access="protected">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="STI" proto="const llvm::ARMSubtarget &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="d83bca43e3c159dd5e5469a047faa0b0_3177358262ca7f653e8cfe41aac6f52e"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</c>
<Decl access="public"/>
<m name="hasNOP" id="b08ee5109a4d2aea3d861667cfd23aaf_c7464c41e8789af7f891019dc717e84a" file="2" linestart="39" lineend="39" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
</m>
<m name="getUnindexedOpcode" id="b08ee5109a4d2aea3d861667cfd23aaf_bc8b0ac5fb0b760fc5cd54d5ce07cce6" file="2" linestart="43" lineend="43" pure="true" virtual="true" access="public">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="Opc" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="convertToThreeAddress" id="b08ee5109a4d2aea3d861667cfd23aaf_3b13a9a43a587b5493960b8db8f87860" file="2" linestart="45" lineend="47" access="public">
<fpt const="true" proto="llvm::MachineInstr *">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
</fpt>
<p name="MFI" proto="MachineFunction::iterator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<ety>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</ety>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MBBI" proto="MachineBasicBlock::iterator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="LV" proto="llvm::LiveVariables *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="35dcc986b9fc41c6f521acfc055f8d35_21200ebcc17540790537704d977d96a1"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="getRegisterInfo" id="b08ee5109a4d2aea3d861667cfd23aaf_1add9e9163967da6308c61d0d81ddd89" file="2" linestart="49" lineend="49" pure="true" virtual="true" access="public">
<fpt const="true" proto="const llvm::ARMBaseRegisterInfo &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="4302766d6a218e79b639aed08b6e6733_f6e17bef111765358104a716f11a8f14"/>
</rt>
</QualType>
</lrf>
</fpt>
</m>
<m name="getSubtarget" id="b08ee5109a4d2aea3d861667cfd23aaf_65fc5587db7a37a3a5f30b6113bd0371" file="2" linestart="50" lineend="50" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const llvm::ARMSubtarget &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="d83bca43e3c159dd5e5469a047faa0b0_3177358262ca7f653e8cfe41aac6f52e"/>
</rt>
</QualType>
</lrf>
</fpt>
<Stmt>
<u lb="50" cb="44" le="50" ce="64">
<rx lb="50" cb="46" le="50" ce="53" pvirg="true">
<mex lb="50" cb="53" kind="lvalue" id="b08ee5109a4d2aea3d861667cfd23aaf_01f3e709a687500195c75f5d65098d98" nm="Subtarget" arrow="1">
<n19 lb="50" cb="53"/>
</mex>
</rx>
</u>

</Stmt>
</m>
<m name="CreateTargetHazardRecognizer" id="b08ee5109a4d2aea3d861667cfd23aaf_b72e22e9b9fb802eb6cebda59b26b662" file="2" linestart="52" lineend="54" access="public">
<fpt const="true" proto="llvm::ScheduleHazardRecognizer *">
<pt>
<rt>
<cr id="35dcc986b9fc41c6f521acfc055f8d35_73b724ff4b1b8d1992291a7c90302bef"/>
</rt>
</pt>
</fpt>
<p name="STI" proto="const llvm::TargetSubtargetInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="0781fffcd635d820a7f74e261caa02d7_00c12b8656a07c06a75b4b5e52fcd2ea"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="DAG" proto="const llvm::ScheduleDAG *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="35dcc986b9fc41c6f521acfc055f8d35_1215249e58aa3854b8fc2a84f3ebe445"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="CreateTargetPostRAHazardRecognizer" id="b08ee5109a4d2aea3d861667cfd23aaf_f5924241c4676c03b9bae863984ef752" file="2" linestart="56" lineend="58" access="public">
<fpt const="true" proto="llvm::ScheduleHazardRecognizer *">
<pt>
<rt>
<cr id="35dcc986b9fc41c6f521acfc055f8d35_73b724ff4b1b8d1992291a7c90302bef"/>
</rt>
</pt>
</fpt>
<p name="II" proto="const llvm::InstrItineraryData *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="dcceaabcfcc76c7932ff95ffc6d2e0e7_9cdec5bb75193864eb7a85a279c047c5"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="DAG" proto="const llvm::ScheduleDAG *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="35dcc986b9fc41c6f521acfc055f8d35_1215249e58aa3854b8fc2a84f3ebe445"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="AnalyzeBranch" id="b08ee5109a4d2aea3d861667cfd23aaf_b3adc9726795f52a6ccf03193d4ffd0b" file="2" linestart="61" lineend="64" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="TBB" proto="llvm::MachineBasicBlock *&amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<pt>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</pt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="FBB" proto="llvm::MachineBasicBlock *&amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<pt>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</pt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="Cond" proto="SmallVectorImpl&lt;llvm::MachineOperand&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<tss>
<templatebase id="35dcc986b9fc41c6f521acfc055f8d35_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<rt>
<cr id="84c010a1a9c2223bad1481218c714125_82ecc2b64168756ea82cc9516656b279"/>
</rt>
</template_arguments>
</tss>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="AllowModify" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
<Stmt>
<n9 lb="64" cb="41"/>

</Stmt>
</p>
</m>
<m name="RemoveBranch" id="b08ee5109a4d2aea3d861667cfd23aaf_1213719696561995cb10984a6d747d00" file="2" linestart="65" lineend="65" access="public">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="InsertBranch" id="b08ee5109a4d2aea3d861667cfd23aaf_2b5eba1273d779f5389560c472d5dc7f" file="2" linestart="66" lineend="69" access="public">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="TBB" proto="llvm::MachineBasicBlock *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="FBB" proto="llvm::MachineBasicBlock *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Cond" proto="const SmallVectorImpl&lt;llvm::MachineOperand&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="35dcc986b9fc41c6f521acfc055f8d35_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<rt>
<cr id="84c010a1a9c2223bad1481218c714125_82ecc2b64168756ea82cc9516656b279"/>
</rt>
</template_arguments>
</tss>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="DL" proto="llvm::DebugLoc" access2="none">
<rt>
<cr id="6ca53e77501a21bf88631b761a2f74a6_fe60359165b1d6b25b6efa2b3701b70d"/>
</rt>
<Stmt>

</Stmt>
</p>
</m>
<m name="ReverseBranchCondition" id="b08ee5109a4d2aea3d861667cfd23aaf_99f025b2b299aae17ebfa5b7f940627b" file="2" linestart="71" lineend="72" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="Cond" proto="SmallVectorImpl&lt;llvm::MachineOperand&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<tss>
<templatebase id="35dcc986b9fc41c6f521acfc055f8d35_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<rt>
<cr id="84c010a1a9c2223bad1481218c714125_82ecc2b64168756ea82cc9516656b279"/>
</rt>
</template_arguments>
</tss>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="isPredicated" id="b08ee5109a4d2aea3d861667cfd23aaf_cc3df2e473a31a80bce268e63585b07c" file="2" linestart="75" lineend="75" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="getPredicate" id="b08ee5109a4d2aea3d861667cfd23aaf_a3b79112aa15ae1121162caf47ddf5c9" file="2" linestart="77" lineend="81" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="ARMCC::CondCodes">
<ety>
<et>
<e id="9ae88c1643aad111cfd208406cc6b04a_74e40ba9de52e62d66e8b5bb0bc8edd2"/>
</et>
</ety>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="77" cb="63" le="81" ce="3">
<dst lb="78" cb="5" le="78" ce="45">
<exp pvirg="true"/>
<Var nm="PIdx" value="true">
<bt name="int"/>
<mce lb="78" cb="16" le="78" ce="44" nbparm="0" id="d038367435b7928d04997491e912d58d_d385e0cc31498652fb2c7f278ac25980">
<exp pvirg="true"/>
<mex lb="78" cb="16" le="78" ce="20" id="d038367435b7928d04997491e912d58d_d385e0cc31498652fb2c7f278ac25980" nm="findFirstPredOperandIdx" arrow="1">
<n32 lb="78" cb="16">
<drx lb="78" cb="16" kind="lvalue" nm="MI"/>
</n32>
</mex>
</mce>
</Var>
</dst>
<rx lb="79" cb="5" le="80" ce="32" pvirg="true">
<co lb="79" cb="12" le="80" ce="32">
<exp pvirg="true"/>
<xop lb="79" cb="12" le="79" ce="21" kind="!=">
<n32 lb="79" cb="12">
<drx lb="79" cb="12" kind="lvalue" nm="PIdx"/>
</n32>
<uo lb="79" cb="20" le="79" ce="21" kind="-">
<n45 lb="79" cb="21">
<flit/>
</n45>
</uo>
</xop>
<ocast lb="79" cb="25" le="79" ce="71">
<ety>
<et>
<e id="9ae88c1643aad111cfd208406cc6b04a_74e40ba9de52e62d66e8b5bb0bc8edd2"/>
</et>
</ety>
<mce lb="79" cb="43" le="79" ce="71" nbparm="0" id="84c010a1a9c2223bad1481218c714125_054472938e7819d3a3b1e6b4a923fd95">
<exp pvirg="true"/>
<mex lb="79" cb="43" le="79" ce="64" id="84c010a1a9c2223bad1481218c714125_054472938e7819d3a3b1e6b4a923fd95" nm="getImm" point="1">
<mce lb="79" cb="43" le="79" ce="62" nbparm="1" id="d038367435b7928d04997491e912d58d_d963a30026cb88dfa42da56d95ee78a7">
<exp pvirg="true"/>
<mex lb="79" cb="43" le="79" ce="47" id="d038367435b7928d04997491e912d58d_d963a30026cb88dfa42da56d95ee78a7" nm="getOperand" arrow="1">
<n32 lb="79" cb="43">
<drx lb="79" cb="43" kind="lvalue" nm="MI"/>
</n32>
</mex>
<n32 lb="79" cb="58">
<n32 lb="79" cb="58">
<drx lb="79" cb="58" kind="lvalue" nm="PIdx"/>
</n32>
</n32>
</mce>
</mex>
</mce>
</ocast>
<drx lb="80" cb="25" le="80" ce="32" id="9ae88c1643aad111cfd208406cc6b04a_95d57aab21688da23b51c587865180c9" nm="AL"/>
</co>
</rx>
</u>

</Stmt>
</m>
<m name="PredicateInstruction" id="b08ee5109a4d2aea3d861667cfd23aaf_e68b8ad76131b469c2d5c22a8ea2efcb" file="2" linestart="83" lineend="84" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Pred" proto="const SmallVectorImpl&lt;llvm::MachineOperand&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="35dcc986b9fc41c6f521acfc055f8d35_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<rt>
<cr id="84c010a1a9c2223bad1481218c714125_82ecc2b64168756ea82cc9516656b279"/>
</rt>
</template_arguments>
</tss>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="SubsumesPredicate" id="b08ee5109a4d2aea3d861667cfd23aaf_630273f169d575084e90e7093476adb7" file="2" linestart="86" lineend="87" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="Pred1" proto="const SmallVectorImpl&lt;llvm::MachineOperand&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="35dcc986b9fc41c6f521acfc055f8d35_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<rt>
<cr id="84c010a1a9c2223bad1481218c714125_82ecc2b64168756ea82cc9516656b279"/>
</rt>
</template_arguments>
</tss>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="Pred2" proto="const SmallVectorImpl&lt;llvm::MachineOperand&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<tss>
<templatebase id="35dcc986b9fc41c6f521acfc055f8d35_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<rt>
<cr id="84c010a1a9c2223bad1481218c714125_82ecc2b64168756ea82cc9516656b279"/>
</rt>
</template_arguments>
</tss>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="DefinesPredicate" id="b08ee5109a4d2aea3d861667cfd23aaf_9e5a8a7d3e46bc6dcbc6a370158cac06" file="2" linestart="89" lineend="90" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Pred" proto="std::vector&lt;MachineOperand&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<ety>
<tss>
<templatebase id="78cb3cbcc032150b6a85b2f30813c812_3d0ab7465d6b9448b8c01dc907d3e25b"/>
<template_arguments>
<rt>
<cr id="84c010a1a9c2223bad1481218c714125_82ecc2b64168756ea82cc9516656b279"/>
</rt>
</template_arguments>
</tss>
</ety>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="isPredicable" id="b08ee5109a4d2aea3d861667cfd23aaf_033980b82cd518bf519e5ba66df4519b" file="2" linestart="92" lineend="92" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="GetInstSizeInBytes" id="b08ee5109a4d2aea3d861667cfd23aaf_4223c4d00c91f9e5ed0b3323074a5146" file="2" linestart="96" lineend="96" virtual="true" access="public">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="isLoadFromStackSlot" id="b08ee5109a4d2aea3d861667cfd23aaf_63ed2028d4c93e946daa837d5aa92f96" file="2" linestart="98" lineend="99" access="public">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="isStoreToStackSlot" id="b08ee5109a4d2aea3d861667cfd23aaf_10ca77785f5e6b8dcd9c6ae6d7706feb" file="2" linestart="100" lineend="101" access="public">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="isLoadFromStackSlotPostFE" id="b08ee5109a4d2aea3d861667cfd23aaf_04da453dfdbb0a3a5ad99e5831861c49" file="2" linestart="102" lineend="103" access="public">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="isStoreToStackSlotPostFE" id="b08ee5109a4d2aea3d861667cfd23aaf_a067f0e6e16141e89176bba5ca3792d0" file="2" linestart="104" lineend="105" access="public">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="copyPhysReg" id="b08ee5109a4d2aea3d861667cfd23aaf_cdd150e1a8aa163e70d0d99e19d4fd0a" file="2" linestart="107" lineend="109" access="public">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="I" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="DL" proto="llvm::DebugLoc" access2="none">
<rt>
<cr id="6ca53e77501a21bf88631b761a2f74a6_fe60359165b1d6b25b6efa2b3701b70d"/>
</rt>
<Stmt>

</Stmt>
</p>
<p name="DestReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="SrcReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="KillSrc" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="storeRegToStackSlot" id="b08ee5109a4d2aea3d861667cfd23aaf_f6b65f8fad4cbe8dc56b47c048c6481b" file="2" linestart="111" lineend="115" access="public">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MBBI" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="SrcReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="isKill" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<p name="RC" proto="const llvm::TargetRegisterClass *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_e5ad748063c898b7dab27775bba1a499"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="TRI" proto="const llvm::TargetRegisterInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_2fd18b2e9f937d163d967e6f778ba659"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="loadRegFromStackSlot" id="b08ee5109a4d2aea3d861667cfd23aaf_e572d0726dddadb7c47e79c0cb1cfdc3" file="2" linestart="117" lineend="121" access="public">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MBBI" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="DestReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<p name="RC" proto="const llvm::TargetRegisterClass *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_e5ad748063c898b7dab27775bba1a499"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="TRI" proto="const llvm::TargetRegisterInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_2fd18b2e9f937d163d967e6f778ba659"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="expandPostRAPseudo" id="b08ee5109a4d2aea3d861667cfd23aaf_113ce65760d4c7d30eb9caa7a1d47f02" file="2" linestart="123" lineend="123" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
</m>
<m name="reMaterialize" id="b08ee5109a4d2aea3d861667cfd23aaf_1db97dbd67575cbf5f88e6bbb067666a" file="2" linestart="125" lineend="128" access="public">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MI" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="DestReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="SubIdx" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="Orig" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="TRI" proto="const llvm::TargetRegisterInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_2fd18b2e9f937d163d967e6f778ba659"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="duplicate" id="b08ee5109a4d2aea3d861667cfd23aaf_798b5bcc6f6cd5118e0ecc09a2cef5a9" file="2" linestart="130" lineend="131" access="public">
<fpt const="true" proto="llvm::MachineInstr *">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
</fpt>
<p name="Orig" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="MF" proto="llvm::MachineFunction &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="895a66b41661e915ba6854da2359580f_7a76e175133a980deee19d81d954fcc0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="commuteInstruction" id="b08ee5109a4d2aea3d861667cfd23aaf_d4e358df87d30e9a4b37615724366f5d" file="2" linestart="133" lineend="134" access="public">
<fpt const="true" proto="llvm::MachineInstr *">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
</fpt>
<p name="" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
<Stmt>
<n9 lb="134" cb="41"/>

</Stmt>
</p>
</m>
<m name="AddDReg" id="b08ee5109a4d2aea3d861667cfd23aaf_419bb5c9d8bf0ff62f317d2d322ebc59" file="2" linestart="136" lineend="138" access="public">
<fpt const="true" proto="const llvm::MachineInstrBuilder &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="32975a63c2ff844fe8824398e471d60a_1438597d7eaf2dd7c745676415aeb79c"/>
</rt>
</QualType>
</lrf>
</fpt>
<p name="MIB" proto="llvm::MachineInstrBuilder &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="32975a63c2ff844fe8824398e471d60a_1438597d7eaf2dd7c745676415aeb79c"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="Reg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="SubIdx" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="State" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="TRI" proto="const llvm::TargetRegisterInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_2fd18b2e9f937d163d967e6f778ba659"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="produceSameValue" id="b08ee5109a4d2aea3d861667cfd23aaf_dcf403a1f3fbd923e6764e7f96ef433f" file="2" linestart="140" lineend="141" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI0" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="MI1" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="MRI" proto="const llvm::MachineRegisterInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="ee4673395519b9f405c4d99dd06fa84f_a0d7fc88e3b2a6a7c0a857dd0e66c59b"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="areLoadsFromSameBasePtr" id="b08ee5109a4d2aea3d861667cfd23aaf_33a1e457979f3ce362bc630d946b82af" file="2" linestart="148" lineend="149" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="Load1" proto="llvm::SDNode *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="e657d4590d4ae2f19e9fcd6accd93c66_3759b9bd1ce1cac3724a4522e9a171a5"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Load2" proto="llvm::SDNode *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="e657d4590d4ae2f19e9fcd6accd93c66_3759b9bd1ce1cac3724a4522e9a171a5"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Offset1" proto="int64_t &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<Tdef>
<bt name="long long"/>
</Tdef>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="Offset2" proto="int64_t &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<Tdef>
<bt name="long long"/>
</Tdef>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="shouldScheduleLoadsNear" id="b08ee5109a4d2aea3d861667cfd23aaf_60fd89107641ec10b595f3d68e4d2c74" file="2" linestart="159" lineend="161" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="Load1" proto="llvm::SDNode *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="e657d4590d4ae2f19e9fcd6accd93c66_3759b9bd1ce1cac3724a4522e9a171a5"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Load2" proto="llvm::SDNode *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="e657d4590d4ae2f19e9fcd6accd93c66_3759b9bd1ce1cac3724a4522e9a171a5"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Offset1" proto="int64_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="long long"/>
</Tdef>
<Stmt>

</Stmt>
</p>
<p name="Offset2" proto="int64_t" isLiteral="true" isPrimitive="true" access2="none">
<Tdef>
<bt name="long long"/>
</Tdef>
<Stmt>

</Stmt>
</p>
<p name="NumLoads" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="isSchedulingBoundary" id="b08ee5109a4d2aea3d861667cfd23aaf_3eca83998048c319e5c7afb0d96d630d" file="2" linestart="163" lineend="165" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="MBB" proto="const llvm::MachineBasicBlock *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="MF" proto="const llvm::MachineFunction &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="895a66b41661e915ba6854da2359580f_7a76e175133a980deee19d81d954fcc0"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="isProfitableToIfCvt" id="b08ee5109a4d2aea3d861667cfd23aaf_1884d8c7711cc83461a464294c15baaf" file="2" linestart="167" lineend="169" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="NumCycles" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="ExtraPredCycles" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="Probability" proto="const llvm::BranchProbability &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="35dcc986b9fc41c6f521acfc055f8d35_8b6d54abed686387aeec232793f7598a"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="isProfitableToIfCvt" id="b08ee5109a4d2aea3d861667cfd23aaf_59cd131a44046cae2d60437ac97b86e0" file="2" linestart="171" lineend="174" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="TMBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="NumT" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="ExtraT" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="FMBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="NumF" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="ExtraF" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="Probability" proto="const llvm::BranchProbability &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="35dcc986b9fc41c6f521acfc055f8d35_8b6d54abed686387aeec232793f7598a"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="isProfitableToDupForIfCvt" id="b08ee5109a4d2aea3d861667cfd23aaf_d874d8bce7eb07615f86c78f23707932" file="2" linestart="176" lineend="179" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="NumCycles" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="Probability" proto="const llvm::BranchProbability &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="35dcc986b9fc41c6f521acfc055f8d35_8b6d54abed686387aeec232793f7598a"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="177" cb="80" le="179" ce="3">
<rx lb="178" cb="5" le="178" ce="25" pvirg="true">
<xop lb="178" cb="12" le="178" ce="25" kind="==">
<n32 lb="178" cb="12">
<drx lb="178" cb="12" kind="lvalue" nm="NumCycles"/>
</n32>
<n32 lb="178" cb="25">
<n45 lb="178" cb="25">
<flit/>
</n45>
</n32>
</xop>
</rx>
</u>

</Stmt>
</m>
<m name="isProfitableToUnpredicate" id="b08ee5109a4d2aea3d861667cfd23aaf_e865666f1198eb066bba38ec1a810673" file="2" linestart="181" lineend="182" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="TMBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="FMBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="analyzeCompare" id="b08ee5109a4d2aea3d861667cfd23aaf_d234e00c488b2587ec715aed612484b2" file="2" linestart="188" lineend="190" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="SrcReg" proto="unsigned int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="unsigned int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="SrcReg2" proto="unsigned int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="unsigned int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="CmpMask" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="CmpValue" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="optimizeCompareInstr" id="b08ee5109a4d2aea3d861667cfd23aaf_bd79df586a417fbad2d7751239150ba3" file="2" linestart="196" lineend="198" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="CmpInstr" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="SrcReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="SrcReg2" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="CmpMask" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<p name="CmpValue" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<p name="MRI" proto="const llvm::MachineRegisterInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="ee4673395519b9f405c4d99dd06fa84f_a0d7fc88e3b2a6a7c0a857dd0e66c59b"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="analyzeSelect" id="b08ee5109a4d2aea3d861667cfd23aaf_ff32ddb33fb3f0334c6053e56c18d9e8" file="2" linestart="200" lineend="203" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Cond" proto="SmallVectorImpl&lt;llvm::MachineOperand&gt; &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<tss>
<templatebase id="35dcc986b9fc41c6f521acfc055f8d35_de149a278b9bdd7657798d3ddb9a06b4"/>
<template_arguments>
<rt>
<cr id="84c010a1a9c2223bad1481218c714125_82ecc2b64168756ea82cc9516656b279"/>
</rt>
</template_arguments>
</tss>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="TrueOp" proto="unsigned int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="unsigned int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="FalseOp" proto="unsigned int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="unsigned int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="Optimizable" proto="bool &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="bool"/>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="optimizeSelect" id="b08ee5109a4d2aea3d861667cfd23aaf_e572885b137e4204957cde8ca79ab413" file="2" linestart="205" lineend="205" access="public">
<fpt const="true" proto="llvm::MachineInstr *">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
</fpt>
<p name="MI" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="FoldImmediate" id="b08ee5109a4d2aea3d861667cfd23aaf_752a3b7298273d53b5dac2d7e3670906" file="2" linestart="209" lineend="210" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="UseMI" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="DefMI" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Reg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="MRI" proto="llvm::MachineRegisterInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="ee4673395519b9f405c4d99dd06fa84f_a0d7fc88e3b2a6a7c0a857dd0e66c59b"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="getNumMicroOps" id="b08ee5109a4d2aea3d861667cfd23aaf_96ca998544a6b83bbef5da2da2a1a678" file="2" linestart="212" lineend="213" access="public">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="ItinData" proto="const llvm::InstrItineraryData *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="dcceaabcfcc76c7932ff95ffc6d2e0e7_9cdec5bb75193864eb7a85a279c047c5"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="getOperandLatency" id="b08ee5109a4d2aea3d861667cfd23aaf_c9e0d772d35e0c24777b0fbd5522417f" file="2" linestart="215" lineend="218" access="public">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
<p name="ItinData" proto="const llvm::InstrItineraryData *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="dcceaabcfcc76c7932ff95ffc6d2e0e7_9cdec5bb75193864eb7a85a279c047c5"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="DefMI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="DefIdx" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="UseMI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="UseIdx" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="getOperandLatency" id="b08ee5109a4d2aea3d861667cfd23aaf_8142b5e5562b618da2268d182600f4b9" file="2" linestart="219" lineend="221" access="public">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
<p name="ItinData" proto="const llvm::InstrItineraryData *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="dcceaabcfcc76c7932ff95ffc6d2e0e7_9cdec5bb75193864eb7a85a279c047c5"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="DefNode" proto="llvm::SDNode *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="e657d4590d4ae2f19e9fcd6accd93c66_3759b9bd1ce1cac3724a4522e9a171a5"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="DefIdx" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="UseNode" proto="llvm::SDNode *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="e657d4590d4ae2f19e9fcd6accd93c66_3759b9bd1ce1cac3724a4522e9a171a5"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="UseIdx" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="getExecutionDomain" id="b08ee5109a4d2aea3d861667cfd23aaf_3c90181f1cde81654e5e885a076037b4" file="2" linestart="224" lineend="225" access="public">
<fpt const="true" proto="std::pair&lt;uint16_t, uint16_t&gt;">
<ety>
<tss>
<templatebase id="a32934a7929d7a50ec111aa40bc74d41_588c02fb583a80daabf4c37e3fd82a49"/>
<template_arguments>
<Tdef>
<bt name="unsigned short"/>
</Tdef>
<Tdef>
<bt name="unsigned short"/>
</Tdef>
</template_arguments>
</tss>
</ety>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="setExecutionDomain" id="b08ee5109a4d2aea3d861667cfd23aaf_24030f2b8e4056038c0c5c47a78f9e4f" file="2" linestart="226" lineend="226" access="public">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="MI" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Domain" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="getPartialRegUpdateClearance" id="b08ee5109a4d2aea3d861667cfd23aaf_083cbb6a805be70f7ac6069a486b6d40" file="2" linestart="228" lineend="229" access="public">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="" proto="const llvm::TargetRegisterInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_2fd18b2e9f937d163d967e6f778ba659"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="breakPartialRegDependency" id="b08ee5109a4d2aea3d861667cfd23aaf_b9a758d154491b58adc40084cde6d6d3" file="2" linestart="230" lineend="231" access="public">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="TRI" proto="const llvm::TargetRegisterInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_2fd18b2e9f937d163d967e6f778ba659"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="getUnconditionalBranch" id="b08ee5109a4d2aea3d861667cfd23aaf_80bfb4703c02a96f93c51e06b9077faa" file="2" linestart="233" lineend="235" access="public">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="Branch" proto="llvm::MCInst &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="b3d79b6498e401eea6fd4a0a2ff0b44a_4dc08c22fc67fa33e164b3e422ed7a5c"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="BranchTarget" proto="const llvm::MCSymbolRefExpr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="35dcc986b9fc41c6f521acfc055f8d35_d043d8f39b4e1243ba83b654d7bdd0e2"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="getTrap" id="b08ee5109a4d2aea3d861667cfd23aaf_614a387a162911293003b51b99485b26" file="2" linestart="237" lineend="237" access="public">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="MI" proto="llvm::MCInst &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="b3d79b6498e401eea6fd4a0a2ff0b44a_4dc08c22fc67fa33e164b3e422ed7a5c"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="getNumLDMAddresses" id="b08ee5109a4d2aea3d861667cfd23aaf_9d951640c907b095c396461b6806ef92" file="2" linestart="240" lineend="240" access="public">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<Decl access="private"/>
<m name="getInstBundleLength" id="b08ee5109a4d2aea3d861667cfd23aaf_ca7aecfb263c76fe10193038497910fa" file="2" linestart="243" lineend="243" access="private">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="getVLDMDefCycle" id="b08ee5109a4d2aea3d861667cfd23aaf_c67318a2a424cf6dfa5ae5dee7fefd8a" file="2" linestart="245" lineend="248" access="private">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
<p name="ItinData" proto="const llvm::InstrItineraryData *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="dcceaabcfcc76c7932ff95ffc6d2e0e7_9cdec5bb75193864eb7a85a279c047c5"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="DefMCID" proto="const llvm::MCInstrDesc &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="4a2ff077d443c99e1182a35779fbc93e_909e0cc90563445957ef8449584561cd"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="DefClass" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="DefIdx" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="DefAlign" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="getLDMDefCycle" id="b08ee5109a4d2aea3d861667cfd23aaf_4b866064187d8206cd6c01dc4d159f70" file="2" linestart="249" lineend="252" access="private">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
<p name="ItinData" proto="const llvm::InstrItineraryData *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="dcceaabcfcc76c7932ff95ffc6d2e0e7_9cdec5bb75193864eb7a85a279c047c5"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="DefMCID" proto="const llvm::MCInstrDesc &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="4a2ff077d443c99e1182a35779fbc93e_909e0cc90563445957ef8449584561cd"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="DefClass" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="DefIdx" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="DefAlign" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="getVSTMUseCycle" id="b08ee5109a4d2aea3d861667cfd23aaf_a577a6640877e7f3bc8b62f593cb46be" file="2" linestart="253" lineend="256" access="private">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
<p name="ItinData" proto="const llvm::InstrItineraryData *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="dcceaabcfcc76c7932ff95ffc6d2e0e7_9cdec5bb75193864eb7a85a279c047c5"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="UseMCID" proto="const llvm::MCInstrDesc &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="4a2ff077d443c99e1182a35779fbc93e_909e0cc90563445957ef8449584561cd"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="UseClass" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="UseIdx" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="UseAlign" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="getSTMUseCycle" id="b08ee5109a4d2aea3d861667cfd23aaf_dc41415991f0871ece95b5d74786de99" file="2" linestart="257" lineend="260" access="private">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
<p name="ItinData" proto="const llvm::InstrItineraryData *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="dcceaabcfcc76c7932ff95ffc6d2e0e7_9cdec5bb75193864eb7a85a279c047c5"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="UseMCID" proto="const llvm::MCInstrDesc &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="4a2ff077d443c99e1182a35779fbc93e_909e0cc90563445957ef8449584561cd"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="UseClass" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="UseIdx" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="UseAlign" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="getOperandLatency" id="b08ee5109a4d2aea3d861667cfd23aaf_6a8c9028304167985db3758e16099534" file="2" linestart="261" lineend="265" access="private">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
<p name="ItinData" proto="const llvm::InstrItineraryData *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="dcceaabcfcc76c7932ff95ffc6d2e0e7_9cdec5bb75193864eb7a85a279c047c5"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="DefMCID" proto="const llvm::MCInstrDesc &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="4a2ff077d443c99e1182a35779fbc93e_909e0cc90563445957ef8449584561cd"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="DefIdx" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="DefAlign" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="UseMCID" proto="const llvm::MCInstrDesc &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="4a2ff077d443c99e1182a35779fbc93e_909e0cc90563445957ef8449584561cd"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="UseIdx" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="UseAlign" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="getPredicationCost" id="b08ee5109a4d2aea3d861667cfd23aaf_ec586bea9376276af6ccd33860fa25ae" file="2" linestart="267" lineend="267" access="private">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="getInstrLatency" id="b08ee5109a4d2aea3d861667cfd23aaf_1bdbd2d383fe5cf6ead1841165df7057" file="2" linestart="269" lineend="271" access="private">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="ItinData" proto="const llvm::InstrItineraryData *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="dcceaabcfcc76c7932ff95ffc6d2e0e7_9cdec5bb75193864eb7a85a279c047c5"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="PredCost" proto="unsigned int *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<bt name="unsigned int"/>
</pt>
<Stmt>
<n32 lb="271" cb="49">
<n16 lb="271" cb="49">
<exp pvirg="true"/>
</n16>
</n32>

</Stmt>
</p>
</m>
<m name="getInstrLatency" id="b08ee5109a4d2aea3d861667cfd23aaf_6d9887a6af3930ddc99ff96b76f6c203" file="2" linestart="273" lineend="274" access="private">
<fpt const="true" proto="int">
<bt name="int"/>
</fpt>
<p name="ItinData" proto="const llvm::InstrItineraryData *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="dcceaabcfcc76c7932ff95ffc6d2e0e7_9cdec5bb75193864eb7a85a279c047c5"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="Node" proto="llvm::SDNode *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="e657d4590d4ae2f19e9fcd6accd93c66_3759b9bd1ce1cac3724a4522e9a171a5"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="hasHighOperandLatency" id="b08ee5109a4d2aea3d861667cfd23aaf_53b49f6cbee5b15839df22d1342d785f" file="2" linestart="276" lineend="280" access="private">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="ItinData" proto="const llvm::InstrItineraryData *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="dcceaabcfcc76c7932ff95ffc6d2e0e7_9cdec5bb75193864eb7a85a279c047c5"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="MRI" proto="const llvm::MachineRegisterInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="ee4673395519b9f405c4d99dd06fa84f_a0d7fc88e3b2a6a7c0a857dd0e66c59b"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="DefMI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="DefIdx" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="UseMI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="UseIdx" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="hasLowDefLatency" id="b08ee5109a4d2aea3d861667cfd23aaf_707b73188f05282f148b007a498c20ff" file="2" linestart="281" lineend="283" access="private">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="ItinData" proto="const llvm::InstrItineraryData *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="dcceaabcfcc76c7932ff95ffc6d2e0e7_9cdec5bb75193864eb7a85a279c047c5"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="DefMI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="DefIdx" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="verifyInstruction" id="b08ee5109a4d2aea3d861667cfd23aaf_dd1361175a342cd1320f58caf48f7487" file="2" linestart="286" lineend="287" access="private">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="ErrInfo" proto="llvm::StringRef &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="6f9d54688deb2fea7e6a760a21186275_1025e290e4030296f4991e57e4952f33"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<Decl access="private"/>
<fl name="MLxEntryMap" id="b08ee5109a4d2aea3d861667cfd23aaf_f95e1214b39abeae24567f7f997d22d7" file="2" linestart="294" lineend="294" access="private" proto="DenseMap&lt;unsigned int, unsigned int&gt;">
<tss>
<templatebase id="a2e0511a2f7df2d0d224b4855fe9d8ec_6c3b609a49f5ba6a1fa3fad8d9fe38bc"/>
<template_arguments>
<bt name="unsigned int"/>
<bt name="unsigned int"/>
</template_arguments>
</tss>
</fl>
<fl name="MLxHazardOpcodes" id="b08ee5109a4d2aea3d861667cfd23aaf_bf546955499a8ed977ea75cd28177af2" file="2" linestart="298" lineend="298" access="private" proto="SmallSet&lt;unsigned int, 16&gt;">
<tss>
<templatebase id="9c4b9327ad3220f2da72620c85b94779_cb64119211184d7bf0be7312d49d306a"/>
<template_arguments>
<bt name="unsigned int"/>
<Stmt>
<n45 lb="298" cb="22">
<flit/>
</n45>

</Stmt>
</template_arguments>
</tss>
</fl>
<Decl access="public"/>
<m name="isFpMLxInstruction" id="b08ee5109a4d2aea3d861667cfd23aaf_93e81b58bf2380a7776030b385f0a84c" file="2" linestart="303" lineend="305" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="Opcode" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="303" cb="50" le="305" ce="3">
<rx lb="304" cb="5" le="304" ce="36" pvirg="true">
<n32 lb="304" cb="12" le="304" ce="36">
<mce lb="304" cb="12" le="304" ce="36" nbparm="1" id="a2e0511a2f7df2d0d224b4855fe9d8ec_9711c5cd7bede1743cf6ca03a538d14f">
<exp pvirg="true"/>
<mex lb="304" cb="12" le="304" ce="24" id="a2e0511a2f7df2d0d224b4855fe9d8ec_9711c5cd7bede1743cf6ca03a538d14f" nm="count" point="1">
<n32 lb="304" cb="12">
<mex lb="304" cb="12" kind="lvalue" id="b08ee5109a4d2aea3d861667cfd23aaf_f95e1214b39abeae24567f7f997d22d7" nm="MLxEntryMap" arrow="1">
<n19 lb="304" cb="12"/>
</mex>
</n32>
</mex>
<n32 lb="304" cb="30">
<drx lb="304" cb="30" kind="lvalue" nm="Opcode"/>
</n32>
</mce>
</n32>
</rx>
</u>

</Stmt>
</m>
<m name="isFpMLxInstruction" id="b08ee5109a4d2aea3d861667cfd23aaf_4913fc11333655a8599e5682980003d2" file="2" linestart="310" lineend="312" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="Opcode" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="MulOpc" proto="unsigned int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="unsigned int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="AddSubOpc" proto="unsigned int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="unsigned int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="NegAcc" proto="bool &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="bool"/>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="HasLane" proto="bool &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="bool"/>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="canCauseFpMLxStall" id="b08ee5109a4d2aea3d861667cfd23aaf_4fd40630aceeaf2c3ab9bd0cd713e364" file="2" linestart="317" lineend="319" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="Opcode" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="317" cb="50" le="319" ce="3">
<rx lb="318" cb="5" le="318" ce="41" pvirg="true">
<n32 lb="318" cb="12" le="318" ce="41">
<mce lb="318" cb="12" le="318" ce="41" nbparm="1" id="9c4b9327ad3220f2da72620c85b94779_38ffe617e9942ed40d52f55f0a5728f0">
<exp pvirg="true"/>
<mex lb="318" cb="12" le="318" ce="29" id="9c4b9327ad3220f2da72620c85b94779_38ffe617e9942ed40d52f55f0a5728f0" nm="count" point="1">
<mex lb="318" cb="12" kind="lvalue" id="b08ee5109a4d2aea3d861667cfd23aaf_bf546955499a8ed977ea75cd28177af2" nm="MLxHazardOpcodes" arrow="1">
<n19 lb="318" cb="12"/>
</mex>
</mex>
<n32 lb="318" cb="35">
<drx lb="318" cb="35" kind="lvalue" nm="Opcode"/>
</n32>
</mce>
</n32>
</rx>
</u>

</Stmt>
</m>
<m name="isSwiftFastImmShift" id="b08ee5109a4d2aea3d861667cfd23aaf_3a50299840b29bbd42cdb0c2c50bdbd1" file="2" linestart="323" lineend="323" access="public">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="operator=" id="b08ee5109a4d2aea3d861667cfd23aaf_85551f7e54d696de7165e9a68c7b2365" file="2" linestart="30" implicit="true" operator="true" access="public" inline="true" isdef="true">
<fpt proto="llvm::ARMBaseInstrInfo &amp;">
<lrf>
<rt>
<cr id="b08ee5109a4d2aea3d861667cfd23aaf_9b505b831079eb1a273b49419189db5b"/>
</rt>
</lrf>
</fpt>
<p name="" proto="const llvm::ARMBaseInstrInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="b08ee5109a4d2aea3d861667cfd23aaf_9b505b831079eb1a273b49419189db5b"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<d name="~ARMBaseInstrInfo" id="b08ee5109a4d2aea3d861667cfd23aaf_09d0e831f171f57715d99dbcdca925b5" file="2" linestart="30" lineend="30" implicit="true" access="public" inline="true" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
<exception_specifiers nothrow="true"/>
</fpt>
<Stmt>
<u lb="30" cb="7"/>

</Stmt>
</d>
<c name="ARMBaseInstrInfo" id="b08ee5109a4d2aea3d861667cfd23aaf_11eff19d984386bc344027d773e8b680" file="2" linestart="30" lineend="30" copyconst="true" implicit="true" access="public" inline="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="const llvm::ARMBaseInstrInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="b08ee5109a4d2aea3d861667cfd23aaf_9b505b831079eb1a273b49419189db5b"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</c>
<c name="ARMBaseInstrInfo" id="b08ee5109a4d2aea3d861667cfd23aaf_1a3112830b68d722627d53c83bf8e712" file="2" linestart="30" lineend="30" implicit="true" access="public" inline="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="llvm::ARMBaseInstrInfo &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="b08ee5109a4d2aea3d861667cfd23aaf_9b505b831079eb1a273b49419189db5b"/>
</rt>
</rrf>
<Stmt>

</Stmt>
</p>
</c>
</cr>
<f namespace="llvm" name="AddDefaultPred" id="b08ee5109a4d2aea3d861667cfd23aaf_c74c1e54ff88954dc7685dbd7760c3b7" file="2" linestart="326" lineend="329" access="none" storage="static" inline="true" hasbody="true" isdef="true">
<fpt proto="const llvm::MachineInstrBuilder &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="32975a63c2ff844fe8824398e471d60a_1438597d7eaf2dd7c745676415aeb79c"/>
</rt>
</QualType>
</lrf>
</fpt>
<p name="MIB" proto="const llvm::MachineInstrBuilder &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="32975a63c2ff844fe8824398e471d60a_1438597d7eaf2dd7c745676415aeb79c"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="327" cb="75" le="329" ce="1">
<rx lb="328" cb="3" le="328" ce="49" pvirg="true">
<mce lb="328" cb="10" le="328" ce="49" nbparm="3" id="32975a63c2ff844fe8824398e471d60a_fba4d8b69d4dfa532fb65cfbe39da116">
<exp pvirg="true"/>
<mex lb="328" cb="10" le="328" ce="41" id="32975a63c2ff844fe8824398e471d60a_fba4d8b69d4dfa532fb65cfbe39da116" nm="addReg" point="1">
<mce lb="328" cb="10" le="328" ce="39" nbparm="1" id="32975a63c2ff844fe8824398e471d60a_a19e55fcb63a5bd5f35cfe3518551aca">
<exp pvirg="true"/>
<mex lb="328" cb="10" le="328" ce="14" id="32975a63c2ff844fe8824398e471d60a_a19e55fcb63a5bd5f35cfe3518551aca" nm="addImm" point="1">
<drx lb="328" cb="10" kind="lvalue" nm="MIB"/>
</mex>
<ocast lb="328" cb="21" le="328" ce="37">
<Tdef>
<bt name="long long"/>
</Tdef>
<n32 lb="328" cb="30" le="328" ce="37">
<drx lb="328" cb="30" le="328" ce="37" id="9ae88c1643aad111cfd208406cc6b04a_95d57aab21688da23b51c587865180c9" nm="AL"/>
</n32>
</ocast>
</mce>
</mex>
<n32 lb="328" cb="48">
<n45 lb="328" cb="48">
<flit/>
</n45>
</n32>
<n12>
<exp pvirg="true"/>
</n12>
<n12>
<exp pvirg="true"/>
</n12>
</mce>
</rx>
</u>

</Stmt>
</f>
<f namespace="llvm" name="AddDefaultCC" id="b08ee5109a4d2aea3d861667cfd23aaf_2ae9b50a8637e04bfd6de44de8699422" file="2" linestart="331" lineend="334" access="none" storage="static" inline="true" hasbody="true" isdef="true">
<fpt proto="const llvm::MachineInstrBuilder &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="32975a63c2ff844fe8824398e471d60a_1438597d7eaf2dd7c745676415aeb79c"/>
</rt>
</QualType>
</lrf>
</fpt>
<p name="MIB" proto="const llvm::MachineInstrBuilder &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="32975a63c2ff844fe8824398e471d60a_1438597d7eaf2dd7c745676415aeb79c"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="332" cb="73" le="334" ce="1">
<rx lb="333" cb="3" le="333" ce="22" pvirg="true">
<mce lb="333" cb="10" le="333" ce="22" nbparm="3" id="32975a63c2ff844fe8824398e471d60a_fba4d8b69d4dfa532fb65cfbe39da116">
<exp pvirg="true"/>
<mex lb="333" cb="10" le="333" ce="14" id="32975a63c2ff844fe8824398e471d60a_fba4d8b69d4dfa532fb65cfbe39da116" nm="addReg" point="1">
<drx lb="333" cb="10" kind="lvalue" nm="MIB"/>
</mex>
<n32 lb="333" cb="21">
<n45 lb="333" cb="21">
<flit/>
</n45>
</n32>
<n12>
<exp pvirg="true"/>
</n12>
<n12>
<exp pvirg="true"/>
</n12>
</mce>
</rx>
</u>

</Stmt>
</f>
<f namespace="llvm" name="AddDefaultT1CC" id="b08ee5109a4d2aea3d861667cfd23aaf_1b3a3e293774c61c60107bd2efa64300" file="2" linestart="336" lineend="340" access="none" storage="static" inline="true" hasbody="true" isdef="true">
<fpt proto="const llvm::MachineInstrBuilder &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="32975a63c2ff844fe8824398e471d60a_1438597d7eaf2dd7c745676415aeb79c"/>
</rt>
</QualType>
</lrf>
</fpt>
<p name="MIB" proto="const llvm::MachineInstrBuilder &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="32975a63c2ff844fe8824398e471d60a_1438597d7eaf2dd7c745676415aeb79c"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="isDead" proto="bool" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="bool"/>
<Stmt>
<n9 lb="338" cb="57"/>

</Stmt>
</p>
<Stmt>
<u lb="338" cb="64" le="340" ce="1"/>

</Stmt>
</f>
<f namespace="llvm" name="AddNoT1CC" id="b08ee5109a4d2aea3d861667cfd23aaf_0e639af006d6c244e4b38745514c812b" file="2" linestart="342" lineend="345" access="none" storage="static" inline="true" hasbody="true" isdef="true">
<fpt proto="const llvm::MachineInstrBuilder &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="32975a63c2ff844fe8824398e471d60a_1438597d7eaf2dd7c745676415aeb79c"/>
</rt>
</QualType>
</lrf>
</fpt>
<p name="MIB" proto="const llvm::MachineInstrBuilder &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="32975a63c2ff844fe8824398e471d60a_1438597d7eaf2dd7c745676415aeb79c"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="343" cb="70" le="345" ce="1">
<rx lb="344" cb="3" le="344" ce="22" pvirg="true">
<mce lb="344" cb="10" le="344" ce="22" nbparm="3" id="32975a63c2ff844fe8824398e471d60a_fba4d8b69d4dfa532fb65cfbe39da116">
<exp pvirg="true"/>
<mex lb="344" cb="10" le="344" ce="14" id="32975a63c2ff844fe8824398e471d60a_fba4d8b69d4dfa532fb65cfbe39da116" nm="addReg" point="1">
<drx lb="344" cb="10" kind="lvalue" nm="MIB"/>
</mex>
<n32 lb="344" cb="21">
<n45 lb="344" cb="21">
<flit/>
</n45>
</n32>
<n12>
<exp pvirg="true"/>
</n12>
<n12>
<exp pvirg="true"/>
</n12>
</mce>
</rx>
</u>

</Stmt>
</f>
<f namespace="llvm" name="isUncondBranchOpcode" id="b08ee5109a4d2aea3d861667cfd23aaf_eeac0935dc8e3ea4dc3d48b2cbfe272d" file="2" linestart="347" lineend="350" access="none" storage="static" inline="true" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="Opc" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="348" cb="36" le="350" ce="1"/>

</Stmt>
</f>
<f namespace="llvm" name="isCondBranchOpcode" id="b08ee5109a4d2aea3d861667cfd23aaf_907d5f29e8a04db5e52eaebba50cfae7" file="2" linestart="352" lineend="355" access="none" storage="static" inline="true" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="Opc" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="353" cb="34" le="355" ce="1"/>

</Stmt>
</f>
<f namespace="llvm" name="isJumpTableBranchOpcode" id="b08ee5109a4d2aea3d861667cfd23aaf_2d681af812495807ec81a29de3bcc82f" file="2" linestart="357" lineend="361" access="none" storage="static" inline="true" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="Opc" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="358" cb="39" le="361" ce="1"/>

</Stmt>
</f>
<f namespace="llvm" name="isIndirectBranchOpcode" id="b08ee5109a4d2aea3d861667cfd23aaf_116f4e4218bec94388ff44f6c1b6a67e" file="2" linestart="363" lineend="366" access="none" storage="static" inline="true" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="Opc" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="364" cb="38" le="366" ce="1"/>

</Stmt>
</f>
<f namespace="llvm" name="isPopOpcode" id="b08ee5109a4d2aea3d861667cfd23aaf_562f08178650d13ae753131d5290631f" file="2" linestart="368" lineend="372" access="none" storage="static" inline="true" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="Opc" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="368" cb="41" le="372" ce="1"/>

</Stmt>
</f>
<f namespace="llvm" name="isPushOpcode" id="b08ee5109a4d2aea3d861667cfd23aaf_29dec473fbe17d739577388a71c2d244" file="2" linestart="374" lineend="377" access="none" storage="static" inline="true" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="Opc" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="374" cb="42" le="377" ce="1"/>

</Stmt>
</f>
<f namespace="llvm" name="getInstrPredicate" id="b08ee5109a4d2aea3d861667cfd23aaf_efd737dd346494c2c244fb0efd62d2bd" file="2" linestart="382" lineend="382" access="none">
<fpt proto="ARMCC::CondCodes">
<ety>
<et>
<e id="9ae88c1643aad111cfd208406cc6b04a_74e40ba9de52e62d66e8b5bb0bc8edd2"/>
</et>
</ety>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="PredReg" proto="unsigned int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="unsigned int"/>
</lrf>
<Stmt>

</Stmt>
</p>
</f>
<f namespace="llvm" name="getMatchingCondBranchOpcode" id="b08ee5109a4d2aea3d861667cfd23aaf_d3ea4f90b223ff4ae351ebc564291fa1" file="2" linestart="384" lineend="384" access="none">
<fpt proto="int">
<bt name="int"/>
</fpt>
<p name="Opc" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
</f>
<f namespace="llvm" name="canFoldARMInstrIntoMOVCC" id="b08ee5109a4d2aea3d861667cfd23aaf_88572a1e2484df1af1928b001aab90a2" file="2" linestart="388" lineend="390" access="none">
<fpt proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="Reg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="MI" proto="llvm::MachineInstr *&amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MRI" proto="const llvm::MachineRegisterInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="ee4673395519b9f405c4d99dd06fa84f_a0d7fc88e3b2a6a7c0a857dd0e66c59b"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</f>
<f namespace="llvm" name="convertAddSubFlagsOpcode" id="b08ee5109a4d2aea3d861667cfd23aaf_5ce5433a84adb441c128d1d5157dc3ce" file="2" linestart="395" lineend="395" access="none">
<fpt proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="OldOpc" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</f>
<f namespace="llvm" name="emitARMRegPlusImmediate" id="b08ee5109a4d2aea3d861667cfd23aaf_35e5dc4ad924bf8c189374821815e468" file="2" linestart="400" lineend="404" access="none">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MBBI" proto="MachineBasicBlock::iterator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="dl" proto="llvm::DebugLoc" access2="none">
<rt>
<cr id="6ca53e77501a21bf88631b761a2f74a6_fe60359165b1d6b25b6efa2b3701b70d"/>
</rt>
<Stmt>

</Stmt>
</p>
<p name="DestReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="BaseReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="NumBytes" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<p name="Pred" proto="ARMCC::CondCodes" isLiteral="true" access2="none">
<ety>
<et>
<e id="9ae88c1643aad111cfd208406cc6b04a_74e40ba9de52e62d66e8b5bb0bc8edd2"/>
</et>
</ety>
<Stmt>

</Stmt>
</p>
<p name="PredReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="TII" proto="const llvm::ARMBaseInstrInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="b08ee5109a4d2aea3d861667cfd23aaf_9b505b831079eb1a273b49419189db5b"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MIFlags" proto="unsigned int" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="unsigned int"/>
<Stmt>
<n32 lb="404" cb="78">
<n45 lb="404" cb="78">
<flit/>
</n45>
</n32>

</Stmt>
</p>
</f>
<f namespace="llvm" name="emitT2RegPlusImmediate" id="b08ee5109a4d2aea3d861667cfd23aaf_77dbff3f15a82b4b4d36555a210507d0" file="2" linestart="406" lineend="410" access="none" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MBBI" proto="MachineBasicBlock::iterator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="dl" proto="llvm::DebugLoc" access2="none">
<rt>
<cr id="6ca53e77501a21bf88631b761a2f74a6_fe60359165b1d6b25b6efa2b3701b70d"/>
</rt>
<Stmt>

</Stmt>
</p>
<p name="DestReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="BaseReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="NumBytes" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<p name="Pred" proto="ARMCC::CondCodes" isLiteral="true" access2="none">
<ety>
<et>
<e id="9ae88c1643aad111cfd208406cc6b04a_74e40ba9de52e62d66e8b5bb0bc8edd2"/>
</et>
</ety>
<Stmt>

</Stmt>
</p>
<p name="PredReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="TII" proto="const llvm::ARMBaseInstrInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="b08ee5109a4d2aea3d861667cfd23aaf_9b505b831079eb1a273b49419189db5b"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MIFlags" proto="unsigned int" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="unsigned int"/>
<Stmt>
<n32 lb="410" cb="77">
<n45 lb="410" cb="77">
<flit/>
</n45>
</n32>

</Stmt>
</p>
</f>
<f namespace="llvm" name="emitThumbRegPlusImmediate" id="b08ee5109a4d2aea3d861667cfd23aaf_63f33c314b344b719de1cab359221c13" file="2" linestart="411" lineend="416" access="none">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MBBI" proto="MachineBasicBlock::iterator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="dl" proto="llvm::DebugLoc" access2="none">
<rt>
<cr id="6ca53e77501a21bf88631b761a2f74a6_fe60359165b1d6b25b6efa2b3701b70d"/>
</rt>
<Stmt>

</Stmt>
</p>
<p name="DestReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="BaseReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="NumBytes" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<p name="TII" proto="const llvm::TargetInstrInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="35dcc986b9fc41c6f521acfc055f8d35_b2b5c0419910194f0db2c9f0b04e3ba2"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MRI" proto="const llvm::ARMBaseRegisterInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="4302766d6a218e79b639aed08b6e6733_f6e17bef111765358104a716f11a8f14"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MIFlags" proto="unsigned int" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="unsigned int"/>
<Stmt>
<n32 lb="416" cb="51">
<n45 lb="416" cb="51">
<flit/>
</n45>
</n32>

</Stmt>
</p>
</f>
<f namespace="llvm" name="tryFoldSPUpdateIntoPushPop" id="b08ee5109a4d2aea3d861667cfd23aaf_84064f49860293579d6490700854f9ac" file="2" linestart="423" lineend="425" access="none">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="Subtarget" proto="const llvm::ARMSubtarget &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="d83bca43e3c159dd5e5469a047faa0b0_3177358262ca7f653e8cfe41aac6f52e"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MF" proto="llvm::MachineFunction &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="895a66b41661e915ba6854da2359580f_7a76e175133a980deee19d81d954fcc0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MI" proto="llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="NumBytes" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</f>
<f namespace="llvm" name="rewriteARMFrameIndex" id="b08ee5109a4d2aea3d861667cfd23aaf_0a2d42eb6a3e81ff5074f8f37f07b4a0" file="2" linestart="431" lineend="433" access="none">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="llvm::MachineInstr &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="FrameRegIdx" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="FrameReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="Offset" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="TII" proto="const llvm::ARMBaseInstrInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="b08ee5109a4d2aea3d861667cfd23aaf_9b505b831079eb1a273b49419189db5b"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</f>
<f namespace="llvm" name="rewriteT2FrameIndex" id="b08ee5109a4d2aea3d861667cfd23aaf_7f964122207da9e2f201a309671b38ec" file="2" linestart="435" lineend="437" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="llvm::MachineInstr &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="FrameRegIdx" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="FrameReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="Offset" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="TII" proto="const llvm::ARMBaseInstrInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="b08ee5109a4d2aea3d861667cfd23aaf_9b505b831079eb1a273b49419189db5b"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</f>
</ns>
<ns name="llvm" id="27f7c847a850b67c5c819a497fa827e6_544dadc8774ac7e8cdf9804c9bca3e1f" file="3" linestart="20" lineend="72" original="">
<cr namespace="llvm" access="none" kind="class" name="ARMSubtarget" id="27f7c847a850b67c5c819a497fa827e6_3177358262ca7f653e8cfe41aac6f52e" file="3" linestart="21" lineend="21" previous="8a4dfb8f808d7aebcc998eabb19142fd_3177358262ca7f653e8cfe41aac6f52e"/>
<cr namespace="llvm" access="none" kind="class" name="ScheduleHazardRecognizer" id="27f7c847a850b67c5c819a497fa827e6_73b724ff4b1b8d1992291a7c90302bef" file="3" linestart="22" lineend="22" previous="35dcc986b9fc41c6f521acfc055f8d35_73b724ff4b1b8d1992291a7c90302bef"/>
<cr namespace="llvm" access="none" depth="1" kind="class" name="Thumb2InstrInfo" id="27f7c847a850b67c5c819a497fa827e6_bc52d9695dd9f764a96338da7c0be0f7" file="3" linestart="24" lineend="64">
<base access="public">
<rt>
<cr id="b08ee5109a4d2aea3d861667cfd23aaf_9b505b831079eb1a273b49419189db5b"/>
</rt>
</base>
<cr access="public" kind="class" name="Thumb2InstrInfo" id="27f7c847a850b67c5c819a497fa827e6_1eb6626cbe5417bdf5ea5a7e2272546f" file="3" linestart="24" lineend="24"/>
<fl name="RI" id="27f7c847a850b67c5c819a497fa827e6_12c35f122e879bf2147c5f5989f20d30" file="3" linestart="25" lineend="25" access="private" proto="llvm::Thumb2RegisterInfo">
<rt>
<cr id="8a4dfb8f808d7aebcc998eabb19142fd_20afe2d1a94f60b98e373d42afb893ab"/>
</rt>
</fl>
<Decl access="public"/>
<c name="Thumb2InstrInfo" id="27f7c847a850b67c5c819a497fa827e6_c9087dcc6f330fa53e5d0dba05373ecd" file="3" linestart="27" lineend="27" explicit="true" access="public" hasbody="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="STI" proto="const llvm::ARMSubtarget &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="d83bca43e3c159dd5e5469a047faa0b0_3177358262ca7f653e8cfe41aac6f52e"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</c>
<m name="getNoopForMachoTarget" id="27f7c847a850b67c5c819a497fa827e6_b7342ee2508f39f53865dc83a4a1e9e9" file="3" linestart="30" lineend="30" access="public" hasbody="true">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="NopInst" proto="llvm::MCInst &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="b3d79b6498e401eea6fd4a0a2ff0b44a_4dc08c22fc67fa33e164b3e422ed7a5c"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<m name="getUnindexedOpcode" id="27f7c847a850b67c5c819a497fa827e6_a4727c3aa973a5c4ff4b949d5beb82ec" file="3" linestart="34" lineend="34" access="public" hasbody="true">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="Opc" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="ReplaceTailWithBranchTo" id="27f7c847a850b67c5c819a497fa827e6_0545293cef33aafad892d3a6859dbb5f" file="3" linestart="36" lineend="37" access="public" hasbody="true">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="Tail" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="NewDest" proto="llvm::MachineBasicBlock *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="isLegalToSplitMBBAt" id="27f7c847a850b67c5c819a497fa827e6_203ef4ec7912dc3820159507db20947a" file="3" linestart="39" lineend="40" access="public" hasbody="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MBBI" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
</m>
<m name="copyPhysReg" id="27f7c847a850b67c5c819a497fa827e6_f3d7e48948492bf7bc030ac8dc424ce9" file="3" linestart="42" lineend="45" access="public" hasbody="true">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="I" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="DL" proto="llvm::DebugLoc" access2="none">
<rt>
<cr id="6ca53e77501a21bf88631b761a2f74a6_fe60359165b1d6b25b6efa2b3701b70d"/>
</rt>
<Stmt>

</Stmt>
</p>
<p name="DestReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="SrcReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="KillSrc" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
</m>
<m name="storeRegToStackSlot" id="27f7c847a850b67c5c819a497fa827e6_4b5d29097432ca7ec34bd00b6f87d396" file="3" linestart="47" lineend="51" access="public" hasbody="true">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MBBI" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="SrcReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="isKill" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<p name="RC" proto="const llvm::TargetRegisterClass *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_e5ad748063c898b7dab27775bba1a499"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="TRI" proto="const llvm::TargetRegisterInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_2fd18b2e9f937d163d967e6f778ba659"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="loadRegFromStackSlot" id="27f7c847a850b67c5c819a497fa827e6_f0cc4dad363fe40f81e0da56d3fc043a" file="3" linestart="53" lineend="57" access="public" hasbody="true">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MBBI" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="DestReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="FrameIndex" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<p name="RC" proto="const llvm::TargetRegisterClass *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_e5ad748063c898b7dab27775bba1a499"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="TRI" proto="const llvm::TargetRegisterInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_2fd18b2e9f937d163d967e6f778ba659"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
</m>
<m name="getRegisterInfo" id="27f7c847a850b67c5c819a497fa827e6_b6dc9650ecb8f60c8f60002aa2a491e3" file="3" linestart="63" lineend="63" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="const llvm::Thumb2RegisterInfo &amp;">
<lrf>
<QualType const="true">
<rt>
<cr id="8a4dfb8f808d7aebcc998eabb19142fd_20afe2d1a94f60b98e373d42afb893ab"/>
</rt>
</QualType>
</lrf>
</fpt>
<Stmt>
<u lb="63" cb="62" le="63" ce="75">
<rx lb="63" cb="64" le="63" ce="71" pvirg="true">
<mex lb="63" cb="71" kind="lvalue" id="27f7c847a850b67c5c819a497fa827e6_12c35f122e879bf2147c5f5989f20d30" nm="RI" arrow="1">
<n19 lb="63" cb="71"/>
</mex>
</rx>
</u>

</Stmt>
</m>
<m name="operator=" id="27f7c847a850b67c5c819a497fa827e6_dd617bf7e3dd4aebb5813aab5d33ce47" file="3" linestart="24" implicit="true" operator="true" access="public" inline="true" isdef="true">
<fpt proto="llvm::Thumb2InstrInfo &amp;">
<lrf>
<rt>
<cr id="27f7c847a850b67c5c819a497fa827e6_bc52d9695dd9f764a96338da7c0be0f7"/>
</rt>
</lrf>
</fpt>
<p name="" proto="const llvm::Thumb2InstrInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="27f7c847a850b67c5c819a497fa827e6_bc52d9695dd9f764a96338da7c0be0f7"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<d name="~Thumb2InstrInfo" id="27f7c847a850b67c5c819a497fa827e6_85510882c1c15c876902a8d8501b86f8" file="3" linestart="24" lineend="24" implicit="true" access="public" inline="true">
<fpt proto="void">
<bt name="void"/>
<exception_specifiers nothrow="true"/>
</fpt>
</d>
<c name="Thumb2InstrInfo" id="27f7c847a850b67c5c819a497fa827e6_632e895756570aefa2c2e411976c48fb" file="3" linestart="24" lineend="24" copyconst="true" implicit="true" access="public" inline="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="const llvm::Thumb2InstrInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="27f7c847a850b67c5c819a497fa827e6_bc52d9695dd9f764a96338da7c0be0f7"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</c>
<c name="Thumb2InstrInfo" id="27f7c847a850b67c5c819a497fa827e6_0cf7fd194e6548f8039577ae4077c5e4" file="3" linestart="24" lineend="24" implicit="true" access="public" inline="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="llvm::Thumb2InstrInfo &amp;&amp;" isRef="true" isLiteral="true" access2="none">
<rrf>
<rt>
<cr id="27f7c847a850b67c5c819a497fa827e6_bc52d9695dd9f764a96338da7c0be0f7"/>
</rt>
</rrf>
<Stmt>

</Stmt>
</p>
</c>
</cr>
<f namespace="llvm" name="getITInstrPredicate" id="27f7c847a850b67c5c819a497fa827e6_cdca5924510437302d910176f3d3af57" file="3" linestart="69" lineend="69" access="none" hasbody="true">
<fpt proto="ARMCC::CondCodes">
<ety>
<et>
<e id="9ae88c1643aad111cfd208406cc6b04a_74e40ba9de52e62d66e8b5bb0bc8edd2"/>
</et>
</ety>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="PredReg" proto="unsigned int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="unsigned int"/>
</lrf>
<Stmt>

</Stmt>
</p>
</f>
</ns>
<NamedDecl name="&lt;using-directive&gt;" id="ccceff5fcaac90faf33d1f816a8d133b_6728b6b0f829183eb7bbd3d3d987c87d" file="1" linestart="25" lineend="25"/>
<v name="OldT2IfCvt" proto="cl::opt&lt;bool&gt;" id="ccceff5fcaac90faf33d1f816a8d133b_2a20b3e5bd5c2fe4c6c6ceaffdb8cb9a" file="1" linestart="27" lineend="30" storage="static" init="true" access2="none">
<ety>
<tss>
<templatebase id="8fc81b0a2dcd5b35a26a25e1b5d39036_c9bf7b6e3f4fc6a48ff30ddf07d50932"/>
<template_arguments>
<bt name="bool"/>
</template_arguments>
</tss>
</ety>
<Stmt>
<n10 lb="28" cb="1" le="30" ce="27">
<typeptr id="8fc81b0a2dcd5b35a26a25e1b5d39036_122424e62485748ea197e035e89422c4">
<template_arguments>
<bt name="bool"/>
<integer value="0"/>
<rt>
<cts id="8fc81b0a2dcd5b35a26a25e1b5d39036_a751ccbbc5743d753794c031d9d4ddac">
<template_arguments>
<bt name="bool"/>
</template_arguments>
</cts>
</rt>
</template_arguments>
</typeptr>
<temp/>
<n52 lb="28" cb="12">
<slit/>
</n52>
<mte lb="28" cb="32" le="28" ce="36">
<exp pvirg="true"/>
<drx lb="28" cb="32" le="28" ce="36" id="8fc81b0a2dcd5b35a26a25e1b5d39036_ebc6e7e374084e5cf055cea2105032a8" nm="Hidden"/>
</mte>
<mte lb="29" cb="12" le="29" ce="68">
<exp pvirg="true"/>
<n32 lb="29" cb="12" le="29" ce="68">
<n26 lb="29" cb="12" le="29" ce="68">
<n10 lb="29" cb="12" le="29" ce="21">
<typeptr id="8fc81b0a2dcd5b35a26a25e1b5d39036_b8a5dec72d1dadf41da5e57211f1fda6"/>
<temp/>
<n32 lb="29" cb="21">
<n52 lb="29" cb="21">
<slit/>
</n52>
</n32>
</n10>
</n26>
</n32>
</mte>
<mte lb="30" cb="12" le="30" ce="26">
<exp pvirg="true"/>
<n32 lb="30" cb="12" le="30" ce="26">
<ce lb="30" cb="12" le="30" ce="26" nbparm="1" id="8fc81b0a2dcd5b35a26a25e1b5d39036_f9ad8cda60b41a7bc49c55f81999a37b">
<exp pvirg="true"/>
<n32 lb="30" cb="12" le="30" ce="16">
<drx lb="30" cb="12" le="30" ce="16" kind="lvalue" id="8fc81b0a2dcd5b35a26a25e1b5d39036_f9ad8cda60b41a7bc49c55f81999a37b" nm="init">
<template_arguments>
<bt name="bool"/>
</template_arguments>
</drx>
</n32>
<mte lb="30" cb="21">
<exp pvirg="true"/>
<n9 lb="30" cb="21"/>
</mte>
</ce>
</n32>
</mte>
</n10>

</Stmt>
</v>
<c name="Thumb2InstrInfo" id="ccceff5fcaac90faf33d1f816a8d133b_c9087dcc6f330fa53e5d0dba05373ecd" file="1" linestart="32" lineend="34" previous="27f7c847a850b67c5c819a497fa827e6_c9087dcc6f330fa53e5d0dba05373ecd" explicit="true" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="STI" proto="const llvm::ARMSubtarget &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="d83bca43e3c159dd5e5469a047faa0b0_3177358262ca7f653e8cfe41aac6f52e"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<BaseInit>
<n10 lb="33" cb="5" le="33" ce="25">
<typeptr id="b08ee5109a4d2aea3d861667cfd23aaf_85fcc8be71b8458b24776179863b5269"/>
<temp/>
<drx lb="33" cb="22" kind="lvalue" nm="STI"/>
</n10>

</BaseInit>
<initlist id="27f7c847a850b67c5c819a497fa827e6_12c35f122e879bf2147c5f5989f20d30">
<Stmt>
<n10 lb="33" cb="28" le="33" ce="34">
<typeptr id="8a4dfb8f808d7aebcc998eabb19142fd_287b4a44cdd9ddd76375f2655b29937c"/>
<temp/>
<drx lb="33" cb="31" kind="lvalue" nm="STI"/>
</n10>

</Stmt>
</initlist>
<Stmt>
<u lb="33" cb="36" le="34" ce="1"/>

</Stmt>
</c>
<m name="getNoopForMachoTarget" id="ccceff5fcaac90faf33d1f816a8d133b_b7342ee2508f39f53865dc83a4a1e9e9" file="1" linestart="37" lineend="42" previous="27f7c847a850b67c5c819a497fa827e6_b7342ee2508f39f53865dc83a4a1e9e9" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="NopInst" proto="llvm::MCInst &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="b3d79b6498e401eea6fd4a0a2ff0b44a_4dc08c22fc67fa33e164b3e422ed7a5c"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="37" cb="68" le="42" ce="1">
<mce lb="39" cb="3" le="39" ce="45" nbparm="1" id="b3d79b6498e401eea6fd4a0a2ff0b44a_159801fbd000a5a9f157e28e89a4bb39">
<exp pvirg="true"/>
<mex lb="39" cb="3" le="39" ce="11" id="b3d79b6498e401eea6fd4a0a2ff0b44a_159801fbd000a5a9f157e28e89a4bb39" nm="addOperand" point="1">
<drx lb="39" cb="3" kind="lvalue" nm="NopInst"/>
</mex>
<mte lb="39" cb="22" le="39" ce="44">
<exp pvirg="true"/>
<n32 lb="39" cb="22" le="39" ce="44">
<ce lb="39" cb="22" le="39" ce="44" nbparm="1" id="b3d79b6498e401eea6fd4a0a2ff0b44a_187921ddee6b4b3abcdde4e536f24502">
<exp pvirg="true"/>
<n32 lb="39" cb="22" le="39" ce="33">
<drx lb="39" cb="22" le="39" ce="33" kind="lvalue" id="b3d79b6498e401eea6fd4a0a2ff0b44a_187921ddee6b4b3abcdde4e536f24502" nm="CreateImm"/>
</n32>
<n32 lb="39" cb="43">
<n45 lb="39" cb="43">
<flit/>
</n45>
</n32>
</ce>
</n32>
</mte>
</mce>
<mce lb="40" cb="3" le="40" ce="53" nbparm="1" id="b3d79b6498e401eea6fd4a0a2ff0b44a_159801fbd000a5a9f157e28e89a4bb39">
<exp pvirg="true"/>
<mex lb="40" cb="3" le="40" ce="11" id="b3d79b6498e401eea6fd4a0a2ff0b44a_159801fbd000a5a9f157e28e89a4bb39" nm="addOperand" point="1">
<drx lb="40" cb="3" kind="lvalue" nm="NopInst"/>
</mex>
<mte lb="40" cb="22" le="40" ce="52">
<exp pvirg="true"/>
<n32 lb="40" cb="22" le="40" ce="52">
<ce lb="40" cb="22" le="40" ce="52" nbparm="1" id="b3d79b6498e401eea6fd4a0a2ff0b44a_187921ddee6b4b3abcdde4e536f24502">
<exp pvirg="true"/>
<n32 lb="40" cb="22" le="40" ce="33">
<drx lb="40" cb="22" le="40" ce="33" kind="lvalue" id="b3d79b6498e401eea6fd4a0a2ff0b44a_187921ddee6b4b3abcdde4e536f24502" nm="CreateImm"/>
</n32>
<n32 lb="40" cb="43" le="40" ce="50">
<drx lb="40" cb="43" le="40" ce="50" id="9ae88c1643aad111cfd208406cc6b04a_95d57aab21688da23b51c587865180c9" nm="AL"/>
</n32>
</ce>
</n32>
</mte>
</mce>
<mce lb="41" cb="3" le="41" ce="45" nbparm="1" id="b3d79b6498e401eea6fd4a0a2ff0b44a_159801fbd000a5a9f157e28e89a4bb39">
<exp pvirg="true"/>
<mex lb="41" cb="3" le="41" ce="11" id="b3d79b6498e401eea6fd4a0a2ff0b44a_159801fbd000a5a9f157e28e89a4bb39" nm="addOperand" point="1">
<drx lb="41" cb="3" kind="lvalue" nm="NopInst"/>
</mex>
<mte lb="41" cb="22" le="41" ce="44">
<exp pvirg="true"/>
<n32 lb="41" cb="22" le="41" ce="44">
<ce lb="41" cb="22" le="41" ce="44" nbparm="1" id="b3d79b6498e401eea6fd4a0a2ff0b44a_c82ca001577182339e7d39a70306bfcc">
<exp pvirg="true"/>
<n32 lb="41" cb="22" le="41" ce="33">
<drx lb="41" cb="22" le="41" ce="33" kind="lvalue" id="b3d79b6498e401eea6fd4a0a2ff0b44a_c82ca001577182339e7d39a70306bfcc" nm="CreateReg"/>
</n32>
<n32 lb="41" cb="43">
<n45 lb="41" cb="43"/>
</n32>
</ce>
</n32>
</mte>
</mce>
</u>

</Stmt>
</m>
<m name="getUnindexedOpcode" id="ccceff5fcaac90faf33d1f816a8d133b_a4727c3aa973a5c4ff4b949d5beb82ec" file="1" linestart="44" lineend="47" previous="27f7c847a850b67c5c819a497fa827e6_a4727c3aa973a5c4ff4b949d5beb82ec" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="Opc" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="44" cb="66" le="47" ce="1">
<rx lb="46" cb="3" le="46" ce="10" pvirg="true">
<n32 lb="46" cb="10">
<n45 lb="46" cb="10">
<flit/>
</n45>
</n32>
</rx>
</u>

</Stmt>
</m>
<m name="ReplaceTailWithBranchTo" id="ccceff5fcaac90faf33d1f816a8d133b_0545293cef33aafad892d3a6859dbb5f" file="1" linestart="49" lineend="98" previous="27f7c847a850b67c5c819a497fa827e6_0545293cef33aafad892d3a6859dbb5f" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="Tail" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="NewDest" proto="llvm::MachineBasicBlock *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="51" cb="76" le="98" ce="1">
<dst lb="52" cb="3" le="52" ce="45">
<exp pvirg="true"/>
<Var nm="MBB">
<pt>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</pt>
<mce lb="52" cb="28" le="52" ce="44" nbparm="0" id="d038367435b7928d04997491e912d58d_791f27289e8d2d327c65368df68674e1">
<exp pvirg="true"/>
<mex lb="52" cb="28" le="52" ce="34" id="d038367435b7928d04997491e912d58d_791f27289e8d2d327c65368df68674e1" nm="getParent" arrow="1">
<ocx lb="52" cb="28" nbparm="1" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05">
<exp pvirg="true"/>
<n32 lb="52" cb="32">
<drx lb="52" cb="32" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05" nm="operator-&gt;"/>
</n32>
<n32 lb="52" cb="28">
<drx lb="52" cb="28" kind="lvalue" nm="Tail"/>
</n32>
</ocx>
</mex>
</mce>
</Var>
</dst>
<dst lb="53" cb="3" le="53" ce="70">
<exp pvirg="true"/>
<Var nm="AFI">
<pt>
<rt>
<cr id="0fe8df150926ad1368e81cc4398d701c_bb80360c9e613b66fa32167b667f2182"/>
</rt>
</pt>
<mce lb="53" cb="26" le="53" ce="69" nbparm="0" id="895a66b41661e915ba6854da2359580f_8c86cf707981cbc0a7801820da987e6d">
<exp pvirg="true"/>
<mex lb="53" cb="26" le="53" ce="67" id="895a66b41661e915ba6854da2359580f_8c86cf707981cbc0a7801820da987e6d" nm="getInfo" arrow="1">
<mce lb="53" cb="26" le="53" ce="41" nbparm="0" id="dc2fe1ce3eab105adc926f5848f1baa6_cff8bb6caa2f342b83a06d5c2b1984ee">
<exp pvirg="true"/>
<mex lb="53" cb="26" le="53" ce="31" id="dc2fe1ce3eab105adc926f5848f1baa6_cff8bb6caa2f342b83a06d5c2b1984ee" nm="getParent" arrow="1">
<n32 lb="53" cb="26">
<drx lb="53" cb="26" kind="lvalue" nm="MBB"/>
</n32>
</mex>
</mce>
</mex>
</mce>
</Var>
</dst>
<if lb="54" cb="3" le="57" ce="3">
<uo lb="54" cb="7" le="54" ce="25" kind="!">
<mce lb="54" cb="8" le="54" ce="25" nbparm="0" id="0fe8df150926ad1368e81cc4398d701c_f43e49b4979ef190006dd95982e81147">
<exp pvirg="true"/>
<mex lb="54" cb="8" le="54" ce="13" id="0fe8df150926ad1368e81cc4398d701c_f43e49b4979ef190006dd95982e81147" nm="hasITBlocks" arrow="1">
<n32 lb="54" cb="8">
<n32 lb="54" cb="8">
<drx lb="54" cb="8" kind="lvalue" nm="AFI"/>
</n32>
</n32>
</mex>
</mce>
</uo>
<u lb="54" cb="28" le="57" ce="3">
<rx lb="56" cb="5" pvirg="true"/>
</u>
</if>
<dst lb="61" cb="3" le="61" ce="23">
<exp pvirg="true"/>
<Var nm="PredReg" value="true">
<bt name="unsigned int"/>
<n32 lb="61" cb="22">
<n45 lb="61" cb="22">
<flit/>
</n45>
</n32>
</Var>
</dst>
<dst lb="62" cb="3" le="62" ce="57">
<exp pvirg="true"/>
<Var nm="CC" value="true">
<ety>
<et>
<e id="9ae88c1643aad111cfd208406cc6b04a_74e40ba9de52e62d66e8b5bb0bc8edd2"/>
</et>
</ety>
<ce lb="62" cb="25" le="62" ce="56" nbparm="2" id="b08ee5109a4d2aea3d861667cfd23aaf_efd737dd346494c2c244fb0efd62d2bd">
<exp pvirg="true"/>
<n32 lb="62" cb="25">
<drx lb="62" cb="25" kind="lvalue" id="b08ee5109a4d2aea3d861667cfd23aaf_efd737dd346494c2c244fb0efd62d2bd" nm="getInstrPredicate"/>
</n32>
<n32 lb="62" cb="43">
<n32 lb="62" cb="43">
<mce lb="62" cb="43" nbparm="0" id="dc2fe1ce3eab105adc926f5848f1baa6_8e98dfd7f11121b05c4487bcb5f76d78">
<exp pvirg="true"/>
<mex lb="62" cb="43" id="dc2fe1ce3eab105adc926f5848f1baa6_8e98dfd7f11121b05c4487bcb5f76d78" nm="operator class llvm::MachineInstr *" point="1">
<n32 lb="62" cb="43">
<drx lb="62" cb="43" kind="lvalue" nm="Tail"/>
</n32>
</mex>
</mce>
</n32>
</n32>
<drx lb="62" cb="49" kind="lvalue" nm="PredReg"/>
</ce>
</Var>
</dst>
<dst lb="63" cb="3" le="63" ce="42">
<exp pvirg="true"/>
<Var nm="MBBI" value="true">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<n10 lb="63" cb="38">
<typeptr id="dc2fe1ce3eab105adc926f5848f1baa6_dd1eea613f7664c83f6c41f4f5e691ed">
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<rt>
<cts id="cf80d347400835f00b932d17946e2cd9_d2bacc8281a77e8dba37cb711d99aa30">
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</template_arguments>
</cts>
</rt>
</template_arguments>
</typeptr>
<temp/>
<n32 lb="63" cb="38">
<drx lb="63" cb="38" kind="lvalue" nm="Tail"/>
</n32>
</n10>
</Var>
</dst>
<if lb="64" cb="3" le="66" ce="7">
<xop lb="64" cb="7" le="64" ce="20" kind="!=">
<n32 lb="64" cb="7">
<n32 lb="64" cb="7">
<drx lb="64" cb="7" kind="lvalue" nm="CC"/>
</n32>
</n32>
<n32 lb="64" cb="13" le="64" ce="20">
<drx lb="64" cb="13" le="64" ce="20" id="9ae88c1643aad111cfd208406cc6b04a_95d57aab21688da23b51c587865180c9" nm="AL"/>
</n32>
</xop>
<ocx lb="66" cb="5" le="66" ce="7" nbparm="1" id="dc2fe1ce3eab105adc926f5848f1baa6_dbfb0d8a3eb1d9c2245bc755903101b9">
<exp pvirg="true"/>
<n32 lb="66" cb="5">
<drx lb="66" cb="5" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_dbfb0d8a3eb1d9c2245bc755903101b9" nm="operator--"/>
</n32>
<drx lb="66" cb="7" kind="lvalue" nm="MBBI"/>
</ocx>
</if>
<if lb="72" cb="3" le="97" ce="3">
<xop lb="72" cb="7" le="72" ce="20" kind="!=">
<n32 lb="72" cb="7">
<n32 lb="72" cb="7">
<drx lb="72" cb="7" kind="lvalue" nm="CC"/>
</n32>
</n32>
<n32 lb="72" cb="13" le="72" ce="20">
<drx lb="72" cb="13" le="72" ce="20" id="9ae88c1643aad111cfd208406cc6b04a_95d57aab21688da23b51c587865180c9" nm="AL"/>
</n32>
</xop>
<u lb="72" cb="24" le="97" ce="3">
<dst lb="73" cb="5" le="73" ce="49">
<exp pvirg="true"/>
<Var nm="E" value="true">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<n10 lb="73" cb="37" le="73" ce="48">
<typeptr id="dc2fe1ce3eab105adc926f5848f1baa6_3a1fa061e876049d3ea596c838bb8d10">
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<rt>
<cts id="cf80d347400835f00b932d17946e2cd9_d2bacc8281a77e8dba37cb711d99aa30">
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</template_arguments>
</cts>
</rt>
</template_arguments>
</typeptr>
<temp/>
<mte lb="73" cb="37" le="73" ce="48">
<exp pvirg="true"/>
<mce lb="73" cb="37" le="73" ce="48" nbparm="0" id="dc2fe1ce3eab105adc926f5848f1baa6_458379505cbdf842e6107cf26b7df806">
<exp pvirg="true"/>
<mex lb="73" cb="37" le="73" ce="42" id="dc2fe1ce3eab105adc926f5848f1baa6_458379505cbdf842e6107cf26b7df806" nm="begin" arrow="1">
<n32 lb="73" cb="37">
<drx lb="73" cb="37" kind="lvalue" nm="MBB"/>
</n32>
</mex>
</mce>
</mte>
</n10>
</Var>
</dst>
<dst lb="74" cb="5" le="74" ce="23">
<exp pvirg="true"/>
<Var nm="Count" value="true">
<bt name="unsigned int"/>
<n32 lb="74" cb="22">
<n45 lb="74" cb="22">
<flit/>
</n45>
</n32>
</Var>
</dst>
<wy lb="75" cb="5" le="93" ce="5">
<xop lb="75" cb="12" le="75" ce="29" kind="&amp;&amp;">
<n32 lb="75" cb="12">
<n32 lb="75" cb="12">
<drx lb="75" cb="12" kind="lvalue" nm="Count"/>
</n32>
</n32>
<ocx lb="75" cb="21" le="75" ce="29" nbparm="2" id="dc2fe1ce3eab105adc926f5848f1baa6_dca4f45bc293a54836cf9803ebd886b3">
<exp pvirg="true"/>
<n32 lb="75" cb="26">
<drx lb="75" cb="26" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_dca4f45bc293a54836cf9803ebd886b3" nm="operator!="/>
</n32>
<n32 lb="75" cb="21">
<drx lb="75" cb="21" kind="lvalue" nm="MBBI"/>
</n32>
<n32 lb="75" cb="29">
<drx lb="75" cb="29" kind="lvalue" nm="E"/>
</n32>
</ocx>
</xop>
<u lb="75" cb="32" le="93" ce="5">
<if lb="76" cb="7" le="79" ce="7">
<mce lb="76" cb="11" le="76" ce="30" nbparm="0" id="d038367435b7928d04997491e912d58d_fddca743aa103bca4b1ea77dd154fe69">
<exp pvirg="true"/>
<mex lb="76" cb="11" le="76" ce="17" id="d038367435b7928d04997491e912d58d_fddca743aa103bca4b1ea77dd154fe69" nm="isDebugValue" arrow="1">
<n32 lb="76" cb="11">
<ocx lb="76" cb="11" nbparm="1" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05">
<exp pvirg="true"/>
<n32 lb="76" cb="15">
<drx lb="76" cb="15" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05" nm="operator-&gt;"/>
</n32>
<n32 lb="76" cb="11">
<drx lb="76" cb="11" kind="lvalue" nm="MBBI"/>
</n32>
</ocx>
</n32>
</mex>
</mce>
<u lb="76" cb="33" le="79" ce="7">
<ocx lb="77" cb="9" le="77" ce="11" nbparm="1" id="dc2fe1ce3eab105adc926f5848f1baa6_dbfb0d8a3eb1d9c2245bc755903101b9">
<exp pvirg="true"/>
<n32 lb="77" cb="9">
<drx lb="77" cb="9" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_dbfb0d8a3eb1d9c2245bc755903101b9" nm="operator--"/>
</n32>
<drx lb="77" cb="11" kind="lvalue" nm="MBBI"/>
</ocx>
<cns lb="78" cb="9"/>
</u>
</if>
<ocx lb="91" cb="7" le="91" ce="9" nbparm="1" id="dc2fe1ce3eab105adc926f5848f1baa6_dbfb0d8a3eb1d9c2245bc755903101b9">
<exp pvirg="true"/>
<n32 lb="91" cb="7">
<drx lb="91" cb="7" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_dbfb0d8a3eb1d9c2245bc755903101b9" nm="operator--"/>
</n32>
<drx lb="91" cb="9" kind="lvalue" nm="MBBI"/>
</ocx>
<uo lb="92" cb="7" le="92" ce="9" kind="--">
<drx lb="92" cb="9" kind="lvalue" nm="Count"/>
</uo>
</u>
</wy>
</u>
</if>
</u>

</Stmt>
</m>
<m name="isLegalToSplitMBBAt" id="ccceff5fcaac90faf33d1f816a8d133b_203ef4ec7912dc3820159507db20947a" file="1" linestart="100" lineend="111" previous="27f7c847a850b67c5c819a497fa827e6_203ef4ec7912dc3820159507db20947a" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="bool">
<bt name="bool"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MBBI" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="102" cb="78" le="111" ce="1">
<wy lb="103" cb="3" le="107" ce="3">
<mce lb="103" cb="10" le="103" ce="29" nbparm="0" id="d038367435b7928d04997491e912d58d_fddca743aa103bca4b1ea77dd154fe69">
<exp pvirg="true"/>
<mex lb="103" cb="10" le="103" ce="16" id="d038367435b7928d04997491e912d58d_fddca743aa103bca4b1ea77dd154fe69" nm="isDebugValue" arrow="1">
<n32 lb="103" cb="10">
<ocx lb="103" cb="10" nbparm="1" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05">
<exp pvirg="true"/>
<n32 lb="103" cb="14">
<drx lb="103" cb="14" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05" nm="operator-&gt;"/>
</n32>
<n32 lb="103" cb="10">
<drx lb="103" cb="10" kind="lvalue" nm="MBBI"/>
</n32>
</ocx>
</n32>
</mex>
</mce>
<u lb="103" cb="32" le="107" ce="3">
<ocx lb="104" cb="5" le="104" ce="7" nbparm="1" id="dc2fe1ce3eab105adc926f5848f1baa6_b95e9a20d265b3feef9e4547ff0b7a5c">
<exp pvirg="true"/>
<n32 lb="104" cb="5">
<drx lb="104" cb="5" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_b95e9a20d265b3feef9e4547ff0b7a5c" nm="operator++"/>
</n32>
<drx lb="104" cb="7" kind="lvalue" nm="MBBI"/>
</ocx>
<if lb="105" cb="5" le="106" ce="14">
<ocx lb="105" cb="9" le="105" ce="25" nbparm="2" id="dc2fe1ce3eab105adc926f5848f1baa6_730bb1d7cfb8affca7f5654039e13d6e">
<exp pvirg="true"/>
<n32 lb="105" cb="14">
<drx lb="105" cb="14" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_730bb1d7cfb8affca7f5654039e13d6e" nm="operator=="/>
</n32>
<n32 lb="105" cb="9">
<drx lb="105" cb="9" kind="lvalue" nm="MBBI"/>
</n32>
<mte lb="105" cb="17" le="105" ce="25">
<exp pvirg="true"/>
<n32 lb="105" cb="17" le="105" ce="25">
<mce lb="105" cb="17" le="105" ce="25" nbparm="0" id="dc2fe1ce3eab105adc926f5848f1baa6_0c702456f42428d8ed338d91569d3241">
<exp pvirg="true"/>
<mex lb="105" cb="17" le="105" ce="21" id="dc2fe1ce3eab105adc926f5848f1baa6_0c702456f42428d8ed338d91569d3241" nm="end" point="1">
<drx lb="105" cb="17" kind="lvalue" nm="MBB"/>
</mex>
</mce>
</n32>
</mte>
</ocx>
<rx lb="106" cb="7" le="106" ce="14" pvirg="true">
<n9 lb="106" cb="14"/>
</rx>
</if>
</u>
</wy>
<dst lb="109" cb="3" le="109" ce="23">
<exp pvirg="true"/>
<Var nm="PredReg" value="true">
<bt name="unsigned int"/>
<n32 lb="109" cb="22">
<n45 lb="109" cb="22">
<flit/>
</n45>
</n32>
</Var>
</dst>
<rx lb="110" cb="3" le="110" ce="55" pvirg="true">
<xop lb="110" cb="10" le="110" ce="55" kind="==">
<n32 lb="110" cb="10" le="110" ce="43">
<ce lb="110" cb="10" le="110" ce="43" nbparm="2" id="27f7c847a850b67c5c819a497fa827e6_cdca5924510437302d910176f3d3af57">
<exp pvirg="true"/>
<n32 lb="110" cb="10">
<drx lb="110" cb="10" kind="lvalue" id="27f7c847a850b67c5c819a497fa827e6_cdca5924510437302d910176f3d3af57" nm="getITInstrPredicate"/>
</n32>
<n32 lb="110" cb="30">
<n32 lb="110" cb="30">
<mce lb="110" cb="30" nbparm="0" id="dc2fe1ce3eab105adc926f5848f1baa6_8e98dfd7f11121b05c4487bcb5f76d78">
<exp pvirg="true"/>
<mex lb="110" cb="30" id="dc2fe1ce3eab105adc926f5848f1baa6_8e98dfd7f11121b05c4487bcb5f76d78" nm="operator class llvm::MachineInstr *" point="1">
<n32 lb="110" cb="30">
<drx lb="110" cb="30" kind="lvalue" nm="MBBI"/>
</n32>
</mex>
</mce>
</n32>
</n32>
<drx lb="110" cb="36" kind="lvalue" nm="PredReg"/>
</ce>
</n32>
<n32 lb="110" cb="48" le="110" ce="55">
<drx lb="110" cb="48" le="110" ce="55" id="9ae88c1643aad111cfd208406cc6b04a_95d57aab21688da23b51c587865180c9" nm="AL"/>
</n32>
</xop>
</rx>
</u>

</Stmt>
</m>
<m name="copyPhysReg" id="ccceff5fcaac90faf33d1f816a8d133b_f3d7e48948492bf7bc030ac8dc424ce9" file="1" linestart="113" lineend="123" previous="27f7c847a850b67c5c819a497fa827e6_f3d7e48948492bf7bc030ac8dc424ce9" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="I" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="DL" proto="llvm::DebugLoc" access2="none">
<rt>
<cr id="6ca53e77501a21bf88631b761a2f74a6_fe60359165b1d6b25b6efa2b3701b70d"/>
</rt>
<Stmt>

</Stmt>
</p>
<p name="DestReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="SrcReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="KillSrc" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="116" cb="55" le="123" ce="1"/>

</Stmt>
</m>
<m name="storeRegToStackSlot" id="ccceff5fcaac90faf33d1f816a8d133b_4b5d29097432ca7ec34bd00b6f87d396" file="1" linestart="125" lineend="166" previous="27f7c847a850b67c5c819a497fa827e6_4b5d29097432ca7ec34bd00b6f87d396" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="I" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="SrcReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="isKill" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
<p name="FI" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<p name="RC" proto="const llvm::TargetRegisterClass *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_e5ad748063c898b7dab27775bba1a499"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="TRI" proto="const llvm::TargetRegisterInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_2fd18b2e9f937d163d967e6f778ba659"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="129" cb="58" le="166" ce="1">
<dst lb="130" cb="3" le="130" ce="14">
<exp pvirg="true"/>
<Var nm="DL" value="true">
<rt>
<cr id="6ca53e77501a21bf88631b761a2f74a6_fe60359165b1d6b25b6efa2b3701b70d"/>
</rt>
<n10 lb="130" cb="12">
<typeptr id="6ca53e77501a21bf88631b761a2f74a6_58ce885e08015959aac30905be9a2071"/>
<temp/>
</n10>
</Var>
</dst>
<if lb="131" cb="3" le="131" ce="43">
<ocx lb="131" cb="7" le="131" ce="20" nbparm="2" id="dc2fe1ce3eab105adc926f5848f1baa6_dca4f45bc293a54836cf9803ebd886b3">
<exp pvirg="true"/>
<n32 lb="131" cb="9">
<drx lb="131" cb="9" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_dca4f45bc293a54836cf9803ebd886b3" nm="operator!="/>
</n32>
<n32 lb="131" cb="7">
<drx lb="131" cb="7" kind="lvalue" nm="I"/>
</n32>
<mte lb="131" cb="12" le="131" ce="20">
<exp pvirg="true"/>
<n32 lb="131" cb="12" le="131" ce="20">
<mce lb="131" cb="12" le="131" ce="20" nbparm="0" id="dc2fe1ce3eab105adc926f5848f1baa6_0c702456f42428d8ed338d91569d3241">
<exp pvirg="true"/>
<mex lb="131" cb="12" le="131" ce="16" id="dc2fe1ce3eab105adc926f5848f1baa6_0c702456f42428d8ed338d91569d3241" nm="end" point="1">
<drx lb="131" cb="12" kind="lvalue" nm="MBB"/>
</mex>
</mce>
</n32>
</mte>
</ocx>
<ocx lb="131" cb="23" le="131" ce="43" nbparm="2" id="6ca53e77501a21bf88631b761a2f74a6_bff2e9cbceaf5c722741e8e20b4cefbb">
<exp pvirg="true"/>
<n32 lb="131" cb="26">
<drx lb="131" cb="26" kind="lvalue" id="6ca53e77501a21bf88631b761a2f74a6_bff2e9cbceaf5c722741e8e20b4cefbb" nm="operator="/>
</n32>
<drx lb="131" cb="23" kind="lvalue" nm="DL"/>
<mte lb="131" cb="28" le="131" ce="43">
<exp pvirg="true"/>
<mce lb="131" cb="28" le="131" ce="43" nbparm="0" id="d038367435b7928d04997491e912d58d_15826f3d175844558c17e91a25be7a7a">
<exp pvirg="true"/>
<mex lb="131" cb="28" le="131" ce="31" id="d038367435b7928d04997491e912d58d_15826f3d175844558c17e91a25be7a7a" nm="getDebugLoc" arrow="1">
<n32 lb="131" cb="28">
<ocx lb="131" cb="28" nbparm="1" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05">
<exp pvirg="true"/>
<n32 lb="131" cb="29">
<drx lb="131" cb="29" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05" nm="operator-&gt;"/>
</n32>
<n32 lb="131" cb="28">
<drx lb="131" cb="28" kind="lvalue" nm="I"/>
</n32>
</ocx>
</n32>
</mex>
</mce>
</mte>
</ocx>
</if>
<dst lb="133" cb="3" le="133" ce="41">
<exp pvirg="true"/>
<Var nm="MF">
<lrf>
<rt>
<cr id="895a66b41661e915ba6854da2359580f_7a76e175133a980deee19d81d954fcc0"/>
</rt>
</lrf>
<uo lb="133" cb="25" le="133" ce="40" kind="*">
<mce lb="133" cb="26" le="133" ce="40" nbparm="0" id="dc2fe1ce3eab105adc926f5848f1baa6_cff8bb6caa2f342b83a06d5c2b1984ee">
<exp pvirg="true"/>
<mex lb="133" cb="26" le="133" ce="30" id="dc2fe1ce3eab105adc926f5848f1baa6_cff8bb6caa2f342b83a06d5c2b1984ee" nm="getParent" point="1">
<drx lb="133" cb="26" kind="lvalue" nm="MBB"/>
</mex>
</mce>
</uo>
</Var>
</dst>
<dst lb="134" cb="3" le="134" ce="45">
<exp pvirg="true"/>
<Var nm="MFI">
<lrf>
<rt>
<cr id="57744cd473803f8e5c9b2de4877592a5_9ff4d9986e55746edc7a8fdf17bdb023"/>
</rt>
</lrf>
<uo lb="134" cb="27" le="134" ce="44" kind="*">
<mce lb="134" cb="28" le="134" ce="44" nbparm="0" id="895a66b41661e915ba6854da2359580f_05918491ab64feb991b242aec4fb1ce5">
<exp pvirg="true"/>
<mex lb="134" cb="28" le="134" ce="31" id="895a66b41661e915ba6854da2359580f_05918491ab64feb991b242aec4fb1ce5" nm="getFrameInfo" point="1">
<drx lb="134" cb="28" kind="lvalue" nm="MF"/>
</mex>
</mce>
</uo>
</Var>
</dst>
<dst lb="135" cb="3" le="139" ce="56">
<exp pvirg="true"/>
<Var nm="MMO">
<pt>
<rt>
<cr id="365e40649a6358896d82d795b1389064_23b023a6f010a76d0665a045d8701626"/>
</rt>
</pt>
<mce lb="136" cb="5" le="139" ce="55" nbparm="6" id="895a66b41661e915ba6854da2359580f_6fcbf8cdb75d36a7e4d6c525e6160c64">
<exp pvirg="true"/>
<mex lb="136" cb="5" le="136" ce="8" id="895a66b41661e915ba6854da2359580f_6fcbf8cdb75d36a7e4d6c525e6160c64" nm="getMachineMemOperand" point="1">
<drx lb="136" cb="5" kind="lvalue" nm="MF"/>
</mex>
<n10 lb="136" cb="29" le="136" ce="65">
<typeptr id="365e40649a6358896d82d795b1389064_4a105e234fbc7a7ea00b6495f9cceb81"/>
<temp/>
<mte lb="136" cb="29" le="136" ce="65">
<exp pvirg="true"/>
<ce lb="136" cb="29" le="136" ce="65" nbparm="2" id="365e40649a6358896d82d795b1389064_a813865c61bfb5fc56ebde457fece42e">
<exp pvirg="true"/>
<n32 lb="136" cb="29" le="136" ce="49">
<drx lb="136" cb="29" le="136" ce="49" kind="lvalue" id="365e40649a6358896d82d795b1389064_a813865c61bfb5fc56ebde457fece42e" nm="getFixedStack"/>
</n32>
<n32 lb="136" cb="63">
<drx lb="136" cb="63" kind="lvalue" nm="FI"/>
</n32>
<n12>
<exp pvirg="true"/>
</n12>
</ce>
</mte>
</n10>
<n32 lb="137" cb="29" le="137" ce="48">
<drx lb="137" cb="29" le="137" ce="48" id="365e40649a6358896d82d795b1389064_f29cc3aca677d008a1ff063505ee6438" nm="MOStore"/>
</n32>
<n32 lb="138" cb="29" le="138" ce="49">
<mce lb="138" cb="29" le="138" ce="49" nbparm="1" id="57744cd473803f8e5c9b2de4877592a5_48848b9e7b03c9323807a5977e1eb512">
<exp pvirg="true"/>
<mex lb="138" cb="29" le="138" ce="33" id="57744cd473803f8e5c9b2de4877592a5_48848b9e7b03c9323807a5977e1eb512" nm="getObjectSize" point="1">
<n32 lb="138" cb="29">
<drx lb="138" cb="29" kind="lvalue" nm="MFI"/>
</n32>
</mex>
<n32 lb="138" cb="47">
<drx lb="138" cb="47" kind="lvalue" nm="FI"/>
</n32>
</mce>
</n32>
<mce lb="139" cb="29" le="139" ce="54" nbparm="1" id="57744cd473803f8e5c9b2de4877592a5_853887d0ccf9f86fb432f6e9b1d12b66">
<exp pvirg="true"/>
<mex lb="139" cb="29" le="139" ce="33" id="57744cd473803f8e5c9b2de4877592a5_853887d0ccf9f86fb432f6e9b1d12b66" nm="getObjectAlignment" point="1">
<n32 lb="139" cb="29">
<drx lb="139" cb="29" kind="lvalue" nm="MFI"/>
</n32>
</mex>
<n32 lb="139" cb="52">
<drx lb="139" cb="52" kind="lvalue" nm="FI"/>
</n32>
</mce>
<n12>
<exp pvirg="true"/>
</n12>
<n12>
<exp pvirg="true"/>
</n12>
</mce>
</Var>
</dst>
<mce lb="165" cb="3" le="165" ce="76" nbparm="7" id="b08ee5109a4d2aea3d861667cfd23aaf_f6b65f8fad4cbe8dc56b47c048c6481b">
<exp pvirg="true"/>
<mex lb="165" cb="3" le="165" ce="21" id="b08ee5109a4d2aea3d861667cfd23aaf_f6b65f8fad4cbe8dc56b47c048c6481b" nm="storeRegToStackSlot" arrow="1">
<n32 lb="165" cb="21">
<n32 lb="165" cb="21">
<n19 lb="165" cb="21"/>
</n32>
</n32>
</mex>
<drx lb="165" cb="41" kind="lvalue" nm="MBB"/>
<n10 lb="165" cb="46">
<typeptr id="dc2fe1ce3eab105adc926f5848f1baa6_dd1eea613f7664c83f6c41f4f5e691ed">
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<rt>
<cts id="cf80d347400835f00b932d17946e2cd9_d2bacc8281a77e8dba37cb711d99aa30">
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</template_arguments>
</cts>
</rt>
</template_arguments>
</typeptr>
<temp/>
<n32 lb="165" cb="46">
<drx lb="165" cb="46" kind="lvalue" nm="I"/>
</n32>
</n10>
<n32 lb="165" cb="49">
<drx lb="165" cb="49" kind="lvalue" nm="SrcReg"/>
</n32>
<n32 lb="165" cb="57">
<drx lb="165" cb="57" kind="lvalue" nm="isKill"/>
</n32>
<n32 lb="165" cb="65">
<drx lb="165" cb="65" kind="lvalue" nm="FI"/>
</n32>
<n32 lb="165" cb="69">
<drx lb="165" cb="69" kind="lvalue" nm="RC"/>
</n32>
<n32 lb="165" cb="73">
<drx lb="165" cb="73" kind="lvalue" nm="TRI"/>
</n32>
</mce>
</u>

</Stmt>
</m>
<m name="loadRegFromStackSlot" id="ccceff5fcaac90faf33d1f816a8d133b_f0cc4dad363fe40f81e0da56d3fc043a" file="1" linestart="168" lineend="210" previous="27f7c847a850b67c5c819a497fa827e6_f0cc4dad363fe40f81e0da56d3fc043a" access="public" hasbody="true" isdef="true">
<fpt const="true" proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="I" proto="MachineBasicBlock::iterator" access2="none">
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
<Stmt>

</Stmt>
</p>
<p name="DestReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="FI" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<p name="RC" proto="const llvm::TargetRegisterClass *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_e5ad748063c898b7dab27775bba1a499"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="TRI" proto="const llvm::TargetRegisterInfo *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="59642fb74cf5b58f433a7bdcb6c661d2_2fd18b2e9f937d163d967e6f778ba659"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="172" cb="59" le="210" ce="1">
<dst lb="173" cb="3" le="173" ce="41">
<exp pvirg="true"/>
<Var nm="MF">
<lrf>
<rt>
<cr id="895a66b41661e915ba6854da2359580f_7a76e175133a980deee19d81d954fcc0"/>
</rt>
</lrf>
<uo lb="173" cb="25" le="173" ce="40" kind="*">
<mce lb="173" cb="26" le="173" ce="40" nbparm="0" id="dc2fe1ce3eab105adc926f5848f1baa6_cff8bb6caa2f342b83a06d5c2b1984ee">
<exp pvirg="true"/>
<mex lb="173" cb="26" le="173" ce="30" id="dc2fe1ce3eab105adc926f5848f1baa6_cff8bb6caa2f342b83a06d5c2b1984ee" nm="getParent" point="1">
<drx lb="173" cb="26" kind="lvalue" nm="MBB"/>
</mex>
</mce>
</uo>
</Var>
</dst>
<dst lb="174" cb="3" le="174" ce="45">
<exp pvirg="true"/>
<Var nm="MFI">
<lrf>
<rt>
<cr id="57744cd473803f8e5c9b2de4877592a5_9ff4d9986e55746edc7a8fdf17bdb023"/>
</rt>
</lrf>
<uo lb="174" cb="27" le="174" ce="44" kind="*">
<mce lb="174" cb="28" le="174" ce="44" nbparm="0" id="895a66b41661e915ba6854da2359580f_05918491ab64feb991b242aec4fb1ce5">
<exp pvirg="true"/>
<mex lb="174" cb="28" le="174" ce="31" id="895a66b41661e915ba6854da2359580f_05918491ab64feb991b242aec4fb1ce5" nm="getFrameInfo" point="1">
<drx lb="174" cb="28" kind="lvalue" nm="MF"/>
</mex>
</mce>
</uo>
</Var>
</dst>
<dst lb="175" cb="3" le="179" ce="56">
<exp pvirg="true"/>
<Var nm="MMO">
<pt>
<rt>
<cr id="365e40649a6358896d82d795b1389064_23b023a6f010a76d0665a045d8701626"/>
</rt>
</pt>
<mce lb="176" cb="5" le="179" ce="55" nbparm="6" id="895a66b41661e915ba6854da2359580f_6fcbf8cdb75d36a7e4d6c525e6160c64">
<exp pvirg="true"/>
<mex lb="176" cb="5" le="176" ce="8" id="895a66b41661e915ba6854da2359580f_6fcbf8cdb75d36a7e4d6c525e6160c64" nm="getMachineMemOperand" point="1">
<drx lb="176" cb="5" kind="lvalue" nm="MF"/>
</mex>
<n10 lb="176" cb="29" le="176" ce="65">
<typeptr id="365e40649a6358896d82d795b1389064_4a105e234fbc7a7ea00b6495f9cceb81"/>
<temp/>
<mte lb="176" cb="29" le="176" ce="65">
<exp pvirg="true"/>
<ce lb="176" cb="29" le="176" ce="65" nbparm="2" id="365e40649a6358896d82d795b1389064_a813865c61bfb5fc56ebde457fece42e">
<exp pvirg="true"/>
<n32 lb="176" cb="29" le="176" ce="49">
<drx lb="176" cb="29" le="176" ce="49" kind="lvalue" id="365e40649a6358896d82d795b1389064_a813865c61bfb5fc56ebde457fece42e" nm="getFixedStack"/>
</n32>
<n32 lb="176" cb="63">
<drx lb="176" cb="63" kind="lvalue" nm="FI"/>
</n32>
<n12>
<exp pvirg="true"/>
</n12>
</ce>
</mte>
</n10>
<n32 lb="177" cb="29" le="177" ce="48">
<drx lb="177" cb="29" le="177" ce="48" id="365e40649a6358896d82d795b1389064_fe3e2bfe20d7c6c15b9b914fe96f3e09" nm="MOLoad"/>
</n32>
<n32 lb="178" cb="29" le="178" ce="49">
<mce lb="178" cb="29" le="178" ce="49" nbparm="1" id="57744cd473803f8e5c9b2de4877592a5_48848b9e7b03c9323807a5977e1eb512">
<exp pvirg="true"/>
<mex lb="178" cb="29" le="178" ce="33" id="57744cd473803f8e5c9b2de4877592a5_48848b9e7b03c9323807a5977e1eb512" nm="getObjectSize" point="1">
<n32 lb="178" cb="29">
<drx lb="178" cb="29" kind="lvalue" nm="MFI"/>
</n32>
</mex>
<n32 lb="178" cb="47">
<drx lb="178" cb="47" kind="lvalue" nm="FI"/>
</n32>
</mce>
</n32>
<mce lb="179" cb="29" le="179" ce="54" nbparm="1" id="57744cd473803f8e5c9b2de4877592a5_853887d0ccf9f86fb432f6e9b1d12b66">
<exp pvirg="true"/>
<mex lb="179" cb="29" le="179" ce="33" id="57744cd473803f8e5c9b2de4877592a5_853887d0ccf9f86fb432f6e9b1d12b66" nm="getObjectAlignment" point="1">
<n32 lb="179" cb="29">
<drx lb="179" cb="29" kind="lvalue" nm="MFI"/>
</n32>
</mex>
<n32 lb="179" cb="52">
<drx lb="179" cb="52" kind="lvalue" nm="FI"/>
</n32>
</mce>
<n12>
<exp pvirg="true"/>
</n12>
<n12>
<exp pvirg="true"/>
</n12>
</mce>
</Var>
</dst>
<dst lb="180" cb="3" le="180" ce="14">
<exp pvirg="true"/>
<Var nm="DL" value="true">
<rt>
<cr id="6ca53e77501a21bf88631b761a2f74a6_fe60359165b1d6b25b6efa2b3701b70d"/>
</rt>
<n10 lb="180" cb="12">
<typeptr id="6ca53e77501a21bf88631b761a2f74a6_58ce885e08015959aac30905be9a2071"/>
<temp/>
</n10>
</Var>
</dst>
<if lb="181" cb="3" le="181" ce="43">
<ocx lb="181" cb="7" le="181" ce="20" nbparm="2" id="dc2fe1ce3eab105adc926f5848f1baa6_dca4f45bc293a54836cf9803ebd886b3">
<exp pvirg="true"/>
<n32 lb="181" cb="9">
<drx lb="181" cb="9" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_dca4f45bc293a54836cf9803ebd886b3" nm="operator!="/>
</n32>
<n32 lb="181" cb="7">
<drx lb="181" cb="7" kind="lvalue" nm="I"/>
</n32>
<mte lb="181" cb="12" le="181" ce="20">
<exp pvirg="true"/>
<n32 lb="181" cb="12" le="181" ce="20">
<mce lb="181" cb="12" le="181" ce="20" nbparm="0" id="dc2fe1ce3eab105adc926f5848f1baa6_0c702456f42428d8ed338d91569d3241">
<exp pvirg="true"/>
<mex lb="181" cb="12" le="181" ce="16" id="dc2fe1ce3eab105adc926f5848f1baa6_0c702456f42428d8ed338d91569d3241" nm="end" point="1">
<drx lb="181" cb="12" kind="lvalue" nm="MBB"/>
</mex>
</mce>
</n32>
</mte>
</ocx>
<ocx lb="181" cb="23" le="181" ce="43" nbparm="2" id="6ca53e77501a21bf88631b761a2f74a6_bff2e9cbceaf5c722741e8e20b4cefbb">
<exp pvirg="true"/>
<n32 lb="181" cb="26">
<drx lb="181" cb="26" kind="lvalue" id="6ca53e77501a21bf88631b761a2f74a6_bff2e9cbceaf5c722741e8e20b4cefbb" nm="operator="/>
</n32>
<drx lb="181" cb="23" kind="lvalue" nm="DL"/>
<mte lb="181" cb="28" le="181" ce="43">
<exp pvirg="true"/>
<mce lb="181" cb="28" le="181" ce="43" nbparm="0" id="d038367435b7928d04997491e912d58d_15826f3d175844558c17e91a25be7a7a">
<exp pvirg="true"/>
<mex lb="181" cb="28" le="181" ce="31" id="d038367435b7928d04997491e912d58d_15826f3d175844558c17e91a25be7a7a" nm="getDebugLoc" arrow="1">
<n32 lb="181" cb="28">
<ocx lb="181" cb="28" nbparm="1" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05">
<exp pvirg="true"/>
<n32 lb="181" cb="29">
<drx lb="181" cb="29" kind="lvalue" id="dc2fe1ce3eab105adc926f5848f1baa6_7d480c7d53b813bf0cdf6625e80b3d05" nm="operator-&gt;"/>
</n32>
<n32 lb="181" cb="28">
<drx lb="181" cb="28" kind="lvalue" nm="I"/>
</n32>
</ocx>
</n32>
</mex>
</mce>
</mte>
</ocx>
</if>
<mce lb="209" cb="3" le="209" ce="70" nbparm="6" id="b08ee5109a4d2aea3d861667cfd23aaf_e572d0726dddadb7c47e79c0cb1cfdc3">
<exp pvirg="true"/>
<mex lb="209" cb="3" le="209" ce="21" id="b08ee5109a4d2aea3d861667cfd23aaf_e572d0726dddadb7c47e79c0cb1cfdc3" nm="loadRegFromStackSlot" arrow="1">
<n32 lb="209" cb="21">
<n32 lb="209" cb="21">
<n19 lb="209" cb="21"/>
</n32>
</n32>
</mex>
<drx lb="209" cb="42" kind="lvalue" nm="MBB"/>
<n10 lb="209" cb="47">
<typeptr id="dc2fe1ce3eab105adc926f5848f1baa6_dd1eea613f7664c83f6c41f4f5e691ed">
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<rt>
<cts id="cf80d347400835f00b932d17946e2cd9_d2bacc8281a77e8dba37cb711d99aa30">
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</template_arguments>
</cts>
</rt>
</template_arguments>
</typeptr>
<temp/>
<n32 lb="209" cb="47">
<drx lb="209" cb="47" kind="lvalue" nm="I"/>
</n32>
</n10>
<n32 lb="209" cb="50">
<drx lb="209" cb="50" kind="lvalue" nm="DestReg"/>
</n32>
<n32 lb="209" cb="59">
<drx lb="209" cb="59" kind="lvalue" nm="FI"/>
</n32>
<n32 lb="209" cb="63">
<drx lb="209" cb="63" kind="lvalue" nm="RC"/>
</n32>
<n32 lb="209" cb="67">
<drx lb="209" cb="67" kind="lvalue" nm="TRI"/>
</n32>
</mce>
</u>

</Stmt>
</m>
<f namespace="llvm" name="emitT2RegPlusImmediate" id="ccceff5fcaac90faf33d1f816a8d133b_77dbff3f15a82b4b4d36555a210507d0" file="1" linestart="212" lineend="330" previous="b08ee5109a4d2aea3d861667cfd23aaf_77dbff3f15a82b4b4d36555a210507d0" access="none" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="MBB" proto="llvm::MachineBasicBlock &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="dc2fe1ce3eab105adc926f5848f1baa6_373be00984c6dbc0e0fb489ab92aafe0"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MBBI" proto="MachineBasicBlock::iterator &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<ety>
<Tdef>
<tss>
<templatebase id="dc2fe1ce3eab105adc926f5848f1baa6_eaab06caa698bbe9228a38ec2ed23368"/>
<template_arguments>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
<Tdef>
<ety>
<Tdef>
<ety>
<Tdef>
<tss>
<templatebase id="cf80d347400835f00b932d17946e2cd9_b3cc3aee190ebc2ee3b34154d56a4c56"/>
<template_arguments>
<sttp/>
</template_arguments>
</tss>
</Tdef>
</ety>
</Tdef>
</ety>
</Tdef>
</template_arguments>
</tss>
</Tdef>
</ety>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="dl" proto="llvm::DebugLoc" access2="none">
<rt>
<cr id="6ca53e77501a21bf88631b761a2f74a6_fe60359165b1d6b25b6efa2b3701b70d"/>
</rt>
<Stmt>

</Stmt>
</p>
<p name="DestReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="BaseReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="NumBytes" proto="int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="int"/>
<Stmt>

</Stmt>
</p>
<p name="Pred" proto="ARMCC::CondCodes" isLiteral="true" access2="none">
<ety>
<et>
<e id="9ae88c1643aad111cfd208406cc6b04a_74e40ba9de52e62d66e8b5bb0bc8edd2"/>
</et>
</ety>
<Stmt>

</Stmt>
</p>
<p name="PredReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="TII" proto="const llvm::ARMBaseInstrInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="b08ee5109a4d2aea3d861667cfd23aaf_9b505b831079eb1a273b49419189db5b"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MIFlags" proto="unsigned int" isLiteral="true" isPrimitive="true" init="true" access2="none">
<bt name="unsigned int"/>
<Stmt>
<n32 lb="410" cb="77">
<n45 lb="410" cb="77">
<flit/>
</n45>
</n32>

</Stmt>
</p>
<Stmt>
<u lb="216" cb="79" le="330" ce="1">
<if lb="217" cb="3" le="222" ce="3">
<xop lb="217" cb="7" le="217" ce="35" kind="&amp;&amp;">
<xop lb="217" cb="7" le="217" ce="19" kind="==">
<n32 lb="217" cb="7">
<drx lb="217" cb="7" kind="lvalue" nm="NumBytes"/>
</n32>
<n45 lb="217" cb="19"/>
</xop>
<xop lb="217" cb="24" le="217" ce="35" kind="!=">
<n32 lb="217" cb="24">
<drx lb="217" cb="24" kind="lvalue" nm="DestReg"/>
</n32>
<n32 lb="217" cb="35">
<drx lb="217" cb="35" kind="lvalue" nm="BaseReg"/>
</n32>
</xop>
</xop>
<u lb="217" cb="44" le="222" ce="3">
<rx lb="221" cb="5" pvirg="true"/>
</u>
</if>
<dst lb="224" cb="3" le="224" ce="28">
<exp pvirg="true"/>
<Var nm="isSub" value="true">
<bt name="bool"/>
<xop lb="224" cb="16" le="224" ce="27" kind="&lt;">
<n32 lb="224" cb="16">
<drx lb="224" cb="16" kind="lvalue" nm="NumBytes"/>
</n32>
<n45 lb="224" cb="27"/>
</xop>
</Var>
</dst>
<if lb="225" cb="3" le="225" ce="26">
<n32 lb="225" cb="7">
<drx lb="225" cb="7" kind="lvalue" nm="isSub"/>
</n32>
<xop lb="225" cb="14" le="225" ce="26" kind="=">
<drx lb="225" cb="14" kind="lvalue" nm="NumBytes"/>
<uo lb="225" cb="25" le="225" ce="26" kind="-">
<n32 lb="225" cb="26">
<drx lb="225" cb="26" kind="lvalue" nm="NumBytes"/>
</n32>
</uo>
</xop>
</if>
<wy lb="266" cb="3" le="329" ce="3">
<n32 lb="266" cb="10">
<n32 lb="266" cb="10">
<drx lb="266" cb="10" kind="lvalue" nm="NumBytes"/>
</n32>
</n32>
<u lb="266" cb="20" le="329" ce="3">
<dst lb="267" cb="5" le="267" ce="32">
<exp pvirg="true"/>
<Var nm="ThisVal" value="true">
<bt name="unsigned int"/>
<n32 lb="267" cb="24">
<n32 lb="267" cb="24">
<drx lb="267" cb="24" kind="lvalue" nm="NumBytes"/>
</n32>
</n32>
</Var>
</dst>
<dst lb="268" cb="5" le="268" ce="21">
<exp pvirg="true"/>
<Var nm="Opc" value="true">
<bt name="unsigned int"/>
<n32 lb="268" cb="20">
<n45 lb="268" cb="20"/>
</n32>
</Var>
</dst>
<dst lb="277" cb="5" le="277" ce="25">
<exp pvirg="true"/>
<Var nm="HasCCOut" value="true">
<bt name="bool"/>
<n9 lb="277" cb="21"/>
</Var>
</dst>
<dst lb="321" cb="5" le="324" ce="59">
<exp pvirg="true"/>
<Var nm="MIB" value="true">
<rt>
<cr id="32975a63c2ff844fe8824398e471d60a_1438597d7eaf2dd7c745676415aeb79c"/>
</rt>
</Var>
</dst>
<if lb="325" cb="5" le="326" ce="23">
<n32 lb="325" cb="9">
<drx lb="325" cb="9" kind="lvalue" nm="HasCCOut"/>
</n32>
<ce lb="326" cb="7" le="326" ce="23" nbparm="1" id="b08ee5109a4d2aea3d861667cfd23aaf_2ae9b50a8637e04bfd6de44de8699422">
<exp pvirg="true"/>
<n32 lb="326" cb="7">
<drx lb="326" cb="7" kind="lvalue" id="b08ee5109a4d2aea3d861667cfd23aaf_2ae9b50a8637e04bfd6de44de8699422" nm="AddDefaultCC"/>
</n32>
<n32 lb="326" cb="20">
<drx lb="326" cb="20" kind="lvalue" nm="MIB"/>
</n32>
</ce>
</if>
<xop lb="328" cb="5" le="328" ce="15" kind="=">
<drx lb="328" cb="5" kind="lvalue" nm="BaseReg"/>
<n32 lb="328" cb="15">
<drx lb="328" cb="15" kind="lvalue" nm="DestReg"/>
</n32>
</xop>
</u>
</wy>
</u>

</Stmt>
</f>
<f name="negativeOffsetOpcode" id="ccceff5fcaac90faf33d1f816a8d133b_7d3b292b74d3202f6b2bdcf4ba726830" file="1" linestart="332" lineend="362" access="none" storage="static" hasbody="true" isdef="true">
<fpt proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="opcode" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="334" cb="1" le="362" ce="1">
<sy lb="335" cb="3" le="359" ce="3">
<n32 lb="335" cb="11">
<drx lb="335" cb="11" kind="lvalue" nm="opcode"/>
</n32>
<u lb="335" cb="19" le="359" ce="3">
<rx lb="355" cb="5" le="355" ce="12" pvirg="true">
<n32 lb="355" cb="12">
<drx lb="355" cb="12" kind="lvalue" nm="opcode"/>
</n32>
</rx>
<dx lb="357" cb="3" le="358" ce="5">
<bks lb="358" cb="5"/>
</dx>
</u>
</sy>
<rx lb="361" cb="3" le="361" ce="10" pvirg="true">
<n32 lb="361" cb="10">
<n45 lb="361" cb="10">
<flit/>
</n45>
</n32>
</rx>
</u>

</Stmt>
</f>
<f name="positiveOffsetOpcode" id="ccceff5fcaac90faf33d1f816a8d133b_ed5bf076b6714f5696a0943daf930e0f" file="1" linestart="364" lineend="394" access="none" storage="static" hasbody="true" isdef="true">
<fpt proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="opcode" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="366" cb="1" le="394" ce="1">
<sy lb="367" cb="3" le="391" ce="3">
<n32 lb="367" cb="11">
<drx lb="367" cb="11" kind="lvalue" nm="opcode"/>
</n32>
<u lb="367" cb="19" le="391" ce="3">
<rx lb="387" cb="5" le="387" ce="12" pvirg="true">
<n32 lb="387" cb="12">
<drx lb="387" cb="12" kind="lvalue" nm="opcode"/>
</n32>
</rx>
<dx lb="389" cb="3" le="390" ce="5">
<bks lb="390" cb="5"/>
</dx>
</u>
</sy>
<rx lb="393" cb="3" le="393" ce="10" pvirg="true">
<n32 lb="393" cb="10">
<n45 lb="393" cb="10">
<flit/>
</n45>
</n32>
</rx>
</u>

</Stmt>
</f>
<f name="immediateOffsetOpcode" id="ccceff5fcaac90faf33d1f816a8d133b_1df8d22d4617beddbdb70333baf02d5a" file="1" linestart="396" lineend="435" access="none" storage="static" hasbody="true" isdef="true">
<fpt proto="unsigned int">
<bt name="unsigned int"/>
</fpt>
<p name="opcode" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="398" cb="1" le="435" ce="1">
<sy lb="399" cb="3" le="432" ce="3">
<n32 lb="399" cb="11">
<drx lb="399" cb="11" kind="lvalue" nm="opcode"/>
</n32>
<u lb="399" cb="19" le="432" ce="3">
<rx lb="428" cb="5" le="428" ce="12" pvirg="true">
<n32 lb="428" cb="12">
<drx lb="428" cb="12" kind="lvalue" nm="opcode"/>
</n32>
</rx>
<dx lb="430" cb="3" le="431" ce="5">
<bks lb="431" cb="5"/>
</dx>
</u>
</sy>
<rx lb="434" cb="3" le="434" ce="10" pvirg="true">
<n32 lb="434" cb="10">
<n45 lb="434" cb="10">
<flit/>
</n45>
</n32>
</rx>
</u>

</Stmt>
</f>
<f namespace="llvm" name="rewriteT2FrameIndex" id="ccceff5fcaac90faf33d1f816a8d133b_7f964122207da9e2f201a309671b38ec" file="1" linestart="437" lineend="622" previous="b08ee5109a4d2aea3d861667cfd23aaf_7f964122207da9e2f201a309671b38ec" access="none" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="llvm::MachineInstr &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="FrameRegIdx" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="FrameReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="Offset" proto="int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="TII" proto="const llvm::ARMBaseInstrInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="b08ee5109a4d2aea3d861667cfd23aaf_9b505b831079eb1a273b49419189db5b"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="439" cb="61" le="622" ce="1">
<dst lb="440" cb="3" le="440" ce="35">
<exp pvirg="true"/>
<Var nm="Opcode" value="true">
<bt name="unsigned int"/>
<n32 lb="440" cb="21" le="440" ce="34">
<mce lb="440" cb="21" le="440" ce="34" nbparm="0" id="d038367435b7928d04997491e912d58d_7b9d7ee4c7eb9962afc86e711d2a5f73">
<exp pvirg="true"/>
<mex lb="440" cb="21" le="440" ce="24" id="d038367435b7928d04997491e912d58d_7b9d7ee4c7eb9962afc86e711d2a5f73" nm="getOpcode" point="1">
<n32 lb="440" cb="21">
<drx lb="440" cb="21" kind="lvalue" nm="MI"/>
</n32>
</mex>
</mce>
</n32>
</Var>
</dst>
<dst lb="441" cb="3" le="441" ce="41">
<exp pvirg="true"/>
<Var nm="Desc">
<lrf>
<QualType const="true">
<rt>
<cr id="4a2ff077d443c99e1182a35779fbc93e_909e0cc90563445957ef8449584561cd"/>
</rt>
</QualType>
</lrf>
<mce lb="441" cb="29" le="441" ce="40" nbparm="0" id="d038367435b7928d04997491e912d58d_5e5eae97b83bcc7b0922c0306d95da9b">
<exp pvirg="true"/>
<mex lb="441" cb="29" le="441" ce="32" id="d038367435b7928d04997491e912d58d_5e5eae97b83bcc7b0922c0306d95da9b" nm="getDesc" point="1">
<n32 lb="441" cb="29">
<drx lb="441" cb="29" kind="lvalue" nm="MI"/>
</n32>
</mex>
</mce>
</Var>
</dst>
<dst lb="442" cb="3" le="442" ce="59">
<exp pvirg="true"/>
<Var nm="AddrMode" value="true">
<bt name="unsigned int"/>
<n32 lb="442" cb="23" le="442" ce="58">
<n46 lb="442" cb="23" le="442" ce="58">
<exp pvirg="true"/>
<xop lb="442" cb="24" le="442" ce="46" kind="&amp;">
<n32 lb="442" cb="24" le="442" ce="29">
<mex lb="442" cb="24" le="442" ce="29" kind="lvalue" id="4a2ff077d443c99e1182a35779fbc93e_ea8d632a8cd33cc06ec4b19d36dc0708" nm="TSFlags" point="1">
<drx lb="442" cb="24" kind="lvalue" nm="Desc"/>
</mex>
</n32>
<n32 lb="442" cb="39" le="442" ce="46">
<drx lb="442" cb="39" le="442" ce="46" id="9ae88c1643aad111cfd208406cc6b04a_680ac5e9a3534c48d73b11620fa7042c" nm="AddrModeMask"/>
</n32>
</xop>
</n46>
</n32>
</Var>
</dst>
<dst lb="443" cb="3" le="443" ce="21">
<exp pvirg="true"/>
<Var nm="isSub" value="true">
<bt name="bool"/>
<n9 lb="443" cb="16"/>
</Var>
</dst>
<xop lb="620" cb="3" le="620" ce="32" kind="=">
<drx lb="620" cb="3" kind="lvalue" nm="Offset"/>
<co lb="620" cb="12" le="620" ce="32">
<exp pvirg="true"/>
<n32 lb="620" cb="12" le="620" ce="18">
<n46 lb="620" cb="12" le="620" ce="18">
<exp pvirg="true"/>
<drx lb="620" cb="13" kind="lvalue" nm="isSub"/>
</n46>
</n32>
<uo lb="620" cb="22" le="620" ce="23" kind="-">
<n32 lb="620" cb="23">
<drx lb="620" cb="23" kind="lvalue" nm="Offset"/>
</n32>
</uo>
<n32 lb="620" cb="32">
<drx lb="620" cb="32" kind="lvalue" nm="Offset"/>
</n32>
</co>
</xop>
<rx lb="621" cb="3" le="621" ce="20" pvirg="true">
<xop lb="621" cb="10" le="621" ce="20" kind="==">
<n32 lb="621" cb="10">
<drx lb="621" cb="10" kind="lvalue" nm="Offset"/>
</n32>
<n45 lb="621" cb="20">
<flit/>
</n45>
</xop>
</rx>
</u>

</Stmt>
</f>
<f namespace="llvm" name="getITInstrPredicate" id="ccceff5fcaac90faf33d1f816a8d133b_cdca5924510437302d910176f3d3af57" file="1" linestart="624" lineend="630" previous="27f7c847a850b67c5c819a497fa827e6_cdca5924510437302d910176f3d3af57" access="none" hasbody="true" isdef="true">
<fpt proto="ARMCC::CondCodes">
<ety>
<et>
<e id="9ae88c1643aad111cfd208406cc6b04a_74e40ba9de52e62d66e8b5bb0bc8edd2"/>
</et>
</ety>
</fpt>
<p name="MI" proto="const llvm::MachineInstr *" isPtr="true" isLiteral="true" access2="none">
<pt>
<QualType const="true">
<rt>
<cr id="d038367435b7928d04997491e912d58d_6044ca844a7ec5fb9a6c63d2c45cb3c4"/>
</rt>
</QualType>
</pt>
<Stmt>

</Stmt>
</p>
<p name="PredReg" proto="unsigned int &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<bt name="unsigned int"/>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="625" cb="70" le="630" ce="1">
<dst lb="626" cb="3" le="626" ce="33">
<exp pvirg="true"/>
<Var nm="Opc" value="true">
<bt name="unsigned int"/>
<n32 lb="626" cb="18" le="626" ce="32">
<mce lb="626" cb="18" le="626" ce="32" nbparm="0" id="d038367435b7928d04997491e912d58d_7b9d7ee4c7eb9962afc86e711d2a5f73">
<exp pvirg="true"/>
<mex lb="626" cb="18" le="626" ce="22" id="d038367435b7928d04997491e912d58d_7b9d7ee4c7eb9962afc86e711d2a5f73" nm="getOpcode" arrow="1">
<n32 lb="626" cb="18">
<drx lb="626" cb="18" kind="lvalue" nm="MI"/>
</n32>
</mex>
</mce>
</n32>
</Var>
</dst>
<rx lb="629" cb="3" le="629" ce="39" pvirg="true">
<ce lb="629" cb="10" le="629" ce="39" nbparm="2" id="b08ee5109a4d2aea3d861667cfd23aaf_efd737dd346494c2c244fb0efd62d2bd">
<exp pvirg="true"/>
<n32 lb="629" cb="10">
<drx lb="629" cb="10" kind="lvalue" id="b08ee5109a4d2aea3d861667cfd23aaf_efd737dd346494c2c244fb0efd62d2bd" nm="getInstrPredicate"/>
</n32>
<n32 lb="629" cb="28">
<drx lb="629" cb="28" kind="lvalue" nm="MI"/>
</n32>
<drx lb="629" cb="32" kind="lvalue" nm="PredReg"/>
</ce>
</rx>
</u>

</Stmt>
</f>
</tun>
</Root>
