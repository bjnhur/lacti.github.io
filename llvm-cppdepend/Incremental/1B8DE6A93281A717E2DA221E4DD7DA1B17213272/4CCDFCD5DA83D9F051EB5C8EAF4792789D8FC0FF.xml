<Root>
<Comments>
<c f="1" b="1" e="1"/>
<c f="1" b="2" e="2"/>
<c f="1" b="3" e="3"/>
<c f="1" b="4" e="4"/>
<c f="1" b="5" e="5"/>
<c f="1" b="6" e="6"/>
<c f="1" b="7" e="7"/>
<c f="1" b="8" e="8"/>
<c f="1" b="9" e="9"/>
<c f="1" b="10" e="10"/>
<c f="1" b="11" e="11"/>
<c f="1" b="12" e="12"/>
<c f="1" b="13" e="13"/>
<c f="1" b="14" e="14"/>
<c f="1" b="15" e="15"/>
<c f="1" b="16" e="16"/>
<c f="1" b="17" e="17"/>
<c f="1" b="18" e="18"/>
<c f="1" b="20" e="18"/>
<c f="1" b="34" e="34"/>
<c f="1" b="35" e="35"/>
<c f="1" b="37" e="35"/>
<c f="1" b="46" e="46"/>
<c f="1" b="47" e="47"/>
<c f="1" b="48" e="47"/>
<c f="1" b="52" e="52"/>
<c f="1" b="53" e="53"/>
<c f="1" b="54" e="53"/>
<c f="1" b="82" e="82"/>
<c f="1" b="83" e="83"/>
<c f="1" b="84" e="83"/>
<c f="1" b="103" e="103"/>
<c f="1" b="104" e="104"/>
<c f="1" b="105" e="104"/>
<c f="1" b="114" e="114"/>
<c f="1" b="115" e="115"/>
<c f="1" b="116" e="115"/>
<c f="1" b="121" e="121"/>
<c f="1" b="122" e="121"/>
<c f="1" b="127" e="127"/>
<c f="1" b="128" e="127"/>
<c f="1" b="136" e="136"/>
<c f="1" b="137" e="137"/>
<c f="1" b="138" e="137"/>
<c f="1" b="140" e="140"/>
<c f="1" b="141" e="140"/>
<c f="1" b="148" e="148"/>
<c f="1" b="149" e="148"/>
<c f="1" b="165" e="165"/>
<c f="1" b="166" e="165"/>
<c f="1" b="168" e="168"/>
<c f="1" b="169" e="169"/>
<c f="1" b="170" e="169"/>
<c f="1" b="175" e="175"/>
<c f="1" b="176" e="175"/>
<c f="1" b="186" e="186"/>
<c f="1" b="187" e="186"/>
<c f="1" b="193" e="193"/>
<c f="1" b="194" e="193"/>
<c f="1" b="198" e="198"/>
<c f="1" b="200" e="198"/>
<c f="1" b="211" e="211"/>
<c f="1" b="212" e="211"/>
<c f="1" b="226" e="226"/>
<c f="1" b="227" e="226"/>
<c f="1" b="239" e="239"/>
<c f="1" b="240" e="239"/>
<c f="1" b="250" e="250"/>
<c f="1" b="251" e="250"/>
<c f="1" b="266" e="266"/>
<c f="1" b="267" e="266"/>
</Comments>
<Macros>
<m f="1" bl="54" bc="7" el="54" ec="38"/>
<m f="1" bl="84" bc="7" el="84" ec="38"/>
<m f="1" bl="129" bc="7" el="129" ec="73"/>
</Macros>
<Comments>
<c f="2" b="1" e="1"/>
<c f="2" b="2" e="2"/>
<c f="2" b="3" e="3"/>
<c f="2" b="4" e="4"/>
<c f="2" b="5" e="5"/>
<c f="2" b="6" e="6"/>
<c f="2" b="7" e="7"/>
<c f="2" b="8" e="8"/>
<c f="2" b="10" e="8"/>
<c f="2" b="17" e="17"/>
<c f="2" b="18" e="17"/>
<c f="2" b="24" e="24"/>
<c f="2" b="25" e="24"/>
</Comments>
<Macros/>
<tun>
<ns name="llvm" id="3b95a06760bacef87d6701cbee399f76_544dadc8774ac7e8cdf9804c9bca3e1f" file="2" linestart="15" lineend="31" original="">
<v namespace="llvm" name="MIPS_NACL_BUNDLE_ALIGN" proto="const unsigned int" const="true" isLiteral="true" isPrimitive="true" id="3b95a06760bacef87d6701cbee399f76_070bff7c10e1fd2a883bfa8343391f5d" file="2" linestart="18" lineend="18" storage="static" init="true" access2="none">
<QualType const="true">
<bt name="unsigned int"/>
</QualType>
<Stmt>
<n45 lb="18" cb="48">
<flit/>
</n45>

</Stmt>
</v>
<f namespace="llvm" name="isBasePlusOffsetMemoryAccess" id="3b95a06760bacef87d6701cbee399f76_aed22476b05401801242e612a72b820f" file="2" linestart="20" lineend="21" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="Opcode" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="AddrIdx" proto="unsigned int *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="unsigned int"/>
</pt>
<Stmt>

</Stmt>
</p>
<p name="IsStore" proto="bool *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<bt name="bool"/>
</pt>
<Stmt>
<n32 lb="21" cb="51">
<n16 lb="21" cb="51">
<exp pvirg="true"/>
</n16>
</n32>

</Stmt>
</p>
</f>
<f namespace="llvm" name="baseRegNeedsLoadStoreMask" id="3b95a06760bacef87d6701cbee399f76_f6917b6ff928c0908425b2d21f373c98" file="2" linestart="22" lineend="22" access="none" hasbody="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="Reg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
</f>
<f namespace="llvm" name="createMipsNaClELFStreamer" id="3b95a06760bacef87d6701cbee399f76_b17bb027a2ec2a339c8e17efcd190be3" file="2" linestart="25" lineend="29" access="none" hasbody="true">
<fpt proto="llvm::MCELFStreamer *">
<pt>
<rt>
<cr id="93ee5ddd7bc44b127982c66c273fa016_7ac916a2a781ea79cf7d103006dbd9e4"/>
</rt>
</pt>
</fpt>
<p name="Context" proto="llvm::MCContext &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="0521a692a6291d3af05cf9d97c086513_66d5a04d181dc2d379aee3c1da9a8316"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="TAB" proto="llvm::MCAsmBackend &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="bf0e00f604504cc01afb1a81c69a4ed9_349d511eccf30687ee1a1b76545b88ad"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="OS" proto="llvm::raw_ostream &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="9e05b9b4de196b39d65ee2f40ed8c864_a0739cdc4bf02ac0124031b03f4267a6"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="Emitter" proto="llvm::MCCodeEmitter *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="bf0e00f604504cc01afb1a81c69a4ed9_af4399f4437e115c3386bc7c1443e314"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="STI" proto="const llvm::MCSubtargetInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="8d3106597c32b172c14281d3ca7a27f5_85fb6388fd852e64748b49bf30717000"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="RelaxAll" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
<p name="NoExecStack" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
</f>
</ns>
<NamedDecl name="&lt;using-directive&gt;" id="0d6036237c9a1e852385c3dbf6fbb2a1_6728b6b0f829183eb7bbd3d3d987c87d" file="1" linestart="25" lineend="25"/>
<ns name="" id="0d6036237c9a1e852385c3dbf6fbb2a1_43bdcff846069eec8f780891b4754c4e" file="1" linestart="29" lineend="198">
<v namespace="anonymous_namespace{mipsnaclelfstreamer.cpp}" name="IndirectBranchMaskReg" proto="const unsigned int" const="true" isLiteral="true" isPrimitive="true" id="0d6036237c9a1e852385c3dbf6fbb2a1_73e794f7b3992aa6d26a1dfd5ea7925f" file="1" linestart="31" lineend="31" access2="none">
<QualType const="true">
<bt name="unsigned int"/>
</QualType>
<Stmt>

</Stmt>
</v>
<v namespace="anonymous_namespace{mipsnaclelfstreamer.cpp}" name="LoadStoreStackMaskReg" proto="const unsigned int" const="true" isLiteral="true" isPrimitive="true" id="0d6036237c9a1e852385c3dbf6fbb2a1_327ee6359f92644cb8dc98c0bb4a1e62" file="1" linestart="32" lineend="32" access2="none">
<QualType const="true">
<bt name="unsigned int"/>
</QualType>
<Stmt>

</Stmt>
</v>
<cr namespace="anonymous_namespace{mipsnaclelfstreamer.cpp}" access="none" depth="4" kind="class" name="MipsNaClELFStreamer" id="0d6036237c9a1e852385c3dbf6fbb2a1_1f595b31da520caf3ca1f3145d771065" file="1" linestart="37" lineend="196">
<base access="public">
<rt>
<cr id="43f78a59988da2d5a94285271c4ec026_f1dc5ae383019711fdc430f7aaf0fb05"/>
</rt>
</base>
<cr access="public" kind="class" name="MipsNaClELFStreamer" id="0d6036237c9a1e852385c3dbf6fbb2a1_1ceb70126420936047646b3ab5b67247" file="1" linestart="37" lineend="37"/>
<Decl access="public"/>
<c name="MipsNaClELFStreamer" id="0d6036237c9a1e852385c3dbf6fbb2a1_8b7224bd920c180ca45830d0e37ed02f" file="1" linestart="39" lineend="41" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="Context" proto="llvm::MCContext &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="0521a692a6291d3af05cf9d97c086513_66d5a04d181dc2d379aee3c1da9a8316"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="TAB" proto="llvm::MCAsmBackend &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="bf0e00f604504cc01afb1a81c69a4ed9_349d511eccf30687ee1a1b76545b88ad"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="OS" proto="llvm::raw_ostream &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="9e05b9b4de196b39d65ee2f40ed8c864_a0739cdc4bf02ac0124031b03f4267a6"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="Emitter" proto="llvm::MCCodeEmitter *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="bf0e00f604504cc01afb1a81c69a4ed9_af4399f4437e115c3386bc7c1443e314"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="STI" proto="const llvm::MCSubtargetInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="8d3106597c32b172c14281d3ca7a27f5_85fb6388fd852e64748b49bf30717000"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<BaseInit>
<n10 lb="41" cb="7" le="41" ce="53">
<typeptr id="43f78a59988da2d5a94285271c4ec026_73e0dec11a98b292c227bd2a14f3b962"/>
<temp/>
<drx lb="41" cb="23" kind="lvalue" nm="Context"/>
<drx lb="41" cb="32" kind="lvalue" nm="TAB"/>
<drx lb="41" cb="37" kind="lvalue" nm="OS"/>
<n32 lb="41" cb="41">
<drx lb="41" cb="41" kind="lvalue" nm="Emitter"/>
</n32>
<drx lb="41" cb="50" kind="lvalue" nm="STI"/>
</n10>

</BaseInit>
<initlist id="0d6036237c9a1e852385c3dbf6fbb2a1_c65d4103931bba11a99f1ea7bb7d11cf">
<Stmt>
<n9 lb="41" cb="68"/>

</Stmt>
</initlist>
<Stmt>
<u lb="41" cb="75" le="41" ce="76"/>

</Stmt>
</c>
<d name="~MipsNaClELFStreamer" id="0d6036237c9a1e852385c3dbf6fbb2a1_890984158de6e2bb832079388fa76ec5" file="1" linestart="43" lineend="43" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
<exception_specifiers nothrow="true"/>
</fpt>
<Stmt>
<u lb="43" cb="26" le="43" ce="27"/>

</Stmt>
</d>
<Decl access="private"/>
<fl name="PendingCall" id="0d6036237c9a1e852385c3dbf6fbb2a1_c65d4103931bba11a99f1ea7bb7d11cf" file="1" linestart="48" lineend="48" isLiteral="true" access="private" proto="bool">
<bt name="bool"/>
</fl>
<m name="isIndirectJump" id="0d6036237c9a1e852385c3dbf6fbb2a1_588f835d915f81b5445acec62d9d9394" file="1" linestart="50" lineend="58" access="private" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MCInst &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="b3d79b6498e401eea6fd4a0a2ff0b44a_4dc08c22fc67fa33e164b3e422ed7a5c"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="50" cb="41" le="58" ce="3"/>

</Stmt>
</m>
<m name="isStackPointerFirstOperand" id="0d6036237c9a1e852385c3dbf6fbb2a1_5885278f991d73a046209004f8599e21" file="1" linestart="60" lineend="63" access="private" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MCInst &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="b3d79b6498e401eea6fd4a0a2ff0b44a_4dc08c22fc67fa33e164b3e422ed7a5c"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="60" cb="53" le="63" ce="3"/>

</Stmt>
</m>
<m name="isCall" id="0d6036237c9a1e852385c3dbf6fbb2a1_85936b493421fc4d04852abb1757e8ab" file="1" linestart="65" lineend="91" access="private" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="MI" proto="const llvm::MCInst &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="b3d79b6498e401eea6fd4a0a2ff0b44a_4dc08c22fc67fa33e164b3e422ed7a5c"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="IsIndirectCall" proto="bool *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="bool"/>
</pt>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="65" cb="55" le="91" ce="3">
<dst lb="66" cb="5" le="66" ce="37">
<exp pvirg="true"/>
<Var nm="Opcode" value="true">
<bt name="unsigned int"/>
<mce lb="66" cb="23" le="66" ce="36" nbparm="0" id="b3d79b6498e401eea6fd4a0a2ff0b44a_46b3bb981e3eac72bf4a064f46183045">
<exp pvirg="true"/>
<mex lb="66" cb="23" le="66" ce="26" id="b3d79b6498e401eea6fd4a0a2ff0b44a_46b3bb981e3eac72bf4a064f46183045" nm="getOpcode" point="1">
<drx lb="66" cb="23" kind="lvalue" nm="MI"/>
</mex>
</mce>
</Var>
</dst>
<xop lb="68" cb="5" le="68" ce="23" kind="=">
<uo lb="68" cb="5" le="68" ce="6" kind="*">
<n32 lb="68" cb="6">
<drx lb="68" cb="6" kind="lvalue" nm="IsIndirectCall"/>
</n32>
</uo>
<n9 lb="68" cb="23"/>
</xop>
<sy lb="70" cb="5" le="90" ce="5">
<n32 lb="70" cb="13">
<drx lb="70" cb="13" kind="lvalue" nm="Opcode"/>
</n32>
<u lb="70" cb="21" le="90" ce="5">
<dx lb="71" cb="5" le="72" ce="14">
<rx lb="72" cb="7" le="72" ce="14" pvirg="true">
<n9 lb="72" cb="14"/>
</rx>
</dx>
<rx lb="79" cb="7" le="79" ce="14" pvirg="true">
<n9 lb="79" cb="14"/>
</rx>
<ocast lb="84" cb="7" le="84" ce="7">
<bt name="void"/>
<n46 lb="84" cb="7" le="84" ce="7">
<exp pvirg="true"/>
<xop lb="84" cb="7" le="84" ce="7" kind="||">
<n46 lb="84" cb="7" le="84" ce="7">
<exp pvirg="true"/>
<uo lb="84" cb="7" le="84" ce="7" kind="!">
<uo lb="84" cb="7" le="84" ce="7" kind="!">
<n46 lb="84" cb="7" le="84" ce="7">
<exp pvirg="true"/>
<mce lb="84" cb="7" le="84" ce="7" nbparm="0" id="b3d79b6498e401eea6fd4a0a2ff0b44a_070c331d3a2d51858eb0f310526b8802">
<exp pvirg="true"/>
<mex lb="84" cb="7" le="84" ce="7" id="b3d79b6498e401eea6fd4a0a2ff0b44a_070c331d3a2d51858eb0f310526b8802" nm="isReg" point="1">
<mce lb="84" cb="7" le="84" ce="7" nbparm="1" id="b3d79b6498e401eea6fd4a0a2ff0b44a_4d6b301cee4a6f23230f1c7d167a28d3">
<exp pvirg="true"/>
<mex lb="84" cb="7" le="84" ce="7" id="b3d79b6498e401eea6fd4a0a2ff0b44a_4d6b301cee4a6f23230f1c7d167a28d3" nm="getOperand" point="1">
<drx lb="84" cb="7" kind="lvalue" nm="MI"/>
</mex>
<n32 lb="84" cb="7">
<n45 lb="84" cb="7">
<flit/>
</n45>
</n32>
</mce>
</mex>
</mce>
</n46>
</uo>
</uo>
</n46>
<n32 lb="84" cb="7" le="84" ce="7">
<n46 lb="84" cb="7" le="84" ce="7">
<exp pvirg="true"/>
<xop lb="84" cb="7" le="84" ce="7" kind=",">
<ce lb="84" cb="7" le="84" ce="7" nbparm="3" id="31c357693d52ae274c14f087014287c4_3e40221a11a600da08b516cdee0dac93">
<exp pvirg="true"/>
<n32 lb="84" cb="7">
<drx lb="84" cb="7" kind="lvalue" id="31c357693d52ae274c14f087014287c4_3e40221a11a600da08b516cdee0dac93" nm="_wassert"/>
</n32>
<n32 lb="84" cb="7">
<n52 lb="84" cb="7">
<slit/>
</n52>
</n32>
<n32 lb="84" cb="7">
<n52 lb="84" cb="7">
<slit/>
</n52>
</n32>
<n32 lb="84" cb="7">
<n45 lb="84" cb="7">
<flit/>
</n45>
</n32>
</ce>
<n45 lb="84" cb="7"/>
</xop>
</n46>
</n32>
</xop>
</n46>
</ocast>
<xop lb="88" cb="7" le="88" ce="25" kind="=">
<uo lb="88" cb="7" le="88" ce="8" kind="*">
<n32 lb="88" cb="8">
<drx lb="88" cb="8" kind="lvalue" nm="IsIndirectCall"/>
</n32>
</uo>
<n9 lb="88" cb="25"/>
</xop>
<rx lb="89" cb="7" le="89" ce="14" pvirg="true">
<n9 lb="89" cb="14"/>
</rx>
</u>
</sy>
</u>

</Stmt>
</m>
<m name="emitMask" id="0d6036237c9a1e852385c3dbf6fbb2a1_7a1a4d2f9ac3947451da7079f2a5d6a4" file="1" linestart="93" lineend="101" access="private" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="AddrReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="MaskReg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="STI" proto="const llvm::MCSubtargetInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="8d3106597c32b172c14281d3ca7a27f5_85fb6388fd852e64748b49bf30717000"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="94" cb="45" le="101" ce="3">
<dst lb="95" cb="5" le="95" ce="20">
<exp pvirg="true"/>
<Var nm="MaskInst" value="true">
<rt>
<cr id="b3d79b6498e401eea6fd4a0a2ff0b44a_4dc08c22fc67fa33e164b3e422ed7a5c"/>
</rt>
<n10 lb="95" cb="12">
<typeptr id="b3d79b6498e401eea6fd4a0a2ff0b44a_44f646e2766922fbc7c46fb70de30643"/>
<temp/>
</n10>
</Var>
</dst>
<mce lb="97" cb="5" le="97" ce="54" nbparm="1" id="b3d79b6498e401eea6fd4a0a2ff0b44a_159801fbd000a5a9f157e28e89a4bb39">
<exp pvirg="true"/>
<mex lb="97" cb="5" le="97" ce="14" id="b3d79b6498e401eea6fd4a0a2ff0b44a_159801fbd000a5a9f157e28e89a4bb39" nm="addOperand" point="1">
<drx lb="97" cb="5" kind="lvalue" nm="MaskInst"/>
</mex>
<mte lb="97" cb="25" le="97" ce="53">
<exp pvirg="true"/>
<n32 lb="97" cb="25" le="97" ce="53">
<ce lb="97" cb="25" le="97" ce="53" nbparm="1" id="b3d79b6498e401eea6fd4a0a2ff0b44a_c82ca001577182339e7d39a70306bfcc">
<exp pvirg="true"/>
<n32 lb="97" cb="25" le="97" ce="36">
<drx lb="97" cb="25" le="97" ce="36" kind="lvalue" id="b3d79b6498e401eea6fd4a0a2ff0b44a_c82ca001577182339e7d39a70306bfcc" nm="CreateReg"/>
</n32>
<n32 lb="97" cb="46">
<drx lb="97" cb="46" kind="lvalue" nm="AddrReg"/>
</n32>
</ce>
</n32>
</mte>
</mce>
<mce lb="98" cb="5" le="98" ce="54" nbparm="1" id="b3d79b6498e401eea6fd4a0a2ff0b44a_159801fbd000a5a9f157e28e89a4bb39">
<exp pvirg="true"/>
<mex lb="98" cb="5" le="98" ce="14" id="b3d79b6498e401eea6fd4a0a2ff0b44a_159801fbd000a5a9f157e28e89a4bb39" nm="addOperand" point="1">
<drx lb="98" cb="5" kind="lvalue" nm="MaskInst"/>
</mex>
<mte lb="98" cb="25" le="98" ce="53">
<exp pvirg="true"/>
<n32 lb="98" cb="25" le="98" ce="53">
<ce lb="98" cb="25" le="98" ce="53" nbparm="1" id="b3d79b6498e401eea6fd4a0a2ff0b44a_c82ca001577182339e7d39a70306bfcc">
<exp pvirg="true"/>
<n32 lb="98" cb="25" le="98" ce="36">
<drx lb="98" cb="25" le="98" ce="36" kind="lvalue" id="b3d79b6498e401eea6fd4a0a2ff0b44a_c82ca001577182339e7d39a70306bfcc" nm="CreateReg"/>
</n32>
<n32 lb="98" cb="46">
<drx lb="98" cb="46" kind="lvalue" nm="AddrReg"/>
</n32>
</ce>
</n32>
</mte>
</mce>
<mce lb="99" cb="5" le="99" ce="54" nbparm="1" id="b3d79b6498e401eea6fd4a0a2ff0b44a_159801fbd000a5a9f157e28e89a4bb39">
<exp pvirg="true"/>
<mex lb="99" cb="5" le="99" ce="14" id="b3d79b6498e401eea6fd4a0a2ff0b44a_159801fbd000a5a9f157e28e89a4bb39" nm="addOperand" point="1">
<drx lb="99" cb="5" kind="lvalue" nm="MaskInst"/>
</mex>
<mte lb="99" cb="25" le="99" ce="53">
<exp pvirg="true"/>
<n32 lb="99" cb="25" le="99" ce="53">
<ce lb="99" cb="25" le="99" ce="53" nbparm="1" id="b3d79b6498e401eea6fd4a0a2ff0b44a_c82ca001577182339e7d39a70306bfcc">
<exp pvirg="true"/>
<n32 lb="99" cb="25" le="99" ce="36">
<drx lb="99" cb="25" le="99" ce="36" kind="lvalue" id="b3d79b6498e401eea6fd4a0a2ff0b44a_c82ca001577182339e7d39a70306bfcc" nm="CreateReg"/>
</n32>
<n32 lb="99" cb="46">
<drx lb="99" cb="46" kind="lvalue" nm="MaskReg"/>
</n32>
</ce>
</n32>
</mte>
</mce>
<mce lb="100" cb="5" le="100" ce="51" nbparm="2" id="43f78a59988da2d5a94285271c4ec026_1dc2eb0f77a4877e8b03c545362fd89f">
<exp pvirg="true"/>
<mex lb="100" cb="5" le="100" ce="22" id="43f78a59988da2d5a94285271c4ec026_1dc2eb0f77a4877e8b03c545362fd89f" nm="EmitInstruction" arrow="1">
<n32 lb="100" cb="22">
<n19 lb="100" cb="22"/>
</n32>
</mex>
<n32 lb="100" cb="38">
<drx lb="100" cb="38" kind="lvalue" nm="MaskInst"/>
</n32>
<drx lb="100" cb="48" kind="lvalue" nm="STI"/>
</mce>
</u>

</Stmt>
</m>
<m name="sandboxIndirectJump" id="0d6036237c9a1e852385c3dbf6fbb2a1_548a8ce275da39c4a032f7aeaaf64a2f" file="1" linestart="105" lineend="112" access="private" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="MI" proto="const llvm::MCInst &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="b3d79b6498e401eea6fd4a0a2ff0b44a_4dc08c22fc67fa33e164b3e422ed7a5c"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="STI" proto="const llvm::MCSubtargetInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="8d3106597c32b172c14281d3ca7a27f5_85fb6388fd852e64748b49bf30717000"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="105" cb="74" le="112" ce="3">
<dst lb="106" cb="5" le="106" ce="49">
<exp pvirg="true"/>
<Var nm="AddrReg" value="true">
<bt name="unsigned int"/>
<mce lb="106" cb="24" le="106" ce="48" nbparm="0" id="b3d79b6498e401eea6fd4a0a2ff0b44a_3942ef10ecfc7acb1f17d6ecc32d4acd">
<exp pvirg="true"/>
<mex lb="106" cb="24" le="106" ce="41" id="b3d79b6498e401eea6fd4a0a2ff0b44a_3942ef10ecfc7acb1f17d6ecc32d4acd" nm="getReg" point="1">
<mce lb="106" cb="24" le="106" ce="39" nbparm="1" id="b3d79b6498e401eea6fd4a0a2ff0b44a_4d6b301cee4a6f23230f1c7d167a28d3">
<exp pvirg="true"/>
<mex lb="106" cb="24" le="106" ce="27" id="b3d79b6498e401eea6fd4a0a2ff0b44a_4d6b301cee4a6f23230f1c7d167a28d3" nm="getOperand" point="1">
<drx lb="106" cb="24" kind="lvalue" nm="MI"/>
</mex>
<n32 lb="106" cb="38">
<n45 lb="106" cb="38">
<flit/>
</n45>
</n32>
</mce>
</mex>
</mce>
</Var>
</dst>
<mce lb="108" cb="5" le="108" ce="25" nbparm="1" id="93ee5ddd7bc44b127982c66c273fa016_4b5598ed715a18046f501a52b3507dfc">
<exp pvirg="true"/>
<mex lb="108" cb="5" id="93ee5ddd7bc44b127982c66c273fa016_4b5598ed715a18046f501a52b3507dfc" nm="EmitBundleLock" arrow="1">
<n32 lb="108" cb="5">
<n19 lb="108" cb="5"/>
</n32>
</mex>
<n9 lb="108" cb="20"/>
</mce>
<mce lb="109" cb="5" le="109" ce="49" nbparm="3" id="0d6036237c9a1e852385c3dbf6fbb2a1_7a1a4d2f9ac3947451da7079f2a5d6a4">
<exp pvirg="true"/>
<mex lb="109" cb="5" id="0d6036237c9a1e852385c3dbf6fbb2a1_7a1a4d2f9ac3947451da7079f2a5d6a4" nm="emitMask" arrow="1">
<n19 lb="109" cb="5"/>
</mex>
<n32 lb="109" cb="14">
<drx lb="109" cb="14" kind="lvalue" nm="AddrReg"/>
</n32>
<n32 lb="109" cb="23">
<drx lb="109" cb="23" kind="lvalue" id="0d6036237c9a1e852385c3dbf6fbb2a1_73e794f7b3992aa6d26a1dfd5ea7925f" nm="IndirectBranchMaskReg"/>
</n32>
<drx lb="109" cb="46" kind="lvalue" nm="STI"/>
</mce>
<mce lb="110" cb="5" le="110" ce="45" nbparm="2" id="43f78a59988da2d5a94285271c4ec026_1dc2eb0f77a4877e8b03c545362fd89f">
<exp pvirg="true"/>
<mex lb="110" cb="5" le="110" ce="22" id="43f78a59988da2d5a94285271c4ec026_1dc2eb0f77a4877e8b03c545362fd89f" nm="EmitInstruction" arrow="1">
<n32 lb="110" cb="22">
<n19 lb="110" cb="22"/>
</n32>
</mex>
<drx lb="110" cb="38" kind="lvalue" nm="MI"/>
<drx lb="110" cb="42" kind="lvalue" nm="STI"/>
</mce>
<mce lb="111" cb="5" le="111" ce="22" nbparm="0" id="93ee5ddd7bc44b127982c66c273fa016_0425b11a3a137e2c3efaf4eefc5120f3">
<exp pvirg="true"/>
<mex lb="111" cb="5" id="93ee5ddd7bc44b127982c66c273fa016_0425b11a3a137e2c3efaf4eefc5120f3" nm="EmitBundleUnlock" arrow="1">
<n32 lb="111" cb="5">
<n19 lb="111" cb="5"/>
</n32>
</mex>
</mce>
</u>

</Stmt>
</m>
<m name="sandboxLoadStoreStackChange" id="0d6036237c9a1e852385c3dbf6fbb2a1_e05a8d9838a68180c2ea7033a12de3bd" file="1" linestart="116" lineend="133" access="private" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="MI" proto="const llvm::MCInst &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="b3d79b6498e401eea6fd4a0a2ff0b44a_4dc08c22fc67fa33e164b3e422ed7a5c"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="AddrIdx" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="STI" proto="const llvm::MCSubtargetInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="8d3106597c32b172c14281d3ca7a27f5_85fb6388fd852e64748b49bf30717000"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="MaskBefore" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
<p name="MaskAfter" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="118" cb="52" le="133" ce="3">
<mce lb="119" cb="5" le="119" ce="25" nbparm="1" id="93ee5ddd7bc44b127982c66c273fa016_4b5598ed715a18046f501a52b3507dfc">
<exp pvirg="true"/>
<mex lb="119" cb="5" id="93ee5ddd7bc44b127982c66c273fa016_4b5598ed715a18046f501a52b3507dfc" nm="EmitBundleLock" arrow="1">
<n32 lb="119" cb="5">
<n19 lb="119" cb="5"/>
</n32>
</mex>
<n9 lb="119" cb="20"/>
</mce>
<if lb="120" cb="5" le="124" ce="5">
<n32 lb="120" cb="9">
<drx lb="120" cb="9" kind="lvalue" nm="MaskBefore"/>
</n32>
<u lb="120" cb="21" le="124" ce="5">
<dst lb="122" cb="7" le="122" ce="57">
<exp pvirg="true"/>
<Var nm="BaseReg" value="true">
<bt name="unsigned int"/>
<mce lb="122" cb="26" le="122" ce="56" nbparm="0" id="b3d79b6498e401eea6fd4a0a2ff0b44a_3942ef10ecfc7acb1f17d6ecc32d4acd">
<exp pvirg="true"/>
<mex lb="122" cb="26" le="122" ce="49" id="b3d79b6498e401eea6fd4a0a2ff0b44a_3942ef10ecfc7acb1f17d6ecc32d4acd" nm="getReg" point="1">
<mce lb="122" cb="26" le="122" ce="47" nbparm="1" id="b3d79b6498e401eea6fd4a0a2ff0b44a_4d6b301cee4a6f23230f1c7d167a28d3">
<exp pvirg="true"/>
<mex lb="122" cb="26" le="122" ce="29" id="b3d79b6498e401eea6fd4a0a2ff0b44a_4d6b301cee4a6f23230f1c7d167a28d3" nm="getOperand" point="1">
<drx lb="122" cb="26" kind="lvalue" nm="MI"/>
</mex>
<n32 lb="122" cb="40">
<drx lb="122" cb="40" kind="lvalue" nm="AddrIdx"/>
</n32>
</mce>
</mex>
</mce>
</Var>
</dst>
<mce lb="123" cb="7" le="123" ce="51" nbparm="3" id="0d6036237c9a1e852385c3dbf6fbb2a1_7a1a4d2f9ac3947451da7079f2a5d6a4">
<exp pvirg="true"/>
<mex lb="123" cb="7" id="0d6036237c9a1e852385c3dbf6fbb2a1_7a1a4d2f9ac3947451da7079f2a5d6a4" nm="emitMask" arrow="1">
<n19 lb="123" cb="7"/>
</mex>
<n32 lb="123" cb="16">
<drx lb="123" cb="16" kind="lvalue" nm="BaseReg"/>
</n32>
<n32 lb="123" cb="25">
<drx lb="123" cb="25" kind="lvalue" id="0d6036237c9a1e852385c3dbf6fbb2a1_327ee6359f92644cb8dc98c0bb4a1e62" nm="LoadStoreStackMaskReg"/>
</n32>
<drx lb="123" cb="48" kind="lvalue" nm="STI"/>
</mce>
</u>
</if>
<mce lb="125" cb="5" le="125" ce="45" nbparm="2" id="43f78a59988da2d5a94285271c4ec026_1dc2eb0f77a4877e8b03c545362fd89f">
<exp pvirg="true"/>
<mex lb="125" cb="5" le="125" ce="22" id="43f78a59988da2d5a94285271c4ec026_1dc2eb0f77a4877e8b03c545362fd89f" nm="EmitInstruction" arrow="1">
<n32 lb="125" cb="22">
<n19 lb="125" cb="22"/>
</n32>
</mex>
<drx lb="125" cb="38" kind="lvalue" nm="MI"/>
<drx lb="125" cb="42" kind="lvalue" nm="STI"/>
</mce>
<if lb="126" cb="5" le="131" ce="5">
<n32 lb="126" cb="9">
<drx lb="126" cb="9" kind="lvalue" nm="MaskAfter"/>
</n32>
<u lb="126" cb="20" le="131" ce="5">
<dst lb="128" cb="7" le="128" ce="49">
<exp pvirg="true"/>
<Var nm="SPReg" value="true">
<bt name="unsigned int"/>
<mce lb="128" cb="24" le="128" ce="48" nbparm="0" id="b3d79b6498e401eea6fd4a0a2ff0b44a_3942ef10ecfc7acb1f17d6ecc32d4acd">
<exp pvirg="true"/>
<mex lb="128" cb="24" le="128" ce="41" id="b3d79b6498e401eea6fd4a0a2ff0b44a_3942ef10ecfc7acb1f17d6ecc32d4acd" nm="getReg" point="1">
<mce lb="128" cb="24" le="128" ce="39" nbparm="1" id="b3d79b6498e401eea6fd4a0a2ff0b44a_4d6b301cee4a6f23230f1c7d167a28d3">
<exp pvirg="true"/>
<mex lb="128" cb="24" le="128" ce="27" id="b3d79b6498e401eea6fd4a0a2ff0b44a_4d6b301cee4a6f23230f1c7d167a28d3" nm="getOperand" point="1">
<drx lb="128" cb="24" kind="lvalue" nm="MI"/>
</mex>
<n32 lb="128" cb="38">
<n45 lb="128" cb="38">
<flit/>
</n45>
</n32>
</mce>
</mex>
</mce>
</Var>
</dst>
<mce lb="130" cb="7" le="130" ce="49" nbparm="3" id="0d6036237c9a1e852385c3dbf6fbb2a1_7a1a4d2f9ac3947451da7079f2a5d6a4">
<exp pvirg="true"/>
<mex lb="130" cb="7" id="0d6036237c9a1e852385c3dbf6fbb2a1_7a1a4d2f9ac3947451da7079f2a5d6a4" nm="emitMask" arrow="1">
<n19 lb="130" cb="7"/>
</mex>
<n32 lb="130" cb="16">
<drx lb="130" cb="16" kind="lvalue" nm="SPReg"/>
</n32>
<n32 lb="130" cb="23">
<drx lb="130" cb="23" kind="lvalue" id="0d6036237c9a1e852385c3dbf6fbb2a1_327ee6359f92644cb8dc98c0bb4a1e62" nm="LoadStoreStackMaskReg"/>
</n32>
<drx lb="130" cb="46" kind="lvalue" nm="STI"/>
</mce>
</u>
</if>
<mce lb="132" cb="5" le="132" ce="22" nbparm="0" id="93ee5ddd7bc44b127982c66c273fa016_0425b11a3a137e2c3efaf4eefc5120f3">
<exp pvirg="true"/>
<mex lb="132" cb="5" id="93ee5ddd7bc44b127982c66c273fa016_0425b11a3a137e2c3efaf4eefc5120f3" nm="EmitBundleUnlock" arrow="1">
<n32 lb="132" cb="5">
<n19 lb="132" cb="5"/>
</n32>
</mex>
</mce>
</u>

</Stmt>
</m>
<Decl access="public"/>
<m name="EmitInstruction" id="0d6036237c9a1e852385c3dbf6fbb2a1_67046e2ff6772339211e263a043ce305" file="1" linestart="138" lineend="195" access="public" hasbody="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="Inst" proto="const llvm::MCInst &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="b3d79b6498e401eea6fd4a0a2ff0b44a_4dc08c22fc67fa33e164b3e422ed7a5c"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="STI" proto="const llvm::MCSubtargetInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="8d3106597c32b172c14281d3ca7a27f5_85fb6388fd852e64748b49bf30717000"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="139" cb="61" le="195" ce="3">
<if lb="141" cb="5" le="146" ce="5">
<mce lb="141" cb="9" le="141" ce="28" nbparm="1" id="0d6036237c9a1e852385c3dbf6fbb2a1_588f835d915f81b5445acec62d9d9394">
<exp pvirg="true"/>
<mex lb="141" cb="9" id="0d6036237c9a1e852385c3dbf6fbb2a1_588f835d915f81b5445acec62d9d9394" nm="isIndirectJump" arrow="1">
<n19 lb="141" cb="9"/>
</mex>
<drx lb="141" cb="24" kind="lvalue" nm="Inst"/>
</mce>
<u lb="141" cb="31" le="146" ce="5">
<if lb="142" cb="7" le="143" ce="73">
<n32 lb="142" cb="11">
<mex lb="142" cb="11" kind="lvalue" id="0d6036237c9a1e852385c3dbf6fbb2a1_c65d4103931bba11a99f1ea7bb7d11cf" nm="PendingCall" arrow="1">
<n19 lb="142" cb="11"/>
</mex>
</n32>
<ce lb="143" cb="9" le="143" ce="73" nbparm="2" id="4490f7744b0eb140a59a313798e92590_076b9cad29acb461cd973fe7b1e7adb4">
<exp pvirg="true"/>
<n32 lb="143" cb="9">
<drx lb="143" cb="9" kind="lvalue" id="4490f7744b0eb140a59a313798e92590_076b9cad29acb461cd973fe7b1e7adb4" nm="report_fatal_error"/>
</n32>
<n32 lb="143" cb="28">
<n52 lb="143" cb="28">
<slit/>
</n52>
</n32>
<n12>
<exp pvirg="true"/>
</n12>
</ce>
</if>
<mce lb="144" cb="7" le="144" ce="36" nbparm="2" id="0d6036237c9a1e852385c3dbf6fbb2a1_548a8ce275da39c4a032f7aeaaf64a2f">
<exp pvirg="true"/>
<mex lb="144" cb="7" id="0d6036237c9a1e852385c3dbf6fbb2a1_548a8ce275da39c4a032f7aeaaf64a2f" nm="sandboxIndirectJump" arrow="1">
<n19 lb="144" cb="7"/>
</mex>
<drx lb="144" cb="27" kind="lvalue" nm="Inst"/>
<drx lb="144" cb="33" kind="lvalue" nm="STI"/>
</mce>
<rx lb="145" cb="7" pvirg="true"/>
</u>
</if>
<dst lb="149" cb="5" le="149" ce="21">
<exp pvirg="true"/>
<Var nm="AddrIdx" value="true">
<bt name="unsigned int"/>
</Var>
</dst>
<dst lb="150" cb="5" le="150" ce="17">
<exp pvirg="true"/>
<Var nm="IsStore" value="true">
<bt name="bool"/>
</Var>
</dst>
<dst lb="151" cb="5" le="152" ce="62">
<exp pvirg="true"/>
<Var nm="IsMemAccess" value="true">
<bt name="bool"/>
<ce lb="151" cb="24" le="152" ce="61" nbparm="3" id="3b95a06760bacef87d6701cbee399f76_aed22476b05401801242e612a72b820f">
<exp pvirg="true"/>
<n32 lb="151" cb="24">
<drx lb="151" cb="24" kind="lvalue" id="3b95a06760bacef87d6701cbee399f76_aed22476b05401801242e612a72b820f" nm="isBasePlusOffsetMemoryAccess"/>
</n32>
<mce lb="151" cb="53" le="151" ce="68" nbparm="0" id="b3d79b6498e401eea6fd4a0a2ff0b44a_46b3bb981e3eac72bf4a064f46183045">
<exp pvirg="true"/>
<mex lb="151" cb="53" le="151" ce="58" id="b3d79b6498e401eea6fd4a0a2ff0b44a_46b3bb981e3eac72bf4a064f46183045" nm="getOpcode" point="1">
<drx lb="151" cb="53" kind="lvalue" nm="Inst"/>
</mex>
</mce>
<uo lb="151" cb="71" le="151" ce="72" kind="&amp;">
<drx lb="151" cb="72" kind="lvalue" nm="AddrIdx"/>
</uo>
<uo lb="152" cb="53" le="152" ce="54" kind="&amp;">
<drx lb="152" cb="54" kind="lvalue" nm="IsStore"/>
</uo>
</ce>
</Var>
</dst>
<dst lb="153" cb="5" le="153" ce="61">
<exp pvirg="true"/>
<Var nm="IsSPFirstOperand" value="true">
<bt name="bool"/>
<mce lb="153" cb="29" le="153" ce="60" nbparm="1" id="0d6036237c9a1e852385c3dbf6fbb2a1_5885278f991d73a046209004f8599e21">
<exp pvirg="true"/>
<mex lb="153" cb="29" id="0d6036237c9a1e852385c3dbf6fbb2a1_5885278f991d73a046209004f8599e21" nm="isStackPointerFirstOperand" arrow="1">
<n19 lb="153" cb="29"/>
</mex>
<drx lb="153" cb="56" kind="lvalue" nm="Inst"/>
</mce>
</Var>
</dst>
<if lb="154" cb="5" le="166" ce="5">
<xop lb="154" cb="9" le="154" ce="24" kind="||">
<n32 lb="154" cb="9">
<drx lb="154" cb="9" kind="lvalue" nm="IsMemAccess"/>
</n32>
<n32 lb="154" cb="24">
<drx lb="154" cb="24" kind="lvalue" nm="IsSPFirstOperand"/>
</n32>
</xop>
<u lb="154" cb="42" le="166" ce="5">
<dst lb="155" cb="7" le="157" ce="70">
<exp pvirg="true"/>
<Var nm="MaskBefore" value="true">
<bt name="bool"/>
<n46 lb="155" cb="25" le="157" ce="69">
<exp pvirg="true"/>
<xop lb="155" cb="26" le="157" ce="68" kind="&amp;&amp;">
<n32 lb="155" cb="26">
<drx lb="155" cb="26" kind="lvalue" nm="IsMemAccess"/>
</n32>
<ce lb="156" cb="29" le="157" ce="68" nbparm="1" id="3b95a06760bacef87d6701cbee399f76_f6917b6ff928c0908425b2d21f373c98">
<exp pvirg="true"/>
<n32 lb="156" cb="29">
<drx lb="156" cb="29" kind="lvalue" id="3b95a06760bacef87d6701cbee399f76_f6917b6ff928c0908425b2d21f373c98" nm="baseRegNeedsLoadStoreMask"/>
</n32>
<mce lb="156" cb="55" le="157" ce="67" nbparm="0" id="b3d79b6498e401eea6fd4a0a2ff0b44a_3942ef10ecfc7acb1f17d6ecc32d4acd">
<exp pvirg="true"/>
<mex lb="156" cb="55" le="157" ce="60" id="b3d79b6498e401eea6fd4a0a2ff0b44a_3942ef10ecfc7acb1f17d6ecc32d4acd" nm="getReg" point="1">
<mce lb="156" cb="55" le="156" ce="78" nbparm="1" id="b3d79b6498e401eea6fd4a0a2ff0b44a_4d6b301cee4a6f23230f1c7d167a28d3">
<exp pvirg="true"/>
<mex lb="156" cb="55" le="156" ce="60" id="b3d79b6498e401eea6fd4a0a2ff0b44a_4d6b301cee4a6f23230f1c7d167a28d3" nm="getOperand" point="1">
<drx lb="156" cb="55" kind="lvalue" nm="Inst"/>
</mex>
<n32 lb="156" cb="71">
<drx lb="156" cb="71" kind="lvalue" nm="AddrIdx"/>
</n32>
</mce>
</mex>
</mce>
</ce>
</xop>
</n46>
</Var>
</dst>
<dst lb="158" cb="7" le="158" ce="52">
<exp pvirg="true"/>
<Var nm="MaskAfter" value="true">
<bt name="bool"/>
<xop lb="158" cb="24" le="158" ce="45" kind="&amp;&amp;">
<n32 lb="158" cb="24">
<drx lb="158" cb="24" kind="lvalue" nm="IsSPFirstOperand"/>
</n32>
<uo lb="158" cb="44" le="158" ce="45" kind="!">
<n32 lb="158" cb="45">
<drx lb="158" cb="45" kind="lvalue" nm="IsStore"/>
</n32>
</uo>
</xop>
</Var>
</dst>
<if lb="159" cb="7" le="164" ce="7">
<xop lb="159" cb="11" le="159" ce="25" kind="||">
<n32 lb="159" cb="11">
<drx lb="159" cb="11" kind="lvalue" nm="MaskBefore"/>
</n32>
<n32 lb="159" cb="25">
<drx lb="159" cb="25" kind="lvalue" nm="MaskAfter"/>
</n32>
</xop>
<u lb="159" cb="36" le="164" ce="7">
<if lb="160" cb="9" le="161" ce="75">
<n32 lb="160" cb="13">
<mex lb="160" cb="13" kind="lvalue" id="0d6036237c9a1e852385c3dbf6fbb2a1_c65d4103931bba11a99f1ea7bb7d11cf" nm="PendingCall" arrow="1">
<n19 lb="160" cb="13"/>
</mex>
</n32>
<ce lb="161" cb="11" le="161" ce="75" nbparm="2" id="4490f7744b0eb140a59a313798e92590_076b9cad29acb461cd973fe7b1e7adb4">
<exp pvirg="true"/>
<n32 lb="161" cb="11">
<drx lb="161" cb="11" kind="lvalue" id="4490f7744b0eb140a59a313798e92590_076b9cad29acb461cd973fe7b1e7adb4" nm="report_fatal_error"/>
</n32>
<n32 lb="161" cb="30">
<n52 lb="161" cb="30"/>
</n32>
<n12>
<exp pvirg="true"/>
</n12>
</ce>
</if>
<mce lb="162" cb="9" le="162" ce="78" nbparm="5" id="0d6036237c9a1e852385c3dbf6fbb2a1_e05a8d9838a68180c2ea7033a12de3bd">
<exp pvirg="true"/>
<mex lb="162" cb="9" id="0d6036237c9a1e852385c3dbf6fbb2a1_e05a8d9838a68180c2ea7033a12de3bd" nm="sandboxLoadStoreStackChange" arrow="1">
<n19 lb="162" cb="9"/>
</mex>
<drx lb="162" cb="37" kind="lvalue" nm="Inst"/>
<n32 lb="162" cb="43">
<drx lb="162" cb="43" kind="lvalue" nm="AddrIdx"/>
</n32>
<drx lb="162" cb="52" kind="lvalue" nm="STI"/>
<n32 lb="162" cb="57">
<drx lb="162" cb="57" kind="lvalue" nm="MaskBefore"/>
</n32>
<n32 lb="162" cb="69">
<drx lb="162" cb="69" kind="lvalue" nm="MaskAfter"/>
</n32>
</mce>
<rx lb="163" cb="9" pvirg="true"/>
</u>
</if>
</u>
</if>
<dst lb="170" cb="5" le="170" ce="24">
<exp pvirg="true"/>
<Var nm="IsIndirectCall" value="true">
<bt name="bool"/>
</Var>
</dst>
<if lb="171" cb="5" le="184" ce="5">
<mce lb="171" cb="9" le="171" ce="37" nbparm="2" id="0d6036237c9a1e852385c3dbf6fbb2a1_85936b493421fc4d04852abb1757e8ab">
<exp pvirg="true"/>
<mex lb="171" cb="9" id="0d6036237c9a1e852385c3dbf6fbb2a1_85936b493421fc4d04852abb1757e8ab" nm="isCall" arrow="1">
<n19 lb="171" cb="9"/>
</mex>
<drx lb="171" cb="16" kind="lvalue" nm="Inst"/>
<uo lb="171" cb="22" le="171" ce="23" kind="&amp;">
<drx lb="171" cb="23" kind="lvalue" nm="IsIndirectCall"/>
</uo>
</mce>
<u lb="171" cb="40" le="184" ce="5">
<if lb="172" cb="7" le="173" ce="73">
<n32 lb="172" cb="11">
<mex lb="172" cb="11" kind="lvalue" id="0d6036237c9a1e852385c3dbf6fbb2a1_c65d4103931bba11a99f1ea7bb7d11cf" nm="PendingCall" arrow="1">
<n19 lb="172" cb="11"/>
</mex>
</n32>
<ce lb="173" cb="9" le="173" ce="73" nbparm="2" id="4490f7744b0eb140a59a313798e92590_076b9cad29acb461cd973fe7b1e7adb4">
<exp pvirg="true"/>
<n32 lb="173" cb="9">
<drx lb="173" cb="9" kind="lvalue" id="4490f7744b0eb140a59a313798e92590_076b9cad29acb461cd973fe7b1e7adb4" nm="report_fatal_error"/>
</n32>
<n32 lb="173" cb="28">
<n52 lb="173" cb="28"/>
</n32>
<n12>
<exp pvirg="true"/>
</n12>
</ce>
</if>
<mce lb="176" cb="7" le="176" ce="26" nbparm="1" id="93ee5ddd7bc44b127982c66c273fa016_4b5598ed715a18046f501a52b3507dfc">
<exp pvirg="true"/>
<mex lb="176" cb="7" id="93ee5ddd7bc44b127982c66c273fa016_4b5598ed715a18046f501a52b3507dfc" nm="EmitBundleLock" arrow="1">
<n32 lb="176" cb="7">
<n19 lb="176" cb="7"/>
</n32>
</mex>
<n9 lb="176" cb="22"/>
</mce>
<if lb="177" cb="7" le="180" ce="7">
<n32 lb="177" cb="11">
<drx lb="177" cb="11" kind="lvalue" nm="IsIndirectCall"/>
</n32>
<u lb="177" cb="27" le="180" ce="7">
<dst lb="178" cb="9" le="178" ce="57">
<exp pvirg="true"/>
<Var nm="TargetReg" value="true">
<bt name="unsigned int"/>
<mce lb="178" cb="30" le="178" ce="56" nbparm="0" id="b3d79b6498e401eea6fd4a0a2ff0b44a_3942ef10ecfc7acb1f17d6ecc32d4acd">
<exp pvirg="true"/>
<mex lb="178" cb="30" le="178" ce="49" id="b3d79b6498e401eea6fd4a0a2ff0b44a_3942ef10ecfc7acb1f17d6ecc32d4acd" nm="getReg" point="1">
<mce lb="178" cb="30" le="178" ce="47" nbparm="1" id="b3d79b6498e401eea6fd4a0a2ff0b44a_4d6b301cee4a6f23230f1c7d167a28d3">
<exp pvirg="true"/>
<mex lb="178" cb="30" le="178" ce="35" id="b3d79b6498e401eea6fd4a0a2ff0b44a_4d6b301cee4a6f23230f1c7d167a28d3" nm="getOperand" point="1">
<drx lb="178" cb="30" kind="lvalue" nm="Inst"/>
</mex>
<n32 lb="178" cb="46">
<n45 lb="178" cb="46">
<flit/>
</n45>
</n32>
</mce>
</mex>
</mce>
</Var>
</dst>
<mce lb="179" cb="9" le="179" ce="55" nbparm="3" id="0d6036237c9a1e852385c3dbf6fbb2a1_7a1a4d2f9ac3947451da7079f2a5d6a4">
<exp pvirg="true"/>
<mex lb="179" cb="9" id="0d6036237c9a1e852385c3dbf6fbb2a1_7a1a4d2f9ac3947451da7079f2a5d6a4" nm="emitMask" arrow="1">
<n19 lb="179" cb="9"/>
</mex>
<n32 lb="179" cb="18">
<drx lb="179" cb="18" kind="lvalue" nm="TargetReg"/>
</n32>
<n32 lb="179" cb="29">
<drx lb="179" cb="29" kind="lvalue" id="0d6036237c9a1e852385c3dbf6fbb2a1_73e794f7b3992aa6d26a1dfd5ea7925f" nm="IndirectBranchMaskReg"/>
</n32>
<drx lb="179" cb="52" kind="lvalue" nm="STI"/>
</mce>
</u>
</if>
<mce lb="181" cb="7" le="181" ce="49" nbparm="2" id="43f78a59988da2d5a94285271c4ec026_1dc2eb0f77a4877e8b03c545362fd89f">
<exp pvirg="true"/>
<mex lb="181" cb="7" le="181" ce="24" id="43f78a59988da2d5a94285271c4ec026_1dc2eb0f77a4877e8b03c545362fd89f" nm="EmitInstruction" arrow="1">
<n32 lb="181" cb="24">
<n19 lb="181" cb="24"/>
</n32>
</mex>
<drx lb="181" cb="40" kind="lvalue" nm="Inst"/>
<drx lb="181" cb="46" kind="lvalue" nm="STI"/>
</mce>
<xop lb="182" cb="7" le="182" ce="21" kind="=">
<mex lb="182" cb="7" kind="lvalue" id="0d6036237c9a1e852385c3dbf6fbb2a1_c65d4103931bba11a99f1ea7bb7d11cf" nm="PendingCall" arrow="1">
<n19 lb="182" cb="7"/>
</mex>
<n9 lb="182" cb="21"/>
</xop>
<rx lb="183" cb="7" pvirg="true"/>
</u>
</if>
<if lb="185" cb="5" le="191" ce="5">
<n32 lb="185" cb="9">
<mex lb="185" cb="9" kind="lvalue" id="0d6036237c9a1e852385c3dbf6fbb2a1_c65d4103931bba11a99f1ea7bb7d11cf" nm="PendingCall" arrow="1">
<n19 lb="185" cb="9"/>
</mex>
</n32>
<u lb="185" cb="22" le="191" ce="5">
<mce lb="187" cb="7" le="187" ce="49" nbparm="2" id="43f78a59988da2d5a94285271c4ec026_1dc2eb0f77a4877e8b03c545362fd89f">
<exp pvirg="true"/>
<mex lb="187" cb="7" le="187" ce="24" id="43f78a59988da2d5a94285271c4ec026_1dc2eb0f77a4877e8b03c545362fd89f" nm="EmitInstruction" arrow="1">
<n32 lb="187" cb="24">
<n19 lb="187" cb="24"/>
</n32>
</mex>
<drx lb="187" cb="40" kind="lvalue" nm="Inst"/>
<drx lb="187" cb="46" kind="lvalue" nm="STI"/>
</mce>
<mce lb="188" cb="7" le="188" ce="24" nbparm="0" id="93ee5ddd7bc44b127982c66c273fa016_0425b11a3a137e2c3efaf4eefc5120f3">
<exp pvirg="true"/>
<mex lb="188" cb="7" id="93ee5ddd7bc44b127982c66c273fa016_0425b11a3a137e2c3efaf4eefc5120f3" nm="EmitBundleUnlock" arrow="1">
<n32 lb="188" cb="7">
<n19 lb="188" cb="7"/>
</n32>
</mex>
</mce>
<xop lb="189" cb="7" le="189" ce="21" kind="=">
<mex lb="189" cb="7" kind="lvalue" id="0d6036237c9a1e852385c3dbf6fbb2a1_c65d4103931bba11a99f1ea7bb7d11cf" nm="PendingCall" arrow="1">
<n19 lb="189" cb="7"/>
</mex>
<n9 lb="189" cb="21"/>
</xop>
<rx lb="190" cb="7" pvirg="true"/>
</u>
</if>
<mce lb="194" cb="5" le="194" ce="47" nbparm="2" id="43f78a59988da2d5a94285271c4ec026_1dc2eb0f77a4877e8b03c545362fd89f">
<exp pvirg="true"/>
<mex lb="194" cb="5" le="194" ce="22" id="43f78a59988da2d5a94285271c4ec026_1dc2eb0f77a4877e8b03c545362fd89f" nm="EmitInstruction" arrow="1">
<n32 lb="194" cb="22">
<n19 lb="194" cb="22"/>
</n32>
</mex>
<drx lb="194" cb="38" kind="lvalue" nm="Inst"/>
<drx lb="194" cb="44" kind="lvalue" nm="STI"/>
</mce>
</u>

</Stmt>
</m>
<m name="operator=" id="0d6036237c9a1e852385c3dbf6fbb2a1_aec3f2bf75c8cf1c44ae7c061440b063" file="1" linestart="37" implicit="true" operator="true" access="public" inline="true" isdef="true">
<fpt proto="&lt;anonymous&gt;::MipsNaClELFStreamer &amp;">
<lrf>
<rt>
<cr id="0d6036237c9a1e852385c3dbf6fbb2a1_1f595b31da520caf3ca1f3145d771065"/>
</rt>
</lrf>
</fpt>
<p name="" proto="const &lt;anonymous&gt;::MipsNaClELFStreamer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0d6036237c9a1e852385c3dbf6fbb2a1_1f595b31da520caf3ca1f3145d771065"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</m>
<c name="MipsNaClELFStreamer" id="0d6036237c9a1e852385c3dbf6fbb2a1_6cf3663d90bd4c063837be33479fb42e" file="1" linestart="37" lineend="37" copyconst="true" implicit="true" access="public" inline="true" isdef="true">
<fpt proto="void">
<bt name="void"/>
</fpt>
<p name="" proto="const &lt;anonymous&gt;::MipsNaClELFStreamer &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="0d6036237c9a1e852385c3dbf6fbb2a1_1f595b31da520caf3ca1f3145d771065"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
</c>
</cr>
</ns>
<ns name="llvm" id="0d6036237c9a1e852385c3dbf6fbb2a1_544dadc8774ac7e8cdf9804c9bca3e1f" file="1" linestart="200" lineend="272" original="">
<f namespace="llvm" name="isBasePlusOffsetMemoryAccess" id="0d6036237c9a1e852385c3dbf6fbb2a1_aed22476b05401801242e612a72b820f" file="1" linestart="202" lineend="247" previous="3b95a06760bacef87d6701cbee399f76_aed22476b05401801242e612a72b820f" access="none" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="Opcode" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<p name="AddrIdx" proto="unsigned int *" isPtr="true" isLiteral="true" access2="none">
<pt>
<bt name="unsigned int"/>
</pt>
<Stmt>

</Stmt>
</p>
<p name="IsStore" proto="bool *" isPtr="true" isLiteral="true" init="true" access2="none">
<pt>
<bt name="bool"/>
</pt>
<Stmt>
<n32 lb="21" cb="51">
<n16 lb="21" cb="51">
<exp pvirg="true"/>
</n16>
</n32>

</Stmt>
</p>
<Stmt>
<u lb="203" cb="50" le="247" ce="1">
<if lb="204" cb="3" le="205" ce="16">
<n32 lb="204" cb="7">
<n32 lb="204" cb="7">
<drx lb="204" cb="7" kind="lvalue" nm="IsStore"/>
</n32>
</n32>
<xop lb="205" cb="5" le="205" ce="16" kind="=">
<uo lb="205" cb="5" le="205" ce="6" kind="*">
<n32 lb="205" cb="6">
<drx lb="205" cb="6" kind="lvalue" nm="IsStore"/>
</n32>
</uo>
<n9 lb="205" cb="16"/>
</xop>
</if>
<sy lb="207" cb="3" le="246" ce="3">
<n32 lb="207" cb="11">
<drx lb="207" cb="11" kind="lvalue" nm="Opcode"/>
</n32>
<u lb="207" cb="19" le="246" ce="3">
<dx lb="208" cb="3" le="209" ce="12">
<rx lb="209" cb="5" le="209" ce="12" pvirg="true">
<n9 lb="209" cb="12"/>
</rx>
</dx>
<xop lb="223" cb="5" le="223" ce="16" kind="=">
<uo lb="223" cb="5" le="223" ce="6" kind="*">
<n32 lb="223" cb="6">
<drx lb="223" cb="6" kind="lvalue" nm="AddrIdx"/>
</n32>
</uo>
<n32 lb="223" cb="16">
<n45 lb="223" cb="16">
<flit/>
</n45>
</n32>
</xop>
<rx lb="224" cb="5" le="224" ce="12" pvirg="true">
<n9 lb="224" cb="12"/>
</rx>
<xop lb="234" cb="5" le="234" ce="16" kind="=">
<uo lb="234" cb="5" le="234" ce="6" kind="*">
<n32 lb="234" cb="6">
<drx lb="234" cb="6" kind="lvalue" nm="AddrIdx"/>
</n32>
</uo>
<n32 lb="234" cb="16">
<n45 lb="234" cb="16"/>
</n32>
</xop>
<if lb="235" cb="5" le="236" ce="18">
<n32 lb="235" cb="9">
<n32 lb="235" cb="9">
<drx lb="235" cb="9" kind="lvalue" nm="IsStore"/>
</n32>
</n32>
<xop lb="236" cb="7" le="236" ce="18" kind="=">
<uo lb="236" cb="7" le="236" ce="8" kind="*">
<n32 lb="236" cb="8">
<drx lb="236" cb="8" kind="lvalue" nm="IsStore"/>
</n32>
</uo>
<n9 lb="236" cb="18"/>
</xop>
</if>
<rx lb="237" cb="5" le="237" ce="12" pvirg="true">
<n9 lb="237" cb="12"/>
</rx>
<xop lb="242" cb="5" le="242" ce="16" kind="=">
<uo lb="242" cb="5" le="242" ce="6" kind="*">
<n32 lb="242" cb="6">
<drx lb="242" cb="6" kind="lvalue" nm="AddrIdx"/>
</n32>
</uo>
<n32 lb="242" cb="16">
<n45 lb="242" cb="16">
<flit/>
</n45>
</n32>
</xop>
<if lb="243" cb="5" le="244" ce="18">
<n32 lb="243" cb="9">
<n32 lb="243" cb="9">
<drx lb="243" cb="9" kind="lvalue" nm="IsStore"/>
</n32>
</n32>
<xop lb="244" cb="7" le="244" ce="18" kind="=">
<uo lb="244" cb="7" le="244" ce="8" kind="*">
<n32 lb="244" cb="8">
<drx lb="244" cb="8" kind="lvalue" nm="IsStore"/>
</n32>
</uo>
<n9 lb="244" cb="18"/>
</xop>
</if>
<rx lb="245" cb="5" le="245" ce="12" pvirg="true">
<n9 lb="245" cb="12"/>
</rx>
</u>
</sy>
</u>

</Stmt>
</f>
<f namespace="llvm" name="baseRegNeedsLoadStoreMask" id="0d6036237c9a1e852385c3dbf6fbb2a1_f6917b6ff928c0908425b2d21f373c98" file="1" linestart="249" lineend="252" previous="3b95a06760bacef87d6701cbee399f76_f6917b6ff928c0908425b2d21f373c98" access="none" hasbody="true" isdef="true">
<fpt proto="bool">
<bt name="bool"/>
</fpt>
<p name="Reg" proto="unsigned int" isLiteral="true" isPrimitive="true" access2="none">
<bt name="unsigned int"/>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="249" cb="46" le="252" ce="1"/>

</Stmt>
</f>
<f namespace="llvm" name="createMipsNaClELFStreamer" id="0d6036237c9a1e852385c3dbf6fbb2a1_b17bb027a2ec2a339c8e17efcd190be3" file="1" linestart="254" lineend="270" previous="3b95a06760bacef87d6701cbee399f76_b17bb027a2ec2a339c8e17efcd190be3" access="none" hasbody="true" isdef="true">
<fpt proto="llvm::MCELFStreamer *">
<pt>
<rt>
<cr id="93ee5ddd7bc44b127982c66c273fa016_7ac916a2a781ea79cf7d103006dbd9e4"/>
</rt>
</pt>
</fpt>
<p name="Context" proto="llvm::MCContext &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="0521a692a6291d3af05cf9d97c086513_66d5a04d181dc2d379aee3c1da9a8316"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="TAB" proto="llvm::MCAsmBackend &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="bf0e00f604504cc01afb1a81c69a4ed9_349d511eccf30687ee1a1b76545b88ad"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="OS" proto="llvm::raw_ostream &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<rt>
<cr id="9e05b9b4de196b39d65ee2f40ed8c864_a0739cdc4bf02ac0124031b03f4267a6"/>
</rt>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="Emitter" proto="llvm::MCCodeEmitter *" isPtr="true" isLiteral="true" access2="none">
<pt>
<rt>
<cr id="bf0e00f604504cc01afb1a81c69a4ed9_af4399f4437e115c3386bc7c1443e314"/>
</rt>
</pt>
<Stmt>

</Stmt>
</p>
<p name="STI" proto="const llvm::MCSubtargetInfo &amp;" isRef="true" isLiteral="true" access2="none">
<lrf>
<QualType const="true">
<rt>
<cr id="8d3106597c32b172c14281d3ca7a27f5_85fb6388fd852e64748b49bf30717000"/>
</rt>
</QualType>
</lrf>
<Stmt>

</Stmt>
</p>
<p name="RelaxAll" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
<p name="NoExecStack" proto="bool" isLiteral="true" isPrimitive="true" access2="none">
<bt name="bool"/>
<Stmt>

</Stmt>
</p>
<Stmt>
<u lb="258" cb="75" le="270" ce="1">
<dst lb="259" cb="3" le="260" ce="56">
<exp pvirg="true"/>
<Var nm="S">
<pt>
<rt>
<cr id="0d6036237c9a1e852385c3dbf6fbb2a1_1f595b31da520caf3ca1f3145d771065"/>
</rt>
</pt>
<new lb="259" cb="28" le="260" ce="55">
<typeptr id="0d6036237c9a1e852385c3dbf6fbb2a1_8b7224bd920c180ca45830d0e37ed02f"/>
<exp pvirg="true"/>
<n10 lb="259" cb="32" le="260" ce="55">
<typeptr id="0d6036237c9a1e852385c3dbf6fbb2a1_8b7224bd920c180ca45830d0e37ed02f"/>
<temp/>
<drx lb="259" cb="52" kind="lvalue" nm="Context"/>
<drx lb="259" cb="61" kind="lvalue" nm="TAB"/>
<drx lb="259" cb="66" kind="lvalue" nm="OS"/>
<n32 lb="259" cb="70">
<drx lb="259" cb="70" kind="lvalue" nm="Emitter"/>
</n32>
<drx lb="260" cb="52" kind="lvalue" nm="STI"/>
</n10>
</new>
</Var>
</dst>
<if lb="261" cb="3" le="262" ce="39">
<n32 lb="261" cb="7">
<drx lb="261" cb="7" kind="lvalue" nm="RelaxAll"/>
</n32>
<mce lb="262" cb="5" le="262" ce="39" nbparm="1" id="dc0fc8f2eb97706161dc0456f9cf15db_61e0eeffd4ed1962baa641d133f88a60">
<exp pvirg="true"/>
<mex lb="262" cb="5" le="262" ce="23" id="dc0fc8f2eb97706161dc0456f9cf15db_61e0eeffd4ed1962baa641d133f88a60" nm="setRelaxAll" point="1">
<mce lb="262" cb="5" le="262" ce="21" nbparm="0" id="6a5b9a4d2d8564a0b3be1655e7274ecc_d6e8ae3a15fa453b2266535e1c3f588f">
<exp pvirg="true"/>
<mex lb="262" cb="5" le="262" ce="8" id="6a5b9a4d2d8564a0b3be1655e7274ecc_d6e8ae3a15fa453b2266535e1c3f588f" nm="getAssembler" arrow="1">
<n32 lb="262" cb="5">
<n32 lb="262" cb="5">
<drx lb="262" cb="5" kind="lvalue" nm="S"/>
</n32>
</n32>
</mex>
</mce>
</mex>
<n9 lb="262" cb="35"/>
</mce>
</if>
<if lb="263" cb="3" le="264" ce="42">
<n32 lb="263" cb="7">
<drx lb="263" cb="7" kind="lvalue" nm="NoExecStack"/>
</n32>
<mce lb="264" cb="5" le="264" ce="42" nbparm="1" id="dc0fc8f2eb97706161dc0456f9cf15db_ce85403e7beea27919d2ffd05a1f5426">
<exp pvirg="true"/>
<mex lb="264" cb="5" le="264" ce="23" id="dc0fc8f2eb97706161dc0456f9cf15db_ce85403e7beea27919d2ffd05a1f5426" nm="setNoExecStack" point="1">
<mce lb="264" cb="5" le="264" ce="21" nbparm="0" id="6a5b9a4d2d8564a0b3be1655e7274ecc_d6e8ae3a15fa453b2266535e1c3f588f">
<exp pvirg="true"/>
<mex lb="264" cb="5" le="264" ce="8" id="6a5b9a4d2d8564a0b3be1655e7274ecc_d6e8ae3a15fa453b2266535e1c3f588f" nm="getAssembler" arrow="1">
<n32 lb="264" cb="5">
<n32 lb="264" cb="5">
<drx lb="264" cb="5" kind="lvalue" nm="S"/>
</n32>
</n32>
</mex>
</mce>
</mex>
<n9 lb="264" cb="38"/>
</mce>
</if>
<mce lb="267" cb="3" le="267" ce="48" nbparm="1" id="93ee5ddd7bc44b127982c66c273fa016_ca9747ffbc89bd8e8c9f9d0204919a94">
<exp pvirg="true"/>
<mex lb="267" cb="3" le="267" ce="6" id="93ee5ddd7bc44b127982c66c273fa016_ca9747ffbc89bd8e8c9f9d0204919a94" nm="EmitBundleAlignMode" arrow="1">
<n32 lb="267" cb="3">
<n32 lb="267" cb="3">
<drx lb="267" cb="3" kind="lvalue" nm="S"/>
</n32>
</n32>
</mex>
<n32 lb="267" cb="26">
<drx lb="267" cb="26" kind="lvalue" id="3b95a06760bacef87d6701cbee399f76_070bff7c10e1fd2a883bfa8343391f5d" nm="MIPS_NACL_BUNDLE_ALIGN"/>
</n32>
</mce>
<rx lb="269" cb="3" le="269" ce="10" pvirg="true">
<n32 lb="269" cb="10">
<n32 lb="269" cb="10">
<drx lb="269" cb="10" kind="lvalue" nm="S"/>
</n32>
</n32>
</rx>
</u>

</Stmt>
</f>
</ns>
</tun>
</Root>
